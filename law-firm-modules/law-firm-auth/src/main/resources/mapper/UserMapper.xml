<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawfirm.model.auth.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.lawfirm.model.auth.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="real_name" property="realName"/>
        <result column="avatar" property="avatar"/>
        <result column="email" property="email"/>
        <result column="mobile" property="mobile"/>
        <result column="gender" property="gender"/>
        <result column="status" property="status"/>
        <result column="position_id" property="positionId"/>
        <result column="user_type" property="userType"/>
        <result column="last_login_time" property="lastLoginTime"/>
        <result column="last_login_ip" property="lastLoginIp"/>
        <result column="account_expire_time" property="accountExpireTime"/>
        <result column="password_expire_time" property="passwordExpireTime"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, username, password, nickname, real_name, avatar, email, mobile, gender, status, 
        position_id, user_type, last_login_time, last_login_ip, account_expire_time, password_expire_time, 
        tenant_id, created_by, created_time, updated_by, updated_time, deleted
    </sql>

    <!-- 根据ID查询用户 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_user
        WHERE id = #{id} AND deleted = 0
    </select>

    <!-- 根据用户名查询用户 -->
    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_user
        WHERE username = #{username} AND deleted = 0
    </select>

    <!-- 根据邮箱查询用户 -->
    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_user
        WHERE email = #{email} AND deleted = 0
    </select>

    <!-- 根据手机号查询用户 -->
    <select id="selectByMobile" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_user
        WHERE mobile = #{mobile} AND deleted = 0
    </select>

    <!-- 分页查询用户列表 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_user
        WHERE deleted = 0
        <if test="username != null and username != ''">
            AND username LIKE CONCAT('%', #{username}, '%')
        </if>
        <if test="realName != null and realName != ''">
            AND real_name LIKE CONCAT('%', #{realName}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="userType != null">
            AND user_type = #{userType}
        </if>
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET (#{pageNum} - 1) * #{pageSize}
    </select>

    <!-- 查询用户总数 -->
    <select id="selectCount" resultType="int">
        SELECT COUNT(*)
        FROM auth_user
        WHERE deleted = 0
        <if test="username != null and username != ''">
            AND username LIKE CONCAT('%', #{username}, '%')
        </if>
        <if test="realName != null and realName != ''">
            AND real_name LIKE CONCAT('%', #{realName}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        <if test="userType != null">
            AND user_type = #{userType}
        </if>
    </select>

    <!-- 新增用户 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO auth_user (
            username, password, nickname, real_name, avatar, email, mobile, gender, status, 
            position_id, user_type, last_login_time, last_login_ip, account_expire_time, 
            password_expire_time, tenant_id, created_by, updated_by
        ) VALUES (
            #{username}, #{password}, #{nickname}, #{realName}, #{avatar}, #{email}, #{mobile}, 
            #{gender}, #{status}, #{positionId}, #{userType}, #{lastLoginTime}, #{lastLoginIp}, 
            #{accountExpireTime}, #{passwordExpireTime}, #{tenantId}, #{createdBy}, #{updatedBy}
        )
    </insert>

    <!-- 更新用户 -->
    <update id="update">
        UPDATE auth_user
        <set>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="email != null">email = #{email},</if>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="status != null">status = #{status},</if>
            <if test="positionId != null">position_id = #{positionId},</if>
            <if test="userType != null">user_type = #{userType},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <if test="lastLoginIp != null">last_login_ip = #{lastLoginIp},</if>
            <if test="accountExpireTime != null">account_expire_time = #{accountExpireTime},</if>
            <if test="passwordExpireTime != null">password_expire_time = #{passwordExpireTime},</if>
            <if test="password != null">password = #{password},</if>
            updated_by = #{updatedBy},
            updated_time = NOW()
        </set>
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 删除用户（逻辑删除） -->
    <update id="deleteById">
        UPDATE auth_user
        SET deleted = 1, updated_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量删除用户（逻辑删除） -->
    <update id="deleteBatchByIds">
        UPDATE auth_user
        SET deleted = 1, updated_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE auth_user
        SET password = #{newPassword}, updated_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE auth_user
        SET status = #{status}, updated_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>
</mapper>
