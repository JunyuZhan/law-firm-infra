<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lawfirm.model.auth.mapper.RoleMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.lawfirm.model.auth.entity.Role">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_code" property="roleCode"/>
        <result column="description" property="description"/>
        <result column="status" property="status"/>
        <result column="tenant_id" property="tenantId"/>
        <result column="created_by" property="createdBy"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_by" property="updatedBy"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="deleted" property="deleted"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, role_name, role_code, description, status, tenant_id, created_by, created_time, updated_by, updated_time, deleted
    </sql>

    <!-- 根据ID查询角色 -->
    <select id="selectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_role
        WHERE id = #{id} AND deleted = 0
    </select>
    
    <!-- 根据编码查询角色 -->
    <select id="selectByCode" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_role
        WHERE role_code = #{roleCode} AND deleted = 0
    </select>

    <!-- 查询所有角色 -->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_role
        WHERE deleted = 0
        ORDER BY id ASC
    </select>

    <!-- 分页查询角色列表 -->
    <select id="selectPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM auth_role
        WHERE deleted = 0
        <if test="roleName != null and roleName != ''">
            AND role_name LIKE CONCAT('%', #{roleName}, '%')
        </if>
        <if test="roleCode != null and roleCode != ''">
            AND role_code LIKE CONCAT('%', #{roleCode}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
        ORDER BY id ASC
        LIMIT #{pageSize} OFFSET (#{pageNum} - 1) * #{pageSize}
    </select>

    <!-- 查询角色总数 -->
    <select id="selectCount" resultType="int">
        SELECT COUNT(*)
        FROM auth_role
        WHERE deleted = 0
        <if test="roleName != null and roleName != ''">
            AND role_name LIKE CONCAT('%', #{roleName}, '%')
        </if>
        <if test="roleCode != null and roleCode != ''">
            AND role_code LIKE CONCAT('%', #{roleCode}, '%')
        </if>
        <if test="status != null">
            AND status = #{status}
        </if>
    </select>

    <!-- 查询用户拥有的角色 -->
    <select id="selectByUserId" resultMap="BaseResultMap">
        SELECT r.*
        FROM auth_role r
        JOIN auth_user_role ur ON r.id = ur.role_id
        WHERE ur.user_id = #{userId} AND r.deleted = 0
        ORDER BY r.id ASC
    </select>

    <!-- 新增角色 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO auth_role (
            role_name, role_code, description, status, tenant_id, created_by, updated_by
        ) VALUES (
            #{roleName}, #{roleCode}, #{description}, #{status}, #{tenantId}, #{createdBy}, #{updatedBy}
        )
    </insert>

    <!-- 更新角色 -->
    <update id="update">
        UPDATE auth_role
        <set>
            <if test="roleName != null">role_name = #{roleName},</if>
            <if test="roleCode != null">role_code = #{roleCode},</if>
            <if test="description != null">description = #{description},</if>
            <if test="status != null">status = #{status},</if>
            updated_by = #{updatedBy},
            updated_time = NOW()
        </set>
        WHERE id = #{id} AND deleted = 0
    </update>

    <!-- 删除角色（逻辑删除） -->
    <update id="deleteById">
        UPDATE auth_role
        SET deleted = 1, updated_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 批量删除角色（逻辑删除） -->
    <update id="deleteBatchByIds">
        UPDATE auth_role
        SET deleted = 1, updated_time = NOW()
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 更新角色状态 -->
    <update id="updateStatus">
        UPDATE auth_role
        SET status = #{status}, updated_time = NOW()
        WHERE id = #{id} AND deleted = 0
    </update>
</mapper>
