{
  "summary": {
    "total_files": 51,
    "version_conflicts": 0,
    "errors": 0,
    "warnings": 0
  },
  "files": [
    {
      "path": "law-firm-modules\\law-firm-task\\src\\main\\resources\\META-INF\\db\\migration\\V13000__task_module_description.sql",
      "filename": "V13000__task_module_description.sql",
      "version": 13000,
      "module": "law-firm-modules",
      "content": "-- 任务管理模块说明\n-- 版本: V13000\n-- 模块: 任务管理模块 (V13000-V13999)\n-- 创建时间: 2023-06-01\n-- 说明: 任务管理功能模块架构说明\n\n/*\n=============================================================================\n                            任务管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n任务管理模块负责律师事务所的任务分配、执行、跟踪和管理，包括：\n- 任务创建与分配\n- 任务执行跟踪\n- 任务协作管理\n- 任务进度监控\n- 工作流集成\n- 时间统计分析\n- 绩效评估支持\n- 任务模板管理\n- 提醒通知机制\n\n二、版本规划 (V13000-V13999)\n- V13000: 模块说明文档\n- V13001: 表结构定义\n- V13002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 任务基础管理\n   - task_task: 任务主表\n   - task_content: 任务内容详情\n   - task_attachment: 任务附件\n\n2. 分类标签管理\n   - task_category: 任务分类\n   - task_tag: 任务标签\n   - task_tag_relation: 标签关联\n\n3. 协作管理\n   - task_participant: 任务参与者\n   - task_assignment: 任务分配记录\n   - task_collaboration: 协作记录\n\n4. 进度管理\n   - task_progress: 进度记录\n   - task_milestone: 里程碑管理\n   - task_checkpoint: 检查点管理\n\n5. 互动管理\n   - task_comment: 任务评论\n   - task_like: 任务点赞\n   - task_follow: 任务关注\n\n6. 时间管理\n   - task_time_log: 工时记录\n   - task_estimate: 工时估算\n   - task_timesheet: 时间表\n\n7. 模板管理\n   - task_template: 任务模板\n   - task_template_item: 模板项目\n   - task_checklist: 检查清单\n\n8. 统计分析\n   - task_statistics: 任务统计\n   - task_report: 任务报表\n   - task_analysis: 分析数据\n\n四、数据关系\n=============================================================================\n- task_task → task_content (任务内容)\n- task_task → task_attachment (任务附件)\n- task_task → task_participant (参与者)\n- task_task → task_comment (评论互动)\n- task_task → task_progress (进度记录)\n- task_task → task_time_log (工时记录)\n- task_category → task_task (分类关联)\n- task_template → task_task (模板实例化)\n\n五、业务特点\n=============================================================================\n1. 层级管理\n   - 支持父子任务关系\n   - 任务分解与合并\n   - 依赖关系管理\n   - 批量操作支持\n\n2. 协作机制\n   - 多人协作\n   - 权限控制\n   - 状态同步\n   - 通知机制\n\n3. 进度跟踪\n   - 实时进度更新\n   - 里程碑管理\n   - 风险预警\n   - 延期提醒\n\n4. 工时管理\n   - 工时记录\n   - 工时统计\n   - 效率分析\n   - 成本核算\n\n5. 模板复用\n   - 任务模板\n   - 检查清单\n   - 标准流程\n   - 最佳实践\n\n六、权限设计\n=============================================================================\n任务管理功能权限控制：\n- 任务查看: TASK_VIEW\n- 任务管理: TASK_MANAGE\n- 任务创建: TASK_CREATE\n- 任务编辑: TASK_EDIT\n- 任务删除: TASK_DELETE\n- 任务分配: TASK_ASSIGN\n- 进度更新: TASK_PROGRESS\n- 工时记录: TASK_TIME_LOG\n- 评论互动: TASK_COMMENT\n- 模板管理: TASK_TEMPLATE\n- 统计查看: TASK_STATISTICS\n- 系统配置: TASK_CONFIG\n\n七、注意事项\n=============================================================================\n1. 任务状态流转要保证数据一致性\n2. 父子任务关系要避免循环依赖\n3. 工时记录要准确可靠\n4. 大量任务的查询要优化性能\n5. 权限控制要细粒度管理\n6. 通知提醒要及时有效\n7. 数据统计要实时更新\n\n八、任务编号规则\n=============================================================================\n任务编号格式：TSK-类型-YYYY-流水号\n- TSK: 任务(Task)前缀\n- 类型: LEG-法律, ADM-行政, CLI-客户, FIN-财务, DAI-日常\n- YYYY: 年份\n- 流水号: 4位数字，从0001开始\n\n示例：TSK-LEG-2023-0001（2023年第1个法律类任务）\n\n九、任务状态管理\n=============================================================================\n任务状态流转：\n1. 草稿(DRAFT) → 待分配(PENDING)\n2. 待分配(PENDING) → 进行中(IN_PROGRESS)\n3. 进行中(IN_PROGRESS) → 已完成(COMPLETED)\n4. 进行中(IN_PROGRESS) → 已暂停(PAUSED)\n5. 已暂停(PAUSED) → 进行中(IN_PROGRESS)\n6. 任何状态 → 已取消(CANCELLED)\n\n任务优先级：\n- 低(LOW): 1\n- 中(MEDIUM): 2\n- 高(HIGH): 3\n- 紧急(URGENT): 4\n\n十、分类体系设计\n=============================================================================\n一级分类：\n- 法律事务: 案件处理、合同审核、法律研究、文书起草\n- 行政事务: 会议组织、员工管理、办公管理、设备维护\n- 客户服务: 客户咨询、关系维护、满意度调查\n- 财务管理: 费用结算、发票管理、财务分析\n- 日常事务: 培训学习、团建活动、其他事务\n\n二级分类细化：\n- 支持多级分类\n- 分类权限控制\n- 动态分类调整\n- 分类使用统计\n\n十一、标签体系\n=============================================================================\n标签类型：\n1. 优先级标签: 紧急、重要、一般、低优先级\n2. 业务标签: 法律、行政、客户、财务、技术\n3. 状态标签: 新任务、进行中、待审核、已完成\n4. 属性标签: 可延期、不可延期、可委托、需协作\n\n标签管理：\n- 标签创建与编辑\n- 标签颜色管理\n- 标签使用统计\n- 智能标签推荐\n\n十二、协作机制\n=============================================================================\n1. 参与者角色\n   - 创建者: 任务发起人\n   - 负责人: 主要执行人\n   - 参与者: 协作执行人\n   - 观察者: 关注任务进展\n\n2. 权限管理\n   - 查看权限\n   - 编辑权限\n   - 分配权限\n   - 删除权限\n\n3. 协作方式\n   - 任务分解\n   - 并行执行\n   - 串行依赖\n   - 审核确认\n\n十三、进度管理\n=============================================================================\n1. 进度记录\n   - 百分比进度\n   - 里程碑完成\n   - 时间节点\n   - 质量检查\n\n2. 监控预警\n   - 进度延迟预警\n   - 资源冲突提醒\n   - 质量风险告警\n   - 截止日期提醒\n\n3. 可视化展示\n   - 甘特图\n   - 进度条\n   - 里程碑图\n   - 燃尽图\n\n十四、工时管理\n=============================================================================\n1. 工时记录\n   - 开始结束时间\n   - 实际工作时长\n   - 任务完成情况\n   - 工作内容描述\n\n2. 工时统计\n   - 个人工时统计\n   - 团队工时分析\n   - 项目工时汇总\n   - 效率对比分析\n\n3. 成本核算\n   - 人力成本计算\n   - 项目成本分析\n   - 效益评估\n   - ROI计算\n\n十五、模板管理\n=============================================================================\n1. 任务模板\n   - 常用任务模板\n   - 流程模板\n   - 检查清单模板\n   - 最佳实践模板\n\n2. 模板应用\n   - 一键创建任务\n   - 模板复制\n   - 模板修改\n   - 模板分享\n\n3. 模板优化\n   - 使用频率统计\n   - 效果评估\n   - 持续改进\n   - 版本管理\n\n十六、通知提醒\n=============================================================================\n1. 提醒类型\n   - 任务分配提醒\n   - 截止日期提醒\n   - 进度更新提醒\n   - 状态变更提醒\n\n2. 提醒方式\n   - 系统内通知\n   - 邮件提醒\n   - 短信提醒\n   - 移动端推送\n\n3. 智能提醒\n   - 个性化提醒设置\n   - 智能提醒时间\n   - 重要程度判断\n   - 免打扰模式\n\n十七、统计分析\n=============================================================================\n1. 基础统计\n   - 任务数量统计\n   - 完成率统计\n   - 平均耗时统计\n   - 逾期率统计\n\n2. 深度分析\n   - 工作负荷分析\n   - 效率趋势分析\n   - 瓶颈识别分析\n   - 资源利用分析\n\n3. 可视化报表\n   - 仪表板展示\n   - 图表分析\n   - 数据导出\n   - 定制报表\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 任务管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '任务管理模块说明文档已加载' AS message; ",
      "size": 5464
    },
    {
      "path": "law-firm-modules\\law-firm-task\\src\\main\\resources\\META-INF\\db\\migration\\V13001__init_task_tables.sql",
      "filename": "V13001__init_task_tables.sql",
      "version": 13001,
      "module": "law-firm-modules",
      "content": "-- 任务管理模块表结构\n-- 版本: V13001\n-- 模块: 任务管理模块 (V13000-V13999)\n-- 创建时间: 2023-06-01\n-- 说明: 任务管理功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 任务基础管理表 =======================\n\n-- task_task表（任务主表）\nDROP TABLE IF EXISTS task_task;\nCREATE TABLE task_task (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '任务ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_number VARCHAR(50) NOT NULL COMMENT '任务编号',\n    title VARCHAR(200) NOT NULL COMMENT '任务标题',\n    description TEXT COMMENT '任务描述',\n    task_type TINYINT DEFAULT 1 COMMENT '任务类型(1-法律事务,2-行政事务,3-客户服务,4-财务管理,5-日常事务)',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    task_status TINYINT DEFAULT 1 COMMENT '任务状态(1-草稿,2-待分配,3-进行中,4-已完成,5-已暂停,6-已取消)',\n    start_time DATETIME COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    due_date DATETIME COMMENT '截止日期',\n    complete_time DATETIME COMMENT '完成时间',\n    creator_id BIGINT NOT NULL COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    assignee_id BIGINT COMMENT '负责人ID',\n    assignee_name VARCHAR(50) COMMENT '负责人姓名',\n    category_id BIGINT COMMENT '分类ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父任务ID',\n    level TINYINT DEFAULT 1 COMMENT '层级',\n    path VARCHAR(500) COMMENT '层级路径',\n    case_id BIGINT COMMENT '关联案件ID',\n    client_id BIGINT COMMENT '关联客户ID',\n    contract_id BIGINT COMMENT '关联合同ID',\n    schedule_id BIGINT COMMENT '关联日程ID',\n    project_id BIGINT COMMENT '关联项目ID',\n    template_id BIGINT COMMENT '来源模板ID',\n    is_template TINYINT DEFAULT 0 COMMENT '是否模板(0-否,1-是)',\n    is_recurring TINYINT DEFAULT 0 COMMENT '是否重复任务(0-否,1-是)',\n    recurrence_rule TEXT COMMENT '重复规则(JSON格式)',\n    estimated_hours DECIMAL(8,2) DEFAULT 0 COMMENT '预估工时(小时)',\n    actual_hours DECIMAL(8,2) DEFAULT 0 COMMENT '实际工时(小时)',\n    progress_percentage DECIMAL(5,2) DEFAULT 0 COMMENT '完成进度(0-100)',\n    difficulty_level TINYINT DEFAULT 2 COMMENT '难度等级(1-简单,2-中等,3-困难,4-专家)',\n    importance_level TINYINT DEFAULT 2 COMMENT '重要程度(1-低,2-中,3-高,4-关键)',\n    urgency_level TINYINT DEFAULT 2 COMMENT '紧急程度(1-低,2-中,3-高,4-紧急)',\n    participant_count INT DEFAULT 0 COMMENT '参与人数',\n    attachment_count INT DEFAULT 0 COMMENT '附件数量',\n    comment_count INT DEFAULT 0 COMMENT '评论数量',\n    like_count INT DEFAULT 0 COMMENT '点赞数量',\n    follow_count INT DEFAULT 0 COMMENT '关注数量',\n    view_count INT DEFAULT 0 COMMENT '查看次数',\n    cost DECIMAL(12,2) DEFAULT 0.00 COMMENT '任务成本',\n    tags JSON COMMENT '标签信息(JSON格式)',\n    dependencies JSON COMMENT '依赖任务(JSON格式)',\n    milestones JSON COMMENT '里程碑(JSON格式)',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    completion_note TEXT COMMENT '完成说明',\n    cancel_reason VARCHAR(500) COMMENT '取消原因',\n    pause_reason VARCHAR(500) COMMENT '暂停原因',\n    quality_score DECIMAL(3,1) DEFAULT 0 COMMENT '质量评分(0-10)',\n    satisfaction_score DECIMAL(3,1) DEFAULT 0 COMMENT '满意度评分(0-10)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_task_number (tenant_id, task_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_title (title),\n    INDEX idx_task_type (task_type),\n    INDEX idx_priority (priority),\n    INDEX idx_task_status (task_status),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_assignee_id (assignee_id),\n    INDEX idx_category_id (category_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_due_date (due_date),\n    INDEX idx_complete_time (complete_time),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务主表';\n\n-- task_content表（任务内容详情表）\nDROP TABLE IF EXISTS task_content;\nCREATE TABLE task_content (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '内容ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-主要内容,2-需求说明,3-验收标准,4-操作指南)',\n    content TEXT COMMENT '内容详情',\n    content_html TEXT COMMENT 'HTML格式内容',\n    requirements JSON COMMENT '需求说明(JSON格式)',\n    acceptance_criteria JSON COMMENT '验收标准(JSON格式)',\n    operation_guide JSON COMMENT '操作指南(JSON格式)',\n    resources JSON COMMENT '资源信息(JSON格式)',\n    references JSON COMMENT '参考资料(JSON格式)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_content_type (content_type),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_content_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务内容详情表';\n\n-- task_attachment表（任务附件表）\nDROP TABLE IF EXISTS task_attachment;\nCREATE TABLE task_attachment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '附件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    file_name VARCHAR(200) NOT NULL COMMENT '文件名称',\n    file_path VARCHAR(500) NOT NULL COMMENT '文件路径',\n    file_size BIGINT DEFAULT 0 COMMENT '文件大小(字节)',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_ext VARCHAR(20) COMMENT '文件扩展名',\n    storage_type TINYINT DEFAULT 1 COMMENT '存储类型(1-本地,2-云存储,3-第三方)',\n    storage_path VARCHAR(500) COMMENT '存储路径',\n    uploader_id BIGINT NOT NULL COMMENT '上传者ID',\n    uploader_name VARCHAR(50) COMMENT '上传者姓名',\n    upload_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '上传时间',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    last_download_time DATETIME COMMENT '最后下载时间',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    attachment_type TINYINT DEFAULT 1 COMMENT '附件类型(1-需求文档,2-设计图,3-参考资料,4-其他)',\n    description VARCHAR(500) COMMENT '附件描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_uploader_id (uploader_id),\n    INDEX idx_file_type (file_type),\n    INDEX idx_attachment_type (attachment_type),\n    INDEX idx_upload_time (upload_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_attachment_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务附件表';\n\n-- ======================= 分类标签管理表 =======================\n\n-- task_category表（任务分类表）\nDROP TABLE IF EXISTS task_category;\nCREATE TABLE task_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(100) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    parent_id BIGINT DEFAULT 0 COMMENT '父分类ID',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    path VARCHAR(500) COMMENT '分类路径',\n    icon VARCHAR(100) COMMENT '图标',\n    color VARCHAR(20) COMMENT '颜色',\n    description VARCHAR(500) COMMENT '分类描述',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统内置(0-否,1-是)',\n    is_leaf TINYINT DEFAULT 1 COMMENT '是否叶子节点(0-否,1-是)',\n    task_count INT DEFAULT 0 COMMENT '任务数量',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务分类表';\n\n-- task_tag表（任务标签表）\nDROP TABLE IF EXISTS task_tag;\nCREATE TABLE task_tag (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tag_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    tag_code VARCHAR(50) COMMENT '标签编码',\n    tag_color VARCHAR(20) DEFAULT '#007bff' COMMENT '标签颜色',\n    tag_type TINYINT DEFAULT 1 COMMENT '标签类型(1-优先级,2-业务,3-状态,4-属性)',\n    tag_group VARCHAR(50) COMMENT '标签分组',\n    description VARCHAR(200) COMMENT '标签描述',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    is_hot TINYINT DEFAULT 0 COMMENT '是否热门(0-否,1-是)',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统内置(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_tag_name (tenant_id, tag_name),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_tag_type (tag_type),\n    INDEX idx_tag_group (tag_group),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务标签表';\n\n-- task_tag_relation表（任务标签关联表）\nDROP TABLE IF EXISTS task_tag_relation;\nCREATE TABLE task_tag_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    tag_id BIGINT NOT NULL COMMENT '标签ID',\n    tag_weight DECIMAL(3,2) DEFAULT 1.00 COMMENT '标签权重',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-手动添加,2-自动识别,3-批量导入)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    \n    UNIQUE KEY uk_task_tag (task_id, tag_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_tag_id (tag_id),\n    INDEX idx_relation_type (relation_type),\n    \n    CONSTRAINT fk_task_tag_relation_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE,\n    CONSTRAINT fk_task_tag_relation_tag FOREIGN KEY (tag_id) REFERENCES task_tag(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务标签关联表';\n\n-- ======================= 协作管理表 =======================\n\n-- task_participant表（任务参与者表）\nDROP TABLE IF EXISTS task_participant;\nCREATE TABLE task_participant (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '参与者ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    user_name VARCHAR(50) COMMENT '用户姓名',\n    participant_role TINYINT DEFAULT 1 COMMENT '参与角色(1-创建者,2-负责人,3-参与者,4-观察者)',\n    join_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '加入时间',\n    join_type TINYINT DEFAULT 1 COMMENT '加入方式(1-邀请,2-申请,3-指派)',\n    permission_level TINYINT DEFAULT 1 COMMENT '权限级别(1-只读,2-编辑,3-管理)',\n    contribution_score DECIMAL(5,2) DEFAULT 0 COMMENT '贡献评分',\n    work_hours DECIMAL(8,2) DEFAULT 0 COMMENT '工作时长',\n    is_active TINYINT DEFAULT 1 COMMENT '是否活跃(0-否,1-是)',\n    last_active_time DATETIME COMMENT '最后活跃时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_task_user (task_id, user_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_participant_role (participant_role),\n    INDEX idx_join_time (join_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_participant_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务参与者表';\n\n-- ======================= 进度管理表 =======================\n\n-- task_progress表（任务进度记录表）\nDROP TABLE IF EXISTS task_progress;\nCREATE TABLE task_progress (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '进度ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    progress_percentage DECIMAL(5,2) NOT NULL COMMENT '进度百分比(0-100)',\n    progress_description TEXT COMMENT '进度描述',\n    milestone_name VARCHAR(100) COMMENT '里程碑名称',\n    is_milestone TINYINT DEFAULT 0 COMMENT '是否里程碑(0-否,1-是)',\n    work_hours DECIMAL(8,2) DEFAULT 0 COMMENT '本次工时',\n    total_hours DECIMAL(8,2) DEFAULT 0 COMMENT '累计工时',\n    remaining_hours DECIMAL(8,2) DEFAULT 0 COMMENT '剩余工时',\n    quality_score DECIMAL(3,1) DEFAULT 0 COMMENT '质量评分(0-10)',\n    completion_evidence TEXT COMMENT '完成证据',\n    next_steps TEXT COMMENT '下一步计划',\n    obstacles TEXT COMMENT '遇到的障碍',\n    reporter_id BIGINT NOT NULL COMMENT '汇报人ID',\n    reporter_name VARCHAR(50) COMMENT '汇报人姓名',\n    report_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '汇报时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_progress_percentage (progress_percentage),\n    INDEX idx_reporter_id (reporter_id),\n    INDEX idx_report_time (report_time),\n    INDEX idx_is_milestone (is_milestone),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_progress_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务进度记录表';\n\n-- ======================= 互动管理表 =======================\n\n-- task_comment表（任务评论表）\nDROP TABLE IF EXISTS task_comment;\nCREATE TABLE task_comment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评论ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父评论ID',\n    content TEXT NOT NULL COMMENT '评论内容',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-文本,2-语音,3-图片)',\n    commenter_id BIGINT NOT NULL COMMENT '评论者ID',\n    commenter_name VARCHAR(50) COMMENT '评论者姓名',\n    commenter_avatar VARCHAR(200) COMMENT '评论者头像',\n    reply_to_id BIGINT COMMENT '回复目标ID',\n    reply_to_name VARCHAR(50) COMMENT '回复目标姓名',\n    mention_users JSON COMMENT '提及用户(JSON格式)',\n    like_count INT DEFAULT 0 COMMENT '点赞数',\n    reply_count INT DEFAULT 0 COMMENT '回复数',\n    is_sticky TINYINT DEFAULT 0 COMMENT '是否置顶(0-否,1-是)',\n    is_private TINYINT DEFAULT 0 COMMENT '是否私密(0-否,1-是)',\n    ip_address VARCHAR(50) COMMENT 'IP地址',\n    user_agent VARCHAR(500) COMMENT '用户代理',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_commenter_id (commenter_id),\n    INDEX idx_reply_to_id (reply_to_id),\n    INDEX idx_create_time (create_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_comment_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务评论表';\n\n-- ======================= 时间管理表 =======================\n\n-- task_time_log表（任务工时记录表）\nDROP TABLE IF EXISTS task_time_log;\nCREATE TABLE task_time_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '工时ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    user_name VARCHAR(50) COMMENT '用户姓名',\n    start_time DATETIME NOT NULL COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    duration DECIMAL(8,2) DEFAULT 0 COMMENT '工作时长(小时)',\n    work_description TEXT COMMENT '工作描述',\n    work_type TINYINT DEFAULT 1 COMMENT '工作类型(1-开发,2-测试,3-文档,4-会议,5-其他)',\n    is_billable TINYINT DEFAULT 1 COMMENT '是否计费(0-否,1-是)',\n    hourly_rate DECIMAL(10,2) DEFAULT 0 COMMENT '小时费率',\n    total_cost DECIMAL(12,2) DEFAULT 0 COMMENT '总成本',\n    productivity_score DECIMAL(3,1) DEFAULT 0 COMMENT '生产力评分(0-10)',\n    log_type TINYINT DEFAULT 1 COMMENT '记录类型(1-手动,2-自动,3-导入)',\n    device_info VARCHAR(200) COMMENT '设备信息',\n    location_info VARCHAR(200) COMMENT '位置信息',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_work_type (work_type),\n    INDEX idx_log_type (log_type),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_task_time_log_task FOREIGN KEY (task_id) REFERENCES task_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务工时记录表';\n\n-- ======================= 模板管理表 =======================\n\n-- task_template表（任务模板表）\nDROP TABLE IF EXISTS task_template;\nCREATE TABLE task_template (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模板ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    template_name VARCHAR(100) NOT NULL COMMENT '模板名称',\n    template_code VARCHAR(50) COMMENT '模板编码',\n    template_type TINYINT DEFAULT 1 COMMENT '模板类型(1-任务模板,2-流程模板,3-检查清单)',\n    category_id BIGINT COMMENT '分类ID',\n    title_template VARCHAR(200) COMMENT '标题模板',\n    description_template TEXT COMMENT '描述模板',\n    estimated_hours DECIMAL(8,2) DEFAULT 0 COMMENT '预估工时',\n    priority TINYINT DEFAULT 2 COMMENT '默认优先级',\n    difficulty_level TINYINT DEFAULT 2 COMMENT '难度等级',\n    checklist JSON COMMENT '检查清单(JSON格式)',\n    resources JSON COMMENT '资源配置(JSON格式)',\n    participants JSON COMMENT '参与者配置(JSON格式)',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    success_rate DECIMAL(5,2) DEFAULT 0 COMMENT '成功率',\n    avg_completion_time DECIMAL(8,2) DEFAULT 0 COMMENT '平均完成时间(小时)',\n    creator_id BIGINT NOT NULL COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    is_recommended TINYINT DEFAULT 0 COMMENT '是否推荐(0-否,1-是)',\n    rating DECIMAL(3,1) DEFAULT 0 COMMENT '评分(0-10)',\n    rating_count INT DEFAULT 0 COMMENT '评分人数',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_template_code (tenant_id, template_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_template_type (template_type),\n    INDEX idx_category_id (category_id),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_rating (rating),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务模板表';\n\n-- ======================= 统计分析表 =======================\n\n-- task_statistics表（任务统计表）\nDROP TABLE IF EXISTS task_statistics;\nCREATE TABLE task_statistics (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '统计ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    stat_date DATE NOT NULL COMMENT '统计日期',\n    stat_type TINYINT DEFAULT 1 COMMENT '统计类型(1-日统计,2-周统计,3-月统计,4-年统计)',\n    user_id BIGINT COMMENT '用户ID(null表示全局统计)',\n    department_id BIGINT COMMENT '部门ID',\n    category_id BIGINT COMMENT '分类ID',\n    total_tasks INT DEFAULT 0 COMMENT '总任务数',\n    created_tasks INT DEFAULT 0 COMMENT '新建任务数',\n    completed_tasks INT DEFAULT 0 COMMENT '完成任务数',\n    cancelled_tasks INT DEFAULT 0 COMMENT '取消任务数',\n    overdue_tasks INT DEFAULT 0 COMMENT '逾期任务数',\n    in_progress_tasks INT DEFAULT 0 COMMENT '进行中任务数',\n    completion_rate DECIMAL(5,2) DEFAULT 0 COMMENT '完成率',\n    overdue_rate DECIMAL(5,2) DEFAULT 0 COMMENT '逾期率',\n    avg_completion_time DECIMAL(8,2) DEFAULT 0 COMMENT '平均完成时间(小时)',\n    total_work_hours DECIMAL(12,2) DEFAULT 0 COMMENT '总工作时长',\n    avg_quality_score DECIMAL(3,1) DEFAULT 0 COMMENT '平均质量评分',\n    total_cost DECIMAL(15,2) DEFAULT 0 COMMENT '总成本',\n    efficiency_score DECIMAL(5,2) DEFAULT 0 COMMENT '效率评分',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_stat_date_type_user (stat_date, stat_type, user_id, department_id, category_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_stat_date (stat_date),\n    INDEX idx_stat_type (stat_type),\n    INDEX idx_user_id (user_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_category_id (category_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务统计表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 23821
    },
    {
      "path": "law-firm-modules\\law-firm-task\\src\\main\\resources\\META-INF\\db\\migration\\V13002__init_task_data.sql",
      "filename": "V13002__init_task_data.sql",
      "version": 13002,
      "module": "law-firm-modules",
      "content": "-- 任务管理模块基础数据\n-- 版本: V13002\n-- 模块: 任务管理模块 (V13000-V13999)\n-- 创建时间: 2023-06-01\n-- 说明: 任务管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 任务管理相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('任务类型', 'task_type', 1, 'system', NOW(), '任务类型字典'),\n('任务优先级', 'task_priority', 1, 'system', NOW(), '任务优先级字典'),\n('任务状态', 'task_status', 1, 'system', NOW(), '任务状态字典'),\n('难度等级', 'difficulty_level', 1, 'system', NOW(), '任务难度等级字典'),\n('重要程度', 'importance_level', 1, 'system', NOW(), '任务重要程度字典'),\n('紧急程度', 'urgency_level', 1, 'system', NOW(), '任务紧急程度字典'),\n('参与角色', 'participant_role', 1, 'system', NOW(), '任务参与角色字典'),\n('权限级别', 'permission_level', 1, 'system', NOW(), '任务权限级别字典'),\n('工作类型', 'work_type', 1, 'system', NOW(), '工作类型字典'),\n('模板类型', 'template_type', 1, 'system', NOW(), '任务模板类型字典'),\n('标签类型', 'tag_type', 1, 'system', NOW(), '任务标签类型字典'),\n('附件类型', 'attachment_type', 1, 'system', NOW(), '任务附件类型字典'),\n('内容类型', 'content_type', 1, 'system', NOW(), '任务内容类型字典'),\n('存储类型', 'storage_type', 1, 'system', NOW(), '存储类型字典'),\n('统计类型', 'stat_type', 1, 'system', NOW(), '统计类型字典'),\n('加入方式', 'join_type', 1, 'system', NOW(), '参与者加入方式字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 任务类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '法律事务', '1', 'task_type', '', 'primary', 'Y', 1, 'system', NOW(), '法律相关任务'),\n(2, '行政事务', '2', 'task_type', '', 'success', 'N', 1, 'system', NOW(), '行政管理任务'),\n(3, '客户服务', '3', 'task_type', '', 'info', 'N', 1, 'system', NOW(), '客户服务任务'),\n(4, '财务管理', '4', 'task_type', '', 'warning', 'N', 1, 'system', NOW(), '财务相关任务'),\n(5, '日常事务', '5', 'task_type', '', 'secondary', 'N', 1, 'system', NOW(), '日常工作任务');\n\n-- 任务优先级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '低', '1', 'task_priority', '', 'success', 'N', 1, 'system', NOW(), '低优先级'),\n(2, '中', '2', 'task_priority', '', 'primary', 'Y', 1, 'system', NOW(), '中等优先级'),\n(3, '高', '3', 'task_priority', '', 'warning', 'N', 1, 'system', NOW(), '高优先级'),\n(4, '紧急', '4', 'task_priority', '', 'danger', 'N', 1, 'system', NOW(), '紧急优先级');\n\n-- 任务状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'task_status', '', 'secondary', 'Y', 1, 'system', NOW(), '草稿状态'),\n(2, '待分配', '2', 'task_status', '', 'info', 'N', 1, 'system', NOW(), '待分配状态'),\n(3, '进行中', '3', 'task_status', '', 'primary', 'N', 1, 'system', NOW(), '进行中状态'),\n(4, '已完成', '4', 'task_status', '', 'success', 'N', 1, 'system', NOW(), '已完成状态'),\n(5, '已暂停', '5', 'task_status', '', 'warning', 'N', 1, 'system', NOW(), '已暂停状态'),\n(6, '已取消', '6', 'task_status', '', 'danger', 'N', 1, 'system', NOW(), '已取消状态');\n\n-- 难度等级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '简单', '1', 'difficulty_level', '', 'success', 'N', 1, 'system', NOW(), '简单任务'),\n(2, '中等', '2', 'difficulty_level', '', 'primary', 'Y', 1, 'system', NOW(), '中等难度'),\n(3, '困难', '3', 'difficulty_level', '', 'warning', 'N', 1, 'system', NOW(), '困难任务'),\n(4, '专家', '4', 'difficulty_level', '', 'danger', 'N', 1, 'system', NOW(), '专家级任务');\n\n-- 重要程度\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '低', '1', 'importance_level', '', 'success', 'N', 1, 'system', NOW(), '低重要性'),\n(2, '中', '2', 'importance_level', '', 'primary', 'Y', 1, 'system', NOW(), '中等重要'),\n(3, '高', '3', 'importance_level', '', 'warning', 'N', 1, 'system', NOW(), '高重要性'),\n(4, '关键', '4', 'importance_level', '', 'danger', 'N', 1, 'system', NOW(), '关键重要');\n\n-- 紧急程度\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '低', '1', 'urgency_level', '', 'success', 'N', 1, 'system', NOW(), '低紧急度'),\n(2, '中', '2', 'urgency_level', '', 'primary', 'Y', 1, 'system', NOW(), '中等紧急'),\n(3, '高', '3', 'urgency_level', '', 'warning', 'N', 1, 'system', NOW(), '高紧急度'),\n(4, '紧急', '4', 'urgency_level', '', 'danger', 'N', 1, 'system', NOW(), '紧急处理');\n\n-- 参与角色\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '创建者', '1', 'participant_role', '', 'primary', 'N', 1, 'system', NOW(), '任务创建者'),\n(2, '负责人', '2', 'participant_role', '', 'success', 'Y', 1, 'system', NOW(), '任务负责人'),\n(3, '参与者', '3', 'participant_role', '', 'info', 'N', 1, 'system', NOW(), '任务参与者'),\n(4, '观察者', '4', 'participant_role', '', 'secondary', 'N', 1, 'system', NOW(), '任务观察者');\n\n-- 权限级别\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '只读', '1', 'permission_level', '', 'info', 'Y', 1, 'system', NOW(), '只读权限'),\n(2, '编辑', '2', 'permission_level', '', 'primary', 'N', 1, 'system', NOW(), '编辑权限'),\n(3, '管理', '3', 'permission_level', '', 'warning', 'N', 1, 'system', NOW(), '管理权限');\n\n-- 工作类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '开发', '1', 'work_type', '', 'primary', 'N', 1, 'system', NOW(), '开发工作'),\n(2, '测试', '2', 'work_type', '', 'success', 'N', 1, 'system', NOW(), '测试工作'),\n(3, '文档', '3', 'work_type', '', 'info', 'N', 1, 'system', NOW(), '文档编写'),\n(4, '会议', '4', 'work_type', '', 'warning', 'Y', 1, 'system', NOW(), '会议讨论'),\n(5, '其他', '5', 'work_type', '', 'secondary', 'N', 1, 'system', NOW(), '其他工作');\n\n-- 模板类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '任务模板', '1', 'template_type', '', 'primary', 'Y', 1, 'system', NOW(), '通用任务模板'),\n(2, '流程模板', '2', 'template_type', '', 'success', 'N', 1, 'system', NOW(), '工作流程模板'),\n(3, '检查清单', '3', 'template_type', '', 'info', 'N', 1, 'system', NOW(), '检查清单模板');\n\n-- 标签类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '优先级', '1', 'tag_type', '', 'danger', 'N', 1, 'system', NOW(), '优先级相关标签'),\n(2, '业务', '2', 'tag_type', '', 'primary', 'Y', 1, 'system', NOW(), '业务类型标签'),\n(3, '状态', '3', 'tag_type', '', 'success', 'N', 1, 'system', NOW(), '状态相关标签'),\n(4, '属性', '4', 'tag_type', '', 'info', 'N', 1, 'system', NOW(), '属性特征标签');\n\n-- 附件类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '需求文档', '1', 'attachment_type', '', 'primary', 'Y', 1, 'system', NOW(), '需求说明文档'),\n(2, '设计图', '2', 'attachment_type', '', 'success', 'N', 1, 'system', NOW(), '设计图纸'),\n(3, '参考资料', '3', 'attachment_type', '', 'info', 'N', 1, 'system', NOW(), '参考资料'),\n(4, '其他', '4', 'attachment_type', '', 'secondary', 'N', 1, 'system', NOW(), '其他附件');\n\n-- 内容类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '主要内容', '1', 'content_type', '', 'primary', 'Y', 1, 'system', NOW(), '任务主要内容'),\n(2, '需求说明', '2', 'content_type', '', 'success', 'N', 1, 'system', NOW(), '需求详细说明'),\n(3, '验收标准', '3', 'content_type', '', 'warning', 'N', 1, 'system', NOW(), '验收标准'),\n(4, '操作指南', '4', 'content_type', '', 'info', 'N', 1, 'system', NOW(), '操作指导');\n\n-- 存储类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '本地存储', '1', 'storage_type', '', 'primary', 'Y', 1, 'system', NOW(), '本地文件系统'),\n(2, '云存储', '2', 'storage_type', '', 'success', 'N', 1, 'system', NOW(), '云端存储'),\n(3, '第三方存储', '3', 'storage_type', '', 'info', 'N', 1, 'system', NOW(), '第三方存储服务');\n\n-- 统计类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '日统计', '1', 'stat_type', '', 'primary', 'Y', 1, 'system', NOW(), '按日统计'),\n(2, '周统计', '2', 'stat_type', '', 'success', 'N', 1, 'system', NOW(), '按周统计'),\n(3, '月统计', '3', 'stat_type', '', 'info', 'N', 1, 'system', NOW(), '按月统计'),\n(4, '年统计', '4', 'stat_type', '', 'warning', 'N', 1, 'system', NOW(), '按年统计');\n\n-- 加入方式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '邀请', '1', 'join_type', '', 'success', 'Y', 1, 'system', NOW(), '受邀加入'),\n(2, '申请', '2', 'join_type', '', 'primary', 'N', 1, 'system', NOW(), '主动申请'),\n(3, '指派', '3', 'join_type', '', 'warning', 'N', 1, 'system', NOW(), '管理员指派');\n\n-- ======================= 任务分类数据 =======================\n\n-- 一级分类\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '法律事务', 'LEGAL_AFFAIRS', 0, 1, '/LEGAL_AFFAIRS', 'legal', '#007bff', '法律相关事务处理', 1, 0, 1, 'system', NOW(), 1),\n(0, '行政事务', 'ADMIN_AFFAIRS', 0, 1, '/ADMIN_AFFAIRS', 'admin', '#28a745', '行政管理相关事务', 1, 0, 2, 'system', NOW(), 1),\n(0, '客户服务', 'CLIENT_SERVICE', 0, 1, '/CLIENT_SERVICE', 'client', '#17a2b8', '客户服务相关任务', 1, 0, 3, 'system', NOW(), 1),\n(0, '财务管理', 'FINANCE_MANAGEMENT', 0, 1, '/FINANCE_MANAGEMENT', 'finance', '#ffc107', '财务管理相关任务', 1, 0, 4, 'system', NOW(), 1),\n(0, '日常事务', 'DAILY_AFFAIRS', 0, 1, '/DAILY_AFFAIRS', 'daily', '#6c757d', '日常工作事务', 1, 0, 5, 'system', NOW(), 1);\n\n-- 二级分类 - 法律事务\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '案件处理', 'CASE_HANDLING', 1, 2, '/LEGAL_AFFAIRS/CASE_HANDLING', 'case', '#007bff', '案件相关任务处理', 1, 1, 1, 'system', NOW(), 1),\n(0, '合同审核', 'CONTRACT_REVIEW', 1, 2, '/LEGAL_AFFAIRS/CONTRACT_REVIEW', 'contract', '#007bff', '合同审核相关任务', 1, 1, 2, 'system', NOW(), 1),\n(0, '法律研究', 'LEGAL_RESEARCH', 1, 2, '/LEGAL_AFFAIRS/LEGAL_RESEARCH', 'research', '#007bff', '法律条文研究任务', 1, 1, 3, 'system', NOW(), 1),\n(0, '文书起草', 'DOCUMENT_DRAFTING', 1, 2, '/LEGAL_AFFAIRS/DOCUMENT_DRAFTING', 'document', '#007bff', '法律文书起草任务', 1, 1, 4, 'system', NOW(), 1),\n(0, '出庭准备', 'COURT_PREPARATION', 1, 2, '/LEGAL_AFFAIRS/COURT_PREPARATION', 'court', '#007bff', '法庭出庭准备工作', 1, 1, 5, 'system', NOW(), 1),\n(0, '证据收集', 'EVIDENCE_COLLECTION', 1, 2, '/LEGAL_AFFAIRS/EVIDENCE_COLLECTION', 'evidence', '#007bff', '案件证据收集任务', 1, 1, 6, 'system', NOW(), 1);\n\n-- 二级分类 - 行政事务\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '会议组织', 'MEETING_ORGANIZATION', 2, 2, '/ADMIN_AFFAIRS/MEETING_ORGANIZATION', 'meeting', '#28a745', '会议组织筹备任务', 1, 1, 1, 'system', NOW(), 1),\n(0, '员工管理', 'EMPLOYEE_MANAGEMENT', 2, 2, '/ADMIN_AFFAIRS/EMPLOYEE_MANAGEMENT', 'employee', '#28a745', '员工管理相关任务', 1, 1, 2, 'system', NOW(), 1),\n(0, '办公管理', 'OFFICE_MANAGEMENT', 2, 2, '/ADMIN_AFFAIRS/OFFICE_MANAGEMENT', 'office', '#28a745', '办公室管理任务', 1, 1, 3, 'system', NOW(), 1),\n(0, '设备维护', 'EQUIPMENT_MAINTENANCE', 2, 2, '/ADMIN_AFFAIRS/EQUIPMENT_MAINTENANCE', 'equipment', '#28a745', '设备维护保养任务', 1, 1, 4, 'system', NOW(), 1),\n(0, '采购管理', 'PROCUREMENT_MANAGEMENT', 2, 2, '/ADMIN_AFFAIRS/PROCUREMENT_MANAGEMENT', 'procurement', '#28a745', '采购相关管理任务', 1, 1, 5, 'system', NOW(), 1);\n\n-- 二级分类 - 客户服务\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '客户咨询', 'CLIENT_CONSULTATION', 3, 2, '/CLIENT_SERVICE/CLIENT_CONSULTATION', 'consultation', '#17a2b8', '客户咨询服务任务', 1, 1, 1, 'system', NOW(), 1),\n(0, '关系维护', 'RELATIONSHIP_MAINTENANCE', 3, 2, '/CLIENT_SERVICE/RELATIONSHIP_MAINTENANCE', 'relationship', '#17a2b8', '客户关系维护任务', 1, 1, 2, 'system', NOW(), 1),\n(0, '满意度调查', 'SATISFACTION_SURVEY', 3, 2, '/CLIENT_SERVICE/SATISFACTION_SURVEY', 'survey', '#17a2b8', '客户满意度调查', 1, 1, 3, 'system', NOW(), 1),\n(0, '投诉处理', 'COMPLAINT_HANDLING', 3, 2, '/CLIENT_SERVICE/COMPLAINT_HANDLING', 'complaint', '#17a2b8', '客户投诉处理任务', 1, 1, 4, 'system', NOW(), 1);\n\n-- 二级分类 - 财务管理\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '费用结算', 'FEE_SETTLEMENT', 4, 2, '/FINANCE_MANAGEMENT/FEE_SETTLEMENT', 'settlement', '#ffc107', '费用结算相关任务', 1, 1, 1, 'system', NOW(), 1),\n(0, '发票管理', 'INVOICE_MANAGEMENT', 4, 2, '/FINANCE_MANAGEMENT/INVOICE_MANAGEMENT', 'invoice', '#ffc107', '发票开具管理任务', 1, 1, 2, 'system', NOW(), 1),\n(0, '财务分析', 'FINANCIAL_ANALYSIS', 4, 2, '/FINANCE_MANAGEMENT/FINANCIAL_ANALYSIS', 'analysis', '#ffc107', '财务数据分析任务', 1, 1, 3, 'system', NOW(), 1),\n(0, '预算管理', 'BUDGET_MANAGEMENT', 4, 2, '/FINANCE_MANAGEMENT/BUDGET_MANAGEMENT', 'budget', '#ffc107', '预算制定管理任务', 1, 1, 4, 'system', NOW(), 1);\n\n-- 二级分类 - 日常事务\nINSERT INTO task_category (tenant_id, category_name, category_code, parent_id, level, path, icon, color, description, is_system, is_leaf, sort_order, create_by, create_time, status) VALUES\n(0, '培训学习', 'TRAINING_LEARNING', 5, 2, '/DAILY_AFFAIRS/TRAINING_LEARNING', 'training', '#6c757d', '培训学习相关任务', 1, 1, 1, 'system', NOW(), 1),\n(0, '团建活动', 'TEAM_BUILDING', 5, 2, '/DAILY_AFFAIRS/TEAM_BUILDING', 'teambuilding', '#6c757d', '团队建设活动任务', 1, 1, 2, 'system', NOW(), 1),\n(0, '其他事务', 'OTHER_AFFAIRS', 5, 2, '/DAILY_AFFAIRS/OTHER_AFFAIRS', 'other', '#6c757d', '其他日常事务', 1, 1, 3, 'system', NOW(), 1);\n\n-- ======================= 任务标签数据 =======================\n\n-- 优先级标签\nINSERT INTO task_tag (tenant_id, tag_name, tag_code, tag_color, tag_type, tag_group, description, is_system, sort_order, create_by, create_time, status) VALUES\n(0, '紧急', 'URGENT', '#dc3545', 1, '优先级', '紧急处理标签', 1, 1, 'system', NOW(), 1),\n(0, '重要', 'IMPORTANT', '#fd7e14', 1, '优先级', '重要任务标签', 1, 2, 'system', NOW(), 1),\n(0, '一般', 'NORMAL', '#6c757d', 1, '优先级', '一般任务标签', 1, 3, 'system', NOW(), 1),\n(0, '可延期', 'DEFERRABLE', '#28a745', 1, '优先级', '可延期处理标签', 1, 4, 'system', NOW(), 1);\n\n-- 业务标签\nINSERT INTO task_tag (tenant_id, tag_name, tag_code, tag_color, tag_type, tag_group, description, is_system, sort_order, create_by, create_time, status) VALUES\n(0, '法律', 'LEGAL', '#007bff', 2, '业务类型', '法律业务标签', 1, 1, 'system', NOW(), 1),\n(0, '行政', 'ADMIN', '#28a745', 2, '业务类型', '行政管理标签', 1, 2, 'system', NOW(), 1),\n(0, '客户', 'CLIENT', '#17a2b8', 2, '业务类型', '客户服务标签', 1, 3, 'system', NOW(), 1),\n(0, '财务', 'FINANCE', '#ffc107', 2, '业务类型', '财务管理标签', 1, 4, 'system', NOW(), 1),\n(0, '技术', 'TECHNICAL', '#6f42c1', 2, '业务类型', '技术相关标签', 1, 5, 'system', NOW(), 1);\n\n-- 状态标签\nINSERT INTO task_tag (tenant_id, tag_name, tag_code, tag_color, tag_type, tag_group, description, is_system, sort_order, create_by, create_time, status) VALUES\n(0, '新任务', 'NEW_TASK', '#20c997', 3, '任务状态', '新建任务标签', 1, 1, 'system', NOW(), 1),\n(0, '进行中', 'IN_PROGRESS', '#007bff', 3, '任务状态', '正在进行标签', 1, 2, 'system', NOW(), 1),\n(0, '待审核', 'PENDING_REVIEW', '#fd7e14', 3, '任务状态', '待审核标签', 1, 3, 'system', NOW(), 1),\n(0, '已完成', 'COMPLETED', '#28a745', 3, '任务状态', '已完成标签', 1, 4, 'system', NOW(), 1);\n\n-- 属性标签\nINSERT INTO task_tag (tenant_id, tag_name, tag_code, tag_color, tag_type, tag_group, description, is_system, sort_order, create_by, create_time, status) VALUES\n(0, '可委托', 'DELEGATABLE', '#6c757d', 4, '任务属性', '可委托他人标签', 1, 1, 'system', NOW(), 1),\n(0, '需协作', 'COLLABORATIVE', '#e83e8c', 4, '任务属性', '需要协作标签', 1, 2, 'system', NOW(), 1),\n(0, '独立完成', 'INDEPENDENT', '#6f42c1', 4, '任务属性', '独立完成标签', 1, 3, 'system', NOW(), 1),\n(0, '需培训', 'TRAINING_REQUIRED', '#fd7e14', 4, '任务属性', '需要培训标签', 1, 4, 'system', NOW(), 1);\n\n-- ======================= 任务模板数据 =======================\n\n-- 法律事务模板\nINSERT INTO task_template (tenant_id, template_name, template_code, template_type, category_id, title_template, description_template, estimated_hours, priority, difficulty_level, creator_id, creator_name, is_public, is_recommended, sort_order, create_by, create_time, status) VALUES\n(0, '案件分析模板', 'CASE_ANALYSIS_TEMPLATE', 1, 7, '案件分析：{案件名称}', '对案件进行详细分析，包括事实梳理、法律适用、证据分析等', 8.00, 3, 3, 1, 'system', 1, 1, 1, 'system', NOW(), 1),\n(0, '合同审核模板', 'CONTRACT_REVIEW_TEMPLATE', 1, 8, '合同审核：{合同名称}', '对合同条款进行法律风险审核，提出修改建议', 4.00, 2, 2, 1, 'system', 1, 1, 2, 'system', NOW(), 1),\n(0, '法律文书起草模板', 'LEGAL_DOCUMENT_TEMPLATE', 1, 10, '起草{文书类型}', '根据案件情况起草相应的法律文书', 6.00, 2, 3, 1, 'system', 1, 1, 3, 'system', NOW(), 1);\n\n-- 行政事务模板\nINSERT INTO task_template (tenant_id, template_name, template_code, template_type, category_id, title_template, description_template, estimated_hours, priority, difficulty_level, creator_id, creator_name, is_public, is_recommended, sort_order, create_by, create_time, status) VALUES\n(0, '会议组织模板', 'MEETING_ORGANIZATION_TEMPLATE', 1, 13, '组织{会议名称}', '安排会议场地、通知参会人员、准备会议材料', 3.00, 2, 1, 1, 'system', 1, 1, 4, 'system', NOW(), 1),\n(0, '员工入职模板', 'EMPLOYEE_ONBOARDING_TEMPLATE', 2, 14, '新员工入职：{员工姓名}', '协助新员工完成入职手续和培训', 16.00, 2, 2, 1, 'system', 1, 1, 5, 'system', NOW(), 1),\n(0, '设备维护模板', 'EQUIPMENT_MAINTENANCE_TEMPLATE', 3, 16, '{设备名称}维护保养', '定期维护保养设备，确保正常运行', 2.00, 1, 1, 1, 'system', 1, 0, 6, 'system', NOW(), 1);\n\n-- 初始化完成提示\nSELECT '任务管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建字典类型：', COUNT(*), '个') AS dict_type_count FROM sys_dict_type WHERE dict_type LIKE 'task_%' OR dict_type LIKE '%_type' OR dict_type LIKE '%_level' OR dict_type LIKE '%_role';\nSELECT CONCAT('已创建字典数据：', COUNT(*), '个') AS dict_data_count FROM sys_dict_data WHERE dict_type LIKE 'task_%' OR dict_type LIKE '%_type' OR dict_type LIKE '%_level' OR dict_type LIKE '%_role';\nSELECT CONCAT('已创建任务分类：', COUNT(*), '个') AS category_count FROM task_category WHERE tenant_id = 0;\nSELECT CONCAT('已创建任务标签：', COUNT(*), '个') AS tag_count FROM task_tag WHERE tenant_id = 0;\nSELECT CONCAT('已创建任务模板：', COUNT(*), '个') AS template_count FROM task_template WHERE tenant_id = 0; ",
      "size": 18456
    },
    {
      "path": "law-firm-modules\\law-firm-system\\src\\main\\resources\\META-INF\\db\\migration\\V1000__system_module_description.sql",
      "filename": "V1000__system_module_description.sql",
      "version": 1000,
      "module": "law-firm-modules",
      "content": "-- 系统管理模块说明\n-- 版本: V1000\n-- 模块: 系统管理模块 (V1000-V1999)\n-- 创建时间: 2023-06-01\n-- 说明: 系统管理功能模块架构说明\n\n/*\n=============================================================================\n                            系统管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n系统管理模块负责系统的基础管理功能，包括：\n- 菜单权限管理\n- 角色权限分配  \n- 组织架构管理\n- 定时任务管理\n- 系统监控功能\n- 系统升级管理\n\n二、版本规划 (V1000-V1999)\n- V1000: 模块说明文档\n- V1001: 表结构定义\n- V1002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 菜单管理\n   - sys_menu: 系统菜单结构\n\n2. 角色管理  \n   - sys_role: 角色信息\n   - sys_role_menu: 角色菜单关联\n\n3. 组织管理\n   - sys_organization: 组织架构\n   - sys_department: 部门信息\n\n4. 定时任务\n   - sys_job: 定时任务配置\n   - sys_job_log: 任务执行日志\n\n5. 系统监控\n   - sys_monitor: 系统监控配置\n   - sys_monitor_log: 监控日志\n\n6. 系统升级\n   - sys_upgrade: 升级记录\n   - sys_upgrade_log: 升级日志\n\n四、数据关系\n=============================================================================\n- sys_role → sys_role_menu → sys_menu (角色菜单权限)\n- sys_organization → sys_department (组织部门层级)\n- sys_job → sys_job_log (任务执行记录)\n- sys_monitor → sys_monitor_log (监控记录)\n\n五、权限设计\n=============================================================================\n系统管理功能需要超级管理员权限：\n- 菜单管理: MENU_MANAGE\n- 角色管理: ROLE_MANAGE  \n- 组织管理: ORG_MANAGE\n- 任务管理: JOB_MANAGE\n- 监控管理: MONITOR_MANAGE\n- 升级管理: UPGRADE_MANAGE\n\n六、注意事项\n=============================================================================\n1. 系统模块的权限数据已移至认证模块(V2000+)管理\n2. 本模块专注于系统管理功能的表结构和基础数据\n3. 监控和升级功能为系统核心功能，需谨慎操作\n4. 定时任务配置需要系统重启后生效\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01  \n                              维护团队: 系统开发组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '系统管理模块说明文档已加载' AS message; ",
      "size": 1881
    },
    {
      "path": "law-firm-modules\\law-firm-system\\src\\main\\resources\\META-INF\\db\\migration\\V1001__system_tables.sql",
      "filename": "V1001__system_tables.sql",
      "version": 1001,
      "module": "law-firm-modules",
      "content": "-- 系统管理模块表结构\n-- 版本: V1001\n-- 模块: 系统管理模块 (V1000-V1999)\n-- 创建时间: 2023-06-01\n-- 说明: 系统管理功能的完整表结构定义\n-- 包括：菜单管理、角色管理、组织管理、定时任务、系统监控、系统升级\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 菜单管理表 =======================\n\n-- sys_menu表（系统菜单表）\nDROP TABLE IF EXISTS sys_menu;\nCREATE TABLE sys_menu (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '菜单ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父菜单ID',\n    menu_name VARCHAR(50) NOT NULL COMMENT '菜单名称',\n    menu_code VARCHAR(100) NOT NULL COMMENT '菜单编码',\n    menu_type TINYINT NOT NULL COMMENT '菜单类型(1-目录,2-菜单,3-按钮)',\n    path VARCHAR(200) COMMENT '路由地址',\n    component VARCHAR(255) COMMENT '组件路径',\n    perms VARCHAR(100) COMMENT '权限标识',\n    icon VARCHAR(100) COMMENT '菜单图标',\n    is_frame TINYINT DEFAULT 0 COMMENT '是否外链(0-否,1-是)',\n    is_cache TINYINT DEFAULT 1 COMMENT '是否缓存(0-否,1-是)',\n    visible TINYINT DEFAULT 1 COMMENT '是否显示(0-否,1-是)',\n    sort INT DEFAULT 0 COMMENT '显示顺序',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_menu_code (tenant_id, menu_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_menu_type (menu_type),\n    INDEX idx_sort (sort),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统菜单表';\n\n-- ======================= 角色管理表 =======================\n\n-- sys_role表（系统角色表）\nDROP TABLE IF EXISTS sys_role;\nCREATE TABLE sys_role (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '角色ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    role_name VARCHAR(50) NOT NULL COMMENT '角色名称',\n    role_code VARCHAR(100) NOT NULL COMMENT '角色编码',\n    role_type TINYINT DEFAULT 1 COMMENT '角色类型(1-系统角色,2-业务角色)',\n    data_scope TINYINT DEFAULT 1 COMMENT '数据权限(1-全部,2-自定义,3-本部门,4-本部门及下级,5-仅本人)',\n    description VARCHAR(255) COMMENT '角色描述',\n    sort INT DEFAULT 0 COMMENT '显示顺序',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_role_code (tenant_id, role_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_role_type (role_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统角色表';\n\n-- sys_role_menu表（角色菜单关联表）\nDROP TABLE IF EXISTS sys_role_menu;\nCREATE TABLE sys_role_menu (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    role_id BIGINT NOT NULL COMMENT '角色ID',\n    menu_id BIGINT NOT NULL COMMENT '菜单ID',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    \n    UNIQUE KEY uk_role_menu (role_id, menu_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_role_id (role_id),\n    INDEX idx_menu_id (menu_id),\n    \n    CONSTRAINT fk_role_menu_role FOREIGN KEY (role_id) REFERENCES sys_role(id) ON DELETE CASCADE,\n    CONSTRAINT fk_role_menu_menu FOREIGN KEY (menu_id) REFERENCES sys_menu(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='角色菜单关联表';\n\n-- ======================= 组织管理表 =======================\n\n-- sys_organization表（组织架构表）\nDROP TABLE IF EXISTS sys_organization;\nCREATE TABLE sys_organization (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '组织ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父组织ID',\n    org_name VARCHAR(50) NOT NULL COMMENT '组织名称',\n    org_code VARCHAR(100) NOT NULL COMMENT '组织编码',\n    org_type TINYINT DEFAULT 1 COMMENT '组织类型(1-公司,2-部门,3-小组)',\n    level_code VARCHAR(255) COMMENT '层级编码(用于快速查询)',\n    leader_id BIGINT COMMENT '负责人ID',\n    leader_name VARCHAR(50) COMMENT '负责人姓名',\n    phone VARCHAR(20) COMMENT '联系电话',\n    email VARCHAR(100) COMMENT '邮箱地址',\n    address VARCHAR(255) COMMENT '办公地址',\n    sort INT DEFAULT 0 COMMENT '显示顺序',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_org_code (tenant_id, org_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_org_type (org_type),\n    INDEX idx_leader_id (leader_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='组织架构表';\n\n-- ======================= 定时任务表 =======================\n\n-- sys_job表（定时任务表）\nDROP TABLE IF EXISTS sys_job;\nCREATE TABLE sys_job (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '任务ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    job_name VARCHAR(50) NOT NULL COMMENT '任务名称',\n    job_group VARCHAR(50) DEFAULT 'DEFAULT' COMMENT '任务分组',\n    job_class VARCHAR(255) NOT NULL COMMENT '任务类名',\n    cron_expression VARCHAR(100) NOT NULL COMMENT 'Cron表达式',\n    description VARCHAR(255) COMMENT '任务描述',\n    is_concurrent TINYINT DEFAULT 0 COMMENT '是否并发(0-否,1-是)',\n    misfire_policy TINYINT DEFAULT 1 COMMENT '错过策略(1-立即执行,2-执行一次,3-放弃执行)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-暂停,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_job_name (job_name),\n    INDEX idx_job_group (job_group),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='定时任务表';\n\n-- sys_job_log表（任务执行日志表）\nDROP TABLE IF EXISTS sys_job_log;\nCREATE TABLE sys_job_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    job_id BIGINT NOT NULL COMMENT '任务ID',\n    job_name VARCHAR(50) COMMENT '任务名称',\n    job_group VARCHAR(50) COMMENT '任务分组',\n    job_class VARCHAR(255) COMMENT '任务类名',\n    cron_expression VARCHAR(100) COMMENT 'Cron表达式',\n    execute_status TINYINT COMMENT '执行状态(0-失败,1-成功)',\n    execute_time DATETIME COMMENT '执行时间',\n    execute_duration INT COMMENT '执行时长(毫秒)',\n    execute_result TEXT COMMENT '执行结果',\n    error_message TEXT COMMENT '错误信息',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_job_id (job_id),\n    INDEX idx_execute_status (execute_status),\n    INDEX idx_execute_time (execute_time),\n    \n    CONSTRAINT fk_job_log_job FOREIGN KEY (job_id) REFERENCES sys_job(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='任务执行日志表';\n\n-- ======================= 系统监控表 =======================\n\n-- sys_app_monitor表（应用监控表）\nDROP TABLE IF EXISTS sys_app_monitor;\nCREATE TABLE sys_app_monitor (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '监控ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    app_name VARCHAR(100) NOT NULL COMMENT '应用名称',\n    instance_id VARCHAR(100) NOT NULL COMMENT '实例ID',\n    jvm_memory_used BIGINT COMMENT 'JVM内存使用(bytes)',\n    jvm_memory_max BIGINT COMMENT 'JVM最大内存(bytes)',\n    thread_count INTEGER COMMENT '线程数量',\n    gc_count INTEGER COMMENT 'GC次数',\n    monitor_time DATETIME COMMENT '监控时间',\n    version INTEGER DEFAULT 0 COMMENT '版本号',\n    status INTEGER DEFAULT 0 COMMENT '状态（0-正常，1-禁用）',\n    sort INTEGER DEFAULT 0 COMMENT '排序号',\n    deleted INTEGER DEFAULT 0 COMMENT '删除标记（0-正常，1-删除）',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_app_name (app_name),\n    INDEX idx_instance_id (instance_id),\n    INDEX idx_monitor_time (monitor_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='应用监控表';\n\n-- sys_db_monitor表（数据库监控表）\nDROP TABLE IF EXISTS sys_db_monitor;\nCREATE TABLE sys_db_monitor (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '监控ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    db_name VARCHAR(100) NOT NULL COMMENT '数据库名称',\n    db_url VARCHAR(1024) COMMENT '数据库连接',\n    active_connections INTEGER COMMENT '活动连接数',\n    max_connections INTEGER COMMENT '最大连接数',\n    qps DECIMAL(10,2) COMMENT '每秒查询数',\n    tps DECIMAL(10,2) COMMENT '每秒事务数',\n    slow_queries INTEGER COMMENT '慢查询数',\n    table_size BIGINT COMMENT '数据表大小(bytes)',\n    index_size BIGINT COMMENT '索引大小(bytes)',\n    db_status VARCHAR(20) COMMENT '状态(NORMAL,WARNING,ERROR)',\n    monitor_time DATETIME COMMENT '监控时间',\n    version INTEGER DEFAULT 0 COMMENT '版本号',\n    status INTEGER DEFAULT 0 COMMENT '状态（0-正常，1-禁用）',\n    sort INTEGER DEFAULT 0 COMMENT '排序号',\n    deleted INTEGER DEFAULT 0 COMMENT '删除标记（0-正常，1-删除）',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_db_name (db_name),\n    INDEX idx_monitor_time (monitor_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='数据库监控表';\n\n-- sys_server_monitor表（服务器监控表）\nDROP TABLE IF EXISTS sys_server_monitor;\nCREATE TABLE sys_server_monitor (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '监控ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    server_name VARCHAR(100) COMMENT '服务器名称',\n    server_ip VARCHAR(50) NOT NULL COMMENT '服务器IP',\n    cpu_usage DECIMAL(10,2) COMMENT 'CPU使用率(%)',\n    memory_usage DECIMAL(10,2) COMMENT '内存使用率(%)',\n    disk_usage DECIMAL(10,2) COMMENT '磁盘使用率(%)',\n    network_rx BIGINT COMMENT '网络接收量(bytes)',\n    network_tx BIGINT COMMENT '网络发送量(bytes)',\n    server_load VARCHAR(1024) COMMENT '服务器负载',\n    monitor_time DATETIME COMMENT '监控时间',\n    version INTEGER DEFAULT 0 COMMENT '版本号',\n    status INTEGER DEFAULT 0 COMMENT '状态（0-正常，1-禁用）',\n    sort INTEGER DEFAULT 0 COMMENT '排序号',\n    deleted INTEGER DEFAULT 0 COMMENT '删除标记（0-正常，1-删除）',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_server_ip (server_ip),\n    INDEX idx_monitor_time (monitor_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='服务器监控表';\n\n-- sys_monitor_config表（监控配置表）\nDROP TABLE IF EXISTS sys_monitor_config;\nCREATE TABLE sys_monitor_config (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '配置ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    monitor_type TINYINT NOT NULL COMMENT '监控类型(1-服务器,2-应用,3-数据库,4-接口)',\n    monitor_name VARCHAR(100) NOT NULL COMMENT '监控名称',\n    monitor_target VARCHAR(255) NOT NULL COMMENT '监控目标',\n    threshold_warning DECIMAL(10,2) COMMENT '警告阈值',\n    threshold_critical DECIMAL(10,2) COMMENT '严重阈值',\n    check_interval INT DEFAULT 60 COMMENT '检查间隔(秒)',\n    timeout_seconds INT DEFAULT 30 COMMENT '超时时间(秒)',\n    retry_count INT DEFAULT 3 COMMENT '重试次数',\n    notification_enabled TINYINT DEFAULT 1 COMMENT '是否通知(0-否,1-是)',\n    notification_channels VARCHAR(255) COMMENT '通知渠道(邮件,短信,钉钉等)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_monitor_type (monitor_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='监控配置表';\n\n-- sys_monitor_data表（监控数据表）\nDROP TABLE IF EXISTS sys_monitor_data;\nCREATE TABLE sys_monitor_data (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '数据ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    config_id BIGINT NOT NULL COMMENT '配置ID',\n    metric_name VARCHAR(100) NOT NULL COMMENT '指标名称',\n    metric_value DECIMAL(15,4) COMMENT '指标值',\n    metric_unit VARCHAR(20) COMMENT '单位',\n    status TINYINT COMMENT '状态(0-正常,1-警告,2-严重)',\n    collect_time DATETIME NOT NULL COMMENT '采集时间',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_config_id (config_id),\n    INDEX idx_metric_name (metric_name),\n    INDEX idx_collect_time (collect_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_monitor_data_config FOREIGN KEY (config_id) REFERENCES sys_monitor_config(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='监控数据表';\n\n-- sys_monitor_alert表（监控告警表）\nDROP TABLE IF EXISTS sys_monitor_alert;\nCREATE TABLE sys_monitor_alert (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '告警ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    config_id BIGINT NOT NULL COMMENT '配置ID',\n    alert_level TINYINT NOT NULL COMMENT '告警级别(1-警告,2-严重,3-紧急)',\n    alert_title VARCHAR(255) NOT NULL COMMENT '告警标题',\n    alert_content TEXT COMMENT '告警内容',\n    alert_time DATETIME NOT NULL COMMENT '告警时间',\n    alert_status TINYINT DEFAULT 1 COMMENT '处理状态(1-待处理,2-处理中,3-已处理,4-已忽略)',\n    handler_id BIGINT COMMENT '处理人ID',\n    handler_name VARCHAR(50) COMMENT '处理人姓名',\n    handle_time DATETIME COMMENT '处理时间',\n    handle_result TEXT COMMENT '处理结果',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_config_id (config_id),\n    INDEX idx_alert_level (alert_level),\n    INDEX idx_alert_status (alert_status),\n    INDEX idx_alert_time (alert_time),\n    \n    CONSTRAINT fk_monitor_alert_config FOREIGN KEY (config_id) REFERENCES sys_monitor_config(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='监控告警表';\n\n-- ======================= 系统升级表 =======================\n\n-- sys_upgrade表（系统升级表）\nDROP TABLE IF EXISTS sys_upgrade;\nCREATE TABLE sys_upgrade (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '升级ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    version_from VARCHAR(20) NOT NULL COMMENT '源版本',\n    version_to VARCHAR(20) NOT NULL COMMENT '目标版本',\n    upgrade_type TINYINT DEFAULT 1 COMMENT '升级类型(1-补丁,2-小版本,3-大版本)',\n    upgrade_status TINYINT DEFAULT 1 COMMENT '升级状态(1-待升级,2-升级中,3-升级成功,4-升级失败)',\n    upgrade_description TEXT COMMENT '升级说明',\n    backup_required TINYINT DEFAULT 1 COMMENT '是否需要备份(0-否,1-是)',\n    backup_path VARCHAR(500) COMMENT '备份路径',\n    upgrade_script TEXT COMMENT '升级脚本',\n    rollback_script TEXT COMMENT '回滚脚本',\n    upgrade_start_time DATETIME COMMENT '升级开始时间',\n    upgrade_end_time DATETIME COMMENT '升级结束时间',\n    upgrade_duration INT COMMENT '升级耗时(秒)',\n    upgrade_result TEXT COMMENT '升级结果',\n    error_message TEXT COMMENT '错误信息',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(50) COMMENT '操作人姓名',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_version_from (version_from),\n    INDEX idx_version_to (version_to),\n    INDEX idx_upgrade_status (upgrade_status),\n    INDEX idx_upgrade_start_time (upgrade_start_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统升级表';\n\n-- sys_upgrade_log表（升级日志表）\nDROP TABLE IF EXISTS sys_upgrade_log;\nCREATE TABLE sys_upgrade_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    upgrade_id BIGINT NOT NULL COMMENT '升级ID',\n    step_name VARCHAR(100) NOT NULL COMMENT '步骤名称',\n    step_order INT NOT NULL COMMENT '步骤顺序',\n    step_status TINYINT COMMENT '步骤状态(1-执行中,2-成功,3-失败)',\n    step_description TEXT COMMENT '步骤描述',\n    step_result TEXT COMMENT '执行结果',\n    error_message TEXT COMMENT '错误信息',\n    execute_start_time DATETIME COMMENT '开始时间',\n    execute_end_time DATETIME COMMENT '结束时间',\n    execute_duration INT COMMENT '执行时长(毫秒)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_upgrade_id (upgrade_id),\n    INDEX idx_step_order (step_order),\n    INDEX idx_step_status (step_status),\n    \n    CONSTRAINT fk_upgrade_log_upgrade FOREIGN KEY (upgrade_id) REFERENCES sys_upgrade(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='升级日志表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1;",
      "size": 18199
    },
    {
      "path": "law-firm-modules\\law-firm-system\\src\\main\\resources\\META-INF\\db\\migration\\V1002__system_data.sql",
      "filename": "V1002__system_data.sql",
      "version": 1002,
      "module": "law-firm-modules",
      "content": "-- 系统管理模块基础数据\n-- 版本: V1002\n-- 模块: 系统管理模块 (V1000-V1999)\n-- 创建时间: 2023-06-01\n-- 说明: 系统管理功能的基础数据初始化\n-- 包括：系统菜单、默认角色、组织架构、定时任务、监控配置\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统菜单数据 =======================\n\n-- 一级菜单\nINSERT INTO sys_menu (menu_name, menu_code, menu_type, path, component, icon, sort, create_by) VALUES\n('系统管理', 'system', 1, '/system', NULL, 'system', 1000, 'system'),\n('权限管理', 'auth', 1, '/auth', NULL, 'lock', 2000, 'system'),\n('人员管理', 'personnel', 1, '/personnel', NULL, 'user', 3000, 'system'),\n('案件管理', 'case', 1, '/case', NULL, 'folder', 4000, 'system'),\n('监控中心', 'monitor', 1, '/monitor', NULL, 'monitor', 9000, 'system');\n\n-- 获取一级菜单ID并插入子菜单\n-- 系统管理子菜单\nSET @system_menu_id = (SELECT id FROM sys_menu WHERE menu_code = 'system');\nINSERT INTO sys_menu (parent_id, menu_name, menu_code, menu_type, path, component, perms, icon, sort, create_by) VALUES\n(@system_menu_id, '菜单管理', 'system:menu', 2, '/system/menu', 'system/menu/index', 'system:menu:list', 'tree-table', 1010, 'system'),\n(@system_menu_id, '角色管理', 'system:role', 2, '/system/role', 'system/role/index', 'system:role:list', 'peoples', 1020, 'system'),\n(@system_menu_id, '组织管理', 'system:org', 2, '/system/org', 'system/org/index', 'system:org:list', 'tree', 1030, 'system'),\n(@system_menu_id, '定时任务', 'system:job', 2, '/system/job', 'system/job/index', 'system:job:list', 'job', 1040, 'system'),\n(@system_menu_id, '系统升级', 'system:upgrade', 2, '/system/upgrade', 'system/upgrade/index', 'system:upgrade:list', 'upload', 1050, 'system');\n\n-- 监控管理子菜单\nSET @monitor_menu_id = (SELECT id FROM sys_menu WHERE menu_code = 'monitor');\nINSERT INTO sys_menu (parent_id, menu_name, menu_code, menu_type, path, component, perms, icon, sort, create_by) VALUES\n(@monitor_menu_id, '监控配置', 'monitor:config', 2, '/monitor/config', 'monitor/config/index', 'monitor:config:list', 'monitor', 9010, 'system'),\n(@monitor_menu_id, '监控数据', 'monitor:data', 2, '/monitor/data', 'monitor/data/index', 'monitor:data:list', 'chart', 9020, 'system'),\n(@monitor_menu_id, '告警管理', 'monitor:alert', 2, '/monitor/alert', 'monitor/alert/index', 'monitor:alert:list', 'message', 9030, 'system');\n\n-- 菜单按钮权限\n-- 菜单管理按钮\nSET @menu_manage_id = (SELECT id FROM sys_menu WHERE menu_code = 'system:menu');\nINSERT INTO sys_menu (parent_id, menu_name, menu_code, menu_type, perms, sort, create_by) VALUES\n(@menu_manage_id, '菜单查询', 'system:menu:query', 3, 'system:menu:query', 1, 'system'),\n(@menu_manage_id, '菜单新增', 'system:menu:add', 3, 'system:menu:add', 2, 'system'),\n(@menu_manage_id, '菜单修改', 'system:menu:edit', 3, 'system:menu:edit', 3, 'system'),\n(@menu_manage_id, '菜单删除', 'system:menu:remove', 3, 'system:menu:remove', 4, 'system');\n\n-- 角色管理按钮\nSET @role_manage_id = (SELECT id FROM sys_menu WHERE menu_code = 'system:role');\nINSERT INTO sys_menu (parent_id, menu_name, menu_code, menu_type, perms, sort, create_by) VALUES\n(@role_manage_id, '角色查询', 'system:role:query', 3, 'system:role:query', 1, 'system'),\n(@role_manage_id, '角色新增', 'system:role:add', 3, 'system:role:add', 2, 'system'),\n(@role_manage_id, '角色修改', 'system:role:edit', 3, 'system:role:edit', 3, 'system'),\n(@role_manage_id, '角色删除', 'system:role:remove', 3, 'system:role:remove', 4, 'system'),\n(@role_manage_id, '分配权限', 'system:role:auth', 3, 'system:role:auth', 5, 'system');\n\n-- 组织管理按钮\nSET @org_manage_id = (SELECT id FROM sys_menu WHERE menu_code = 'system:org');\nINSERT INTO sys_menu (parent_id, menu_name, menu_code, menu_type, perms, sort, create_by) VALUES\n(@org_manage_id, '组织查询', 'system:org:query', 3, 'system:org:query', 1, 'system'),\n(@org_manage_id, '组织新增', 'system:org:add', 3, 'system:org:add', 2, 'system'),\n(@org_manage_id, '组织修改', 'system:org:edit', 3, 'system:org:edit', 3, 'system'),\n(@org_manage_id, '组织删除', 'system:org:remove', 3, 'system:org:remove', 4, 'system');\n\n-- ======================= 系统角色数据 =======================\n\nINSERT INTO sys_role (role_name, role_code, role_type, data_scope, description, sort, create_by) VALUES\n('超级管理员', 'SUPER_ADMIN', 1, 1, '系统超级管理员，拥有所有权限', 1, 'system'),\n('系统管理员', 'SYSTEM_ADMIN', 1, 1, '系统管理员，负责系统配置和管理', 2, 'system'),\n('监控管理员', 'MONITOR_ADMIN', 1, 2, '监控管理员，负责系统监控', 3, 'system'),\n('普通用户', 'COMMON_USER', 2, 5, '普通业务用户', 10, 'system');\n\n-- 超级管理员分配所有菜单权限\nSET @super_admin_role_id = (SELECT id FROM sys_role WHERE role_code = 'SUPER_ADMIN');\nINSERT INTO sys_role_menu (role_id, menu_id, create_by)\nSELECT \n    @super_admin_role_id,\n    id,\n    'system'\nFROM sys_menu;\n\n-- 系统管理员分配系统管理相关权限\nSET @system_admin_role_id = (SELECT id FROM sys_role WHERE role_code = 'SYSTEM_ADMIN');\nINSERT INTO sys_role_menu (role_id, menu_id, create_by)\nSELECT \n    @system_admin_role_id,\n    sm.id,\n    'system'\nFROM sys_menu sm\nWHERE sm.menu_code LIKE 'system%' \n   OR sm.parent_id IN (SELECT id FROM (SELECT id FROM sys_menu WHERE menu_code LIKE 'system%') tmp);\n\n-- 监控管理员分配监控相关权限\nSET @monitor_admin_role_id = (SELECT id FROM sys_role WHERE role_code = 'MONITOR_ADMIN');\nINSERT INTO sys_role_menu (role_id, menu_id, create_by)\nSELECT \n    @monitor_admin_role_id,\n    sm.id,\n    'system'\nFROM sys_menu sm\nWHERE sm.menu_code LIKE 'monitor%' \n   OR sm.parent_id IN (SELECT id FROM (SELECT id FROM sys_menu WHERE menu_code LIKE 'monitor%') tmp);\n\n-- ======================= 组织架构数据 =======================\n\nINSERT INTO sys_organization (org_name, org_code, org_type, leader_name, phone, email, sort, create_by, remark) VALUES\n('律师事务所', 'LAW_FIRM', 1, '总负责人', '400-0000-0000', 'admin@lawfirm.com', 1, 'system', '律师事务所总部'),\n('管理部门', 'MANAGEMENT', 2, '管理部长', '', '', 10, 'system', '行政管理部门'),\n('业务部门', 'BUSINESS', 2, '业务部长', '', '', 20, 'system', '业务执行部门'),\n('技术部门', 'TECHNOLOGY', 2, '技术部长', '', '', 30, 'system', '技术支持部门');\n\n-- 设置部门层级关系\nSET @law_firm_org_id = (SELECT id FROM sys_organization WHERE org_code = 'LAW_FIRM');\nUPDATE sys_organization SET parent_id = @law_firm_org_id WHERE org_code IN ('MANAGEMENT', 'BUSINESS', 'TECHNOLOGY');\n\n-- ======================= 定时任务数据 =======================\n\nINSERT INTO sys_job (job_name, job_group, job_class, cron_expression, description, create_by) VALUES\n('系统监控数据清理', 'SYSTEM', 'com.lawfirm.system.job.MonitorDataCleanJob', '0 0 2 * * ?', '每天凌晨2点清理过期监控数据', 'system'),\n('系统日志归档', 'SYSTEM', 'com.lawfirm.system.job.LogArchiveJob', '0 0 3 * * ?', '每天凌晨3点归档系统日志', 'system'),\n('定时任务状态检查', 'SYSTEM', 'com.lawfirm.system.job.JobStatusCheckJob', '0 */10 * * * ?', '每10分钟检查定时任务状态', 'system'),\n('系统健康检查', 'MONITOR', 'com.lawfirm.system.job.SystemHealthCheckJob', '0 */5 * * * ?', '每5分钟检查系统健康状况', 'system');\n\n-- ======================= 监控配置数据 =======================\n\nINSERT INTO sys_monitor_config (monitor_type, monitor_name, monitor_target, threshold_warning, threshold_critical, remark, create_by) VALUES\n-- 服务器监控\n(1, 'CPU使用率监控', 'CPU_USAGE', 70.00, 90.00, '服务器CPU使用率监控', 'system'),\n(1, '内存使用率监控', 'MEMORY_USAGE', 80.00, 95.00, '服务器内存使用率监控', 'system'),\n(1, '磁盘使用率监控', 'DISK_USAGE', 80.00, 95.00, '服务器磁盘使用率监控', 'system'),\n\n-- 应用监控\n(2, 'JVM堆内存监控', 'JVM_HEAP_USAGE', 70.00, 85.00, 'JVM堆内存使用率监控', 'system'),\n(2, '应用响应时间监控', 'APP_RESPONSE_TIME', 1000.00, 3000.00, '应用接口响应时间监控(毫秒)', 'system'),\n(2, '应用错误率监控', 'APP_ERROR_RATE', 5.00, 10.00, '应用错误率监控(%)', 'system'),\n\n-- 数据库监控\n(3, '数据库连接数监控', 'DB_CONNECTION_COUNT', 80.00, 95.00, '数据库连接数监控', 'system'),\n(3, '数据库慢查询监控', 'DB_SLOW_QUERY_COUNT', 10.00, 50.00, '数据库慢查询数量监控', 'system'),\n\n-- 接口监控\n(4, 'API响应时间监控', 'API_RESPONSE_TIME', 500.00, 2000.00, 'API接口响应时间监控(毫秒)', 'system'),\n(4, 'API成功率监控', 'API_SUCCESS_RATE', 95.00, 90.00, 'API接口成功率监控(%)', 'system');\n\n-- ======================= 系统升级记录 =======================\n\nINSERT INTO sys_upgrade (version_from, version_to, upgrade_type, upgrade_status, upgrade_description, operator_name, create_by) VALUES\n('0.0.0', '1.0.0', 3, 3, '系统初始化安装', '系统管理员', 'system'); ",
      "size": 7730
    },
    {
      "path": "law-firm-modules\\law-firm-schedule\\src\\main\\resources\\META-INF\\db\\migration\\V12000__schedule_module_description.sql",
      "filename": "V12000__schedule_module_description.sql",
      "version": 12000,
      "module": "law-firm-modules",
      "content": "-- 日程管理模块说明\n-- 版本: V12000\n-- 模块: 日程管理模块 (V12000-V12999)\n-- 创建时间: 2023-06-01\n-- 说明: 日程管理功能模块架构说明\n\n/*\n=============================================================================\n                            日程管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n日程管理模块负责律师事务所的日程规划和时间管理，包括：\n- 个人日程管理\n- 团队协作日程\n- 会议室预订管理\n- 日程提醒通知\n- 外部日历同步\n- 法庭出庭安排\n- 客户会面预约\n- 工作计划制定\n- 时间统计分析\n\n二、版本规划 (V12000-V12999)\n- V12000: 模块说明文档\n- V12001: 表结构定义\n- V12002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 日程基础管理\n   - schedule_schedule: 日程主表\n   - schedule_content: 日程内容详情\n   - schedule_attachment: 日程附件\n\n2. 日历管理\n   - schedule_calendar: 日历管理\n   - schedule_calendar_subscription: 日历订阅\n   - schedule_calendar_share: 日历分享\n\n3. 参与协作\n   - schedule_participant: 日程参与者\n   - schedule_invitation: 邀请通知\n   - schedule_response: 参与响应\n\n4. 提醒通知\n   - schedule_reminder: 日程提醒\n   - schedule_notification: 通知记录\n   - schedule_alert: 告警管理\n\n5. 会议室管理\n   - schedule_meeting_room: 会议室信息\n   - schedule_room_booking: 会议室预订\n   - schedule_room_equipment: 会议室设备\n\n6. 外部集成\n   - schedule_external_calendar: 外部日历\n   - schedule_sync_log: 同步日志\n   - schedule_calendar_sync: 日历同步\n\n7. 重复规则\n   - schedule_recurrence: 重复规则\n   - schedule_exception: 例外日期\n   - schedule_occurrence: 重复实例\n\n8. 统计分析\n   - schedule_statistics: 日程统计\n   - schedule_time_analysis: 时间分析\n   - schedule_report: 报表数据\n\n四、数据关系\n=============================================================================\n- schedule_schedule → schedule_content (日程内容)\n- schedule_schedule → schedule_attachment (日程附件)\n- schedule_schedule → schedule_participant (参与者)\n- schedule_schedule → schedule_reminder (提醒设置)\n- schedule_schedule → schedule_recurrence (重复规则)\n- schedule_calendar → schedule_schedule (日历日程)\n- schedule_meeting_room → schedule_room_booking (会议室预订)\n- schedule_external_calendar → schedule_sync_log (同步记录)\n\n五、业务特点\n=============================================================================\n1. 时间管理\n   - 全天事件支持\n   - 时区处理\n   - 工作时间设置\n   - 冲突检测\n\n2. 重复规则\n   - 灵活的重复模式\n   - 例外日期处理\n   - 结束条件设置\n   - 批量操作支持\n\n3. 协作功能\n   - 多人参与\n   - 权限控制\n   - 状态同步\n   - 通知机制\n\n4. 提醒系统\n   - 多种提醒方式\n   - 提前时间设置\n   - 重复提醒\n   - 智能推送\n\n5. 会议室管理\n   - 资源预订\n   - 冲突检测\n   - 设备管理\n   - 使用统计\n\n六、权限设计\n=============================================================================\n日程管理功能权限控制：\n- 日程查看: SCHEDULE_VIEW\n- 日程管理: SCHEDULE_MANAGE\n- 日程创建: SCHEDULE_CREATE\n- 日程编辑: SCHEDULE_EDIT\n- 日程删除: SCHEDULE_DELETE\n- 日历管理: CALENDAR_MANAGE\n- 会议室管理: MEETING_ROOM_MANAGE\n- 会议室预订: MEETING_ROOM_BOOK\n- 外部同步: EXTERNAL_SYNC\n- 统计查看: SCHEDULE_STATISTICS\n- 系统配置: SCHEDULE_CONFIG\n- 提醒管理: REMINDER_MANAGE\n\n七、注意事项\n=============================================================================\n1. 时区处理要统一，避免时间混乱\n2. 重复日程的处理要考虑性能优化\n3. 会议室冲突检测要实时准确\n4. 外部日历同步要保证数据一致性\n5. 提醒通知要及时可靠\n6. 权限控制要细粒度管理\n7. 大量数据的查询要优化索引\n\n八、日程编号规则\n=============================================================================\n日程编号格式：SCH-类型-YYYY-流水号\n- SCH: 日程(Schedule)前缀\n- 类型: MTG-会议, TSK-任务, APT-约见, CRT-法庭, EVT-事件\n- YYYY: 年份\n- 流水号: 4位数字，从0001开始\n\n示例：SCH-MTG-2023-0001（2023年第1个会议日程）\n\n九、日程状态管理\n=============================================================================\n日程状态流转：\n1. 草稿(DRAFT) → 计划中(PLANNED)\n2. 计划中(PLANNED) → 进行中(IN_PROGRESS)\n3. 进行中(IN_PROGRESS) → 已完成(COMPLETED)\n4. 任何状态 → 已取消(CANCELLED)\n\n参与者响应状态：\n- 待定(PENDING)\n- 接受(ACCEPTED)\n- 拒绝(DECLINED)\n- 暂定(TENTATIVE)\n\n十、重复规则设计\n=============================================================================\n重复类型：\n- DAILY: 每日重复\n- WEEKLY: 每周重复\n- MONTHLY: 每月重复\n- YEARLY: 每年重复\n- CUSTOM: 自定义重复\n\n重复参数：\n- 间隔(interval): 重复间隔\n- 星期(weekdays): 适用星期\n- 月份天数(monthday): 月中第几天\n- 月份周次(weekofmonth): 月中第几周\n- 结束条件(endtype): 永不结束/次数/日期\n\n十一、会议室管理\n=============================================================================\n1. 会议室信息\n   - 基本信息: 名称、位置、容量\n   - 设备配置: 投影仪、视频会议、白板\n   - 可用时间: 工作日、时间段\n   - 预订规则: 提前时间、最长时间\n\n2. 预订管理\n   - 冲突检测\n   - 审批流程\n   - 使用统计\n   - 成本核算\n\n3. 设备管理\n   - 设备清单\n   - 故障报修\n   - 维护记录\n   - 使用监控\n\n十二、外部日历集成\n=============================================================================\n支持的外部平台：\n- Google Calendar\n- Microsoft Outlook\n- Apple iCalendar\n- 钉钉日历\n- 企业微信日历\n\n同步策略：\n- 单向同步: 只导入或只导出\n- 双向同步: 保持数据一致\n- 定时同步: 设置同步频率\n- 实时同步: 变更立即同步\n\n数据映射：\n- 时间字段映射\n- 状态字段映射\n- 参与者映射\n- 提醒设置映射\n\n十三、时间统计分析\n=============================================================================\n1. 个人统计\n   - 工作时间分布\n   - 会议时间占比\n   - 任务完成率\n   - 效率分析\n\n2. 团队统计\n   - 团队协作度\n   - 会议频次\n   - 资源使用率\n   - 工作负荷\n\n3. 会议室统计\n   - 使用率统计\n   - 热门时段\n   - 成本分析\n   - 设备利用率\n\n4. 趋势分析\n   - 时间趋势\n   - 季节性分析\n   - 工作模式\n   - 优化建议\n\n十四、通知提醒机制\n=============================================================================\n1. 提醒类型\n   - 系统通知\n   - 邮件提醒\n   - 短信提醒\n   - 微信推送\n   - 桌面弹窗\n\n2. 提醒时机\n   - 即时提醒\n   - 提前提醒\n   - 重复提醒\n   - 超时提醒\n\n3. 智能推送\n   - 根据用户习惯\n   - 重要程度判断\n   - 免打扰时间\n   - 推送频率控制\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 日程管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '日程管理模块说明文档已加载' AS message; ",
      "size": 5133
    },
    {
      "path": "law-firm-modules\\law-firm-schedule\\src\\main\\resources\\META-INF\\db\\migration\\V12001__init_schedule_tables.sql",
      "filename": "V12001__init_schedule_tables.sql",
      "version": 12001,
      "module": "law-firm-modules",
      "content": "-- 日程管理模块表结构\n-- 版本: V12001\n-- 模块: 日程管理模块 (V12000-V12999)\n-- 创建时间: 2023-06-01\n-- 说明: 日程管理功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 日程基础管理表 =======================\n\n-- schedule_schedule表（日程主表）\nDROP TABLE IF EXISTS schedule_schedule;\nCREATE TABLE schedule_schedule (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日程ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    schedule_number VARCHAR(50) NOT NULL COMMENT '日程编号',\n    title VARCHAR(200) NOT NULL COMMENT '日程标题',\n    description TEXT COMMENT '日程描述',\n    schedule_type TINYINT DEFAULT 1 COMMENT '日程类型(1-会议,2-任务,3-约见,4-法庭,5-事件,6-培训,7-休假)',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    start_time DATETIME NOT NULL COMMENT '开始时间',\n    end_time DATETIME NOT NULL COMMENT '结束时间',\n    timezone VARCHAR(50) DEFAULT 'Asia/Shanghai' COMMENT '时区',\n    is_all_day TINYINT DEFAULT 0 COMMENT '是否全天(0-否,1-是)',\n    location VARCHAR(500) COMMENT '地点',\n    online_meeting_url VARCHAR(500) COMMENT '在线会议链接',\n    calendar_id BIGINT COMMENT '所属日历ID',\n    organizer_id BIGINT NOT NULL COMMENT '组织者ID',\n    organizer_name VARCHAR(50) COMMENT '组织者姓名',\n    schedule_status TINYINT DEFAULT 1 COMMENT '日程状态(1-草稿,2-计划中,3-进行中,4-已完成,5-已取消)',\n    visibility TINYINT DEFAULT 1 COMMENT '可见性(1-公开,2-私密,3-仅参与者)',\n    is_recurring TINYINT DEFAULT 0 COMMENT '是否重复(0-否,1-是)',\n    recurrence_id BIGINT COMMENT '重复规则ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父日程ID(重复日程的单个实例)',\n    is_exception TINYINT DEFAULT 0 COMMENT '是否例外实例(0-否,1-是)',\n    meeting_room_id BIGINT COMMENT '会议室ID',\n    cost DECIMAL(10,2) DEFAULT 0.00 COMMENT '成本费用',\n    participant_count INT DEFAULT 0 COMMENT '参与人数',\n    attachment_count INT DEFAULT 0 COMMENT '附件数量',\n    reminder_count INT DEFAULT 0 COMMENT '提醒数量',\n    case_id BIGINT COMMENT '关联案件ID',\n    task_id BIGINT COMMENT '关联任务ID',\n    client_id BIGINT COMMENT '关联客户ID',\n    tags JSON COMMENT '标签信息(JSON格式)',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_schedule_number (tenant_id, schedule_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_title (title),\n    INDEX idx_schedule_type (schedule_type),\n    INDEX idx_priority (priority),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_organizer_id (organizer_id),\n    INDEX idx_schedule_status (schedule_status),\n    INDEX idx_calendar_id (calendar_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_meeting_room_id (meeting_room_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='日程主表';\n\n-- schedule_content表（日程内容详情表）\nDROP TABLE IF EXISTS schedule_content;\nCREATE TABLE schedule_content (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '内容ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    schedule_id BIGINT NOT NULL COMMENT '日程ID',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-主要内容,2-会议议程,3-准备事项,4-会议纪要)',\n    content TEXT COMMENT '内容详情',\n    content_html TEXT COMMENT 'HTML格式内容',\n    agenda JSON COMMENT '议程安排(JSON格式)',\n    preparation JSON COMMENT '准备事项(JSON格式)',\n    meeting_minutes JSON COMMENT '会议纪要(JSON格式)',\n    action_items JSON COMMENT '行动项(JSON格式)',\n    decisions JSON COMMENT '决议事项(JSON格式)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_schedule_id (schedule_id),\n    INDEX idx_content_type (content_type),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_schedule_content_schedule FOREIGN KEY (schedule_id) REFERENCES schedule_schedule(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='日程内容详情表'; \n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 4722
    },
    {
      "path": "law-firm-modules\\law-firm-schedule\\src\\main\\resources\\META-INF\\db\\migration\\V12002__init_schedule_data.sql",
      "filename": "V12002__init_schedule_data.sql",
      "version": 12002,
      "module": "law-firm-modules",
      "content": "-- 日程管理模块基础数据\n-- 版本: V12002\n-- 模块: 日程管理模块 (V12000-V12999)\n-- 创建时间: 2023-06-01\n-- 说明: 日程管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 日程管理相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('日程类型', 'schedule_type', 1, 'system', NOW(), '日程类型字典'),\n('日程优先级', 'schedule_priority', 1, 'system', NOW(), '日程优先级字典'),\n('日程状态', 'schedule_status', 1, 'system', NOW(), '日程状态字典'),\n('日程可见性', 'schedule_visibility', 1, 'system', NOW(), '日程可见性字典'),\n('参与者状态', 'participant_status', 1, 'system', NOW(), '参与者响应状态字典'),\n('提醒类型', 'reminder_type', 1, 'system', NOW(), '提醒类型字典'),\n('提醒状态', 'reminder_status', 1, 'system', NOW(), '提醒状态字典'),\n('重复类型', 'recurrence_type', 1, 'system', NOW(), '重复类型字典'),\n('重复结束类型', 'recurrence_end_type', 1, 'system', NOW(), '重复结束类型字典'),\n('会议室状态', 'meeting_room_status', 1, 'system', NOW(), '会议室状态字典'),\n('预订状态', 'booking_status', 1, 'system', NOW(), '会议室预订状态字典'),\n('设备类型', 'equipment_type', 1, 'system', NOW(), '会议室设备类型字典'),\n('日历类型', 'calendar_type', 1, 'system', NOW(), '日历类型字典'),\n('时区', 'timezone', 1, 'system', NOW(), '时区字典'),\n('外部日历类型', 'external_calendar_type', 1, 'system', NOW(), '外部日历类型字典'),\n('同步状态', 'sync_status', 1, 'system', NOW(), '同步状态字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 日程类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '会议', '1', 'schedule_type', '', 'primary', 'Y', 1, 'system', NOW(), '会议类型日程'),\n(2, '任务', '2', 'schedule_type', '', 'success', 'N', 1, 'system', NOW(), '任务类型日程'),\n(3, '约见', '3', 'schedule_type', '', 'info', 'N', 1, 'system', NOW(), '客户约见日程'),\n(4, '法庭', '4', 'schedule_type', '', 'warning', 'N', 1, 'system', NOW(), '法庭出庭日程'),\n(5, '事件', '5', 'schedule_type', '', 'dark', 'N', 1, 'system', NOW(), '一般事件日程'),\n(6, '培训', '6', 'schedule_type', '', 'secondary', 'N', 1, 'system', NOW(), '培训学习日程'),\n(7, '休假', '7', 'schedule_type', '', 'light', 'N', 1, 'system', NOW(), '休假类型日程');\n\n-- 日程优先级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '低', '1', 'schedule_priority', '', 'success', 'N', 1, 'system', NOW(), '低优先级'),\n(2, '中', '2', 'schedule_priority', '', 'primary', 'Y', 1, 'system', NOW(), '中等优先级'),\n(3, '高', '3', 'schedule_priority', '', 'warning', 'N', 1, 'system', NOW(), '高优先级'),\n(4, '紧急', '4', 'schedule_priority', '', 'danger', 'N', 1, 'system', NOW(), '紧急优先级');\n\n-- 日程状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'schedule_status', '', 'secondary', 'N', 1, 'system', NOW(), '草稿状态'),\n(2, '计划中', '2', 'schedule_status', '', 'primary', 'Y', 1, 'system', NOW(), '计划中状态'),\n(3, '进行中', '3', 'schedule_status', '', 'info', 'N', 1, 'system', NOW(), '进行中状态'),\n(4, '已完成', '4', 'schedule_status', '', 'success', 'N', 1, 'system', NOW(), '已完成状态'),\n(5, '已取消', '5', 'schedule_status', '', 'danger', 'N', 1, 'system', NOW(), '已取消状态');\n\n-- 日程可见性\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '公开', '1', 'schedule_visibility', '', 'success', 'Y', 1, 'system', NOW(), '所有人可见'),\n(2, '私密', '2', 'schedule_visibility', '', 'warning', 'N', 1, 'system', NOW(), '仅创建者可见'),\n(3, '仅参与者', '3', 'schedule_visibility', '', 'info', 'N', 1, 'system', NOW(), '仅参与者可见');\n\n-- 参与者状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待定', '1', 'participant_status', '', 'secondary', 'Y', 1, 'system', NOW(), '参与状态待定'),\n(2, '接受', '2', 'participant_status', '', 'success', 'N', 1, 'system', NOW(), '接受参与'),\n(3, '拒绝', '3', 'participant_status', '', 'danger', 'N', 1, 'system', NOW(), '拒绝参与'),\n(4, '暂定', '4', 'participant_status', '', 'warning', 'N', 1, 'system', NOW(), '暂定参与');\n\n-- 提醒类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '系统通知', '1', 'reminder_type', '', 'primary', 'Y', 1, 'system', NOW(), '系统内通知'),\n(2, '邮件提醒', '2', 'reminder_type', '', 'success', 'N', 1, 'system', NOW(), '邮件提醒'),\n(3, '短信提醒', '3', 'reminder_type', '', 'info', 'N', 1, 'system', NOW(), '短信提醒'),\n(4, '微信推送', '4', 'reminder_type', '', 'warning', 'N', 1, 'system', NOW(), '微信推送提醒'),\n(5, '桌面弹窗', '5', 'reminder_type', '', 'dark', 'N', 1, 'system', NOW(), '桌面弹窗提醒');\n\n-- 提醒状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待提醒', '1', 'reminder_status', '', 'primary', 'Y', 1, 'system', NOW(), '等待提醒'),\n(2, '已提醒', '2', 'reminder_status', '', 'success', 'N', 1, 'system', NOW(), '已经提醒'),\n(3, '提醒失败', '3', 'reminder_status', '', 'danger', 'N', 1, 'system', NOW(), '提醒失败'),\n(4, '已取消', '4', 'reminder_status', '', 'secondary', 'N', 1, 'system', NOW(), '已取消提醒');\n\n-- 重复类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '每日', 'DAILY', 'recurrence_type', '', 'primary', 'N', 1, 'system', NOW(), '每日重复'),\n(2, '每周', 'WEEKLY', 'recurrence_type', '', 'success', 'Y', 1, 'system', NOW(), '每周重复'),\n(3, '每月', 'MONTHLY', 'recurrence_type', '', 'info', 'N', 1, 'system', NOW(), '每月重复'),\n(4, '每年', 'YEARLY', 'recurrence_type', '', 'warning', 'N', 1, 'system', NOW(), '每年重复'),\n(5, '自定义', 'CUSTOM', 'recurrence_type', '', 'dark', 'N', 1, 'system', NOW(), '自定义重复规则');\n\n-- 重复结束类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '永不结束', 'NEVER', 'recurrence_end_type', '', 'primary', 'Y', 1, 'system', NOW(), '永远重复'),\n(2, '指定次数', 'COUNT', 'recurrence_end_type', '', 'success', 'N', 1, 'system', NOW(), '重复指定次数'),\n(3, '指定日期', 'DATE', 'recurrence_end_type', '', 'info', 'N', 1, 'system', NOW(), '重复到指定日期');\n\n-- 会议室状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '可用', '1', 'meeting_room_status', '', 'success', 'Y', 1, 'system', NOW(), '会议室可用'),\n(2, '维护中', '2', 'meeting_room_status', '', 'warning', 'N', 1, 'system', NOW(), '会议室维护中'),\n(3, '停用', '3', 'meeting_room_status', '', 'danger', 'N', 1, 'system', NOW(), '会议室停用');\n\n-- 预订状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待审批', '1', 'booking_status', '', 'primary', 'Y', 1, 'system', NOW(), '预订待审批'),\n(2, '已批准', '2', 'booking_status', '', 'success', 'N', 1, 'system', NOW(), '预订已批准'),\n(3, '已拒绝', '3', 'booking_status', '', 'danger', 'N', 1, 'system', NOW(), '预订已拒绝'),\n(4, '已取消', '4', 'booking_status', '', 'secondary', 'N', 1, 'system', NOW(), '预订已取消'),\n(5, '使用中', '5', 'booking_status', '', 'info', 'N', 1, 'system', NOW(), '正在使用'),\n(6, '已完成', '6', 'booking_status', '', 'dark', 'N', 1, 'system', NOW(), '使用完成');\n\n-- 设备类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '投影仪', '1', 'equipment_type', '', 'primary', 'N', 1, 'system', NOW(), '投影仪设备'),\n(2, '音响系统', '2', 'equipment_type', '', 'success', 'N', 1, 'system', NOW(), '音响系统'),\n(3, '视频会议', '3', 'equipment_type', '', 'info', 'N', 1, 'system', NOW(), '视频会议设备'),\n(4, '白板', '4', 'equipment_type', '', 'warning', 'N', 1, 'system', NOW(), '白板'),\n(5, '电子屏', '5', 'equipment_type', '', 'dark', 'N', 1, 'system', NOW(), '电子显示屏'),\n(6, '网络设备', '6', 'equipment_type', '', 'secondary', 'N', 1, 'system', NOW(), '网络设备');\n\n-- 日历类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '个人日历', '1', 'calendar_type', '', 'primary', 'Y', 1, 'system', NOW(), '个人日历'),\n(2, '团队日历', '2', 'calendar_type', '', 'success', 'N', 1, 'system', NOW(), '团队共享日历'),\n(3, '公共日历', '3', 'calendar_type', '', 'info', 'N', 1, 'system', NOW(), '公共日历'),\n(4, '项目日历', '4', 'calendar_type', '', 'warning', 'N', 1, 'system', NOW(), '项目专用日历'),\n(5, '假期日历', '5', 'calendar_type', '', 'dark', 'N', 1, 'system', NOW(), '假期日历');\n\n-- 外部日历类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, 'Google日历', 'GOOGLE', 'external_calendar_type', '', 'primary', 'N', 1, 'system', NOW(), 'Google Calendar'),\n(2, 'Outlook日历', 'OUTLOOK', 'external_calendar_type', '', 'success', 'N', 1, 'system', NOW(), 'Microsoft Outlook'),\n(3, 'Apple日历', 'APPLE', 'external_calendar_type', '', 'info', 'N', 1, 'system', NOW(), 'Apple iCalendar'),\n(4, '钉钉日历', 'DINGTALK', 'external_calendar_type', '', 'warning', 'N', 1, 'system', NOW(), '钉钉日历'),\n(5, '企业微信', 'WEWORK', 'external_calendar_type', '', 'dark', 'N', 1, 'system', NOW(), '企业微信日历');\n\n-- 同步状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '未同步', '1', 'sync_status', '', 'secondary', 'Y', 1, 'system', NOW(), '未同步状态'),\n(2, '同步中', '2', 'sync_status', '', 'primary', 'N', 1, 'system', NOW(), '正在同步'),\n(3, '同步成功', '3', 'sync_status', '', 'success', 'N', 1, 'system', NOW(), '同步成功'),\n(4, '同步失败', '4', 'sync_status', '', 'danger', 'N', 1, 'system', NOW(), '同步失败');\n\n-- ======================= 日历数据 =======================\n\n-- 初始化系统默认日历\nINSERT INTO schedule_calendar (tenant_id, calendar_name, calendar_code, calendar_type, owner_id, color, is_default, is_public, description, create_by, create_time, status) VALUES\n(0, '系统日历', 'SYS_CALENDAR', 3, 1, '#4285F4', 1, 1, '系统默认日历，用于展示公共日程', 'system', NOW(), 1),\n(0, '法庭日历', 'COURT_CALENDAR', 3, 1, '#DB4437', 0, 1, '法庭出庭相关日程', 'system', NOW(), 1),\n(0, '会议日历', 'MEETING_CALENDAR', 3, 1, '#0F9D58', 0, 1, '公司内部会议安排', 'system', NOW(), 1),\n(0, '客户日历', 'CLIENT_CALENDAR', 3, 1, '#F4B400', 0, 1, '客户会面预约', 'system', NOW(), 1),\n(0, '假期日历', 'HOLIDAY_CALENDAR', 5, 1, '#FF6900', 0, 1, '法定节假日和公司假期', 'system', NOW(), 1);\n\n-- ======================= 会议室数据 =======================\n\n-- 初始化会议室数据\nINSERT INTO schedule_meeting_room (tenant_id, room_name, room_code, room_location, capacity, floor, building, has_projector, has_video_conf, has_whiteboard, room_status, create_by, create_time, status) VALUES\n(0, '大会议室', 'MEETING_ROOM_001', '总部办公区A栋3楼', 20, '3', 'A栋', 1, 1, 1, 1, 'system', NOW(), 1),\n(0, '小会议室A', 'MEETING_ROOM_002', '总部办公区A栋3楼', 8, '3', 'A栋', 1, 0, 1, 1, 'system', NOW(), 1),\n(0, '小会议室B', 'MEETING_ROOM_003', '总部办公区A栋3楼', 8, '3', 'A栋', 1, 0, 1, 1, 'system', NOW(), 1),\n(0, '接待室', 'MEETING_ROOM_004', '总部办公区A栋1楼', 6, '1', 'A栋', 0, 0, 0, 1, 'system', NOW(), 1),\n(0, '视频会议室', 'MEETING_ROOM_005', '总部办公区B栋5楼', 12, '5', 'B栋', 1, 1, 1, 1, 'system', NOW(), 1),\n(0, '培训室', 'MEETING_ROOM_006', '总部办公区B栋4楼', 30, '4', 'B栋', 1, 1, 1, 1, 'system', NOW(), 1),\n(0, '讨论室1', 'MEETING_ROOM_007', '总部办公区A栋2楼', 4, '2', 'A栋', 0, 0, 1, 1, 'system', NOW(), 1),\n(0, '讨论室2', 'MEETING_ROOM_008', '总部办公区A栋2楼', 4, '2', 'A栋', 0, 0, 1, 1, 'system', NOW(), 1);\n\n-- ======================= 会议室设备数据 =======================\n\n-- 初始化会议室设备数据\nINSERT INTO schedule_room_equipment (tenant_id, room_id, equipment_name, equipment_type, equipment_model, purchase_date, equipment_status, create_by, create_time, status) VALUES\n(0, 1, '激光投影仪', 1, 'EPSON EB-2247U', '2023-01-15', 1, 'system', NOW(), 1),\n(0, 1, '音响系统', 2, 'BOSE SoundTouch 30', '2023-01-15', 1, 'system', NOW(), 1),\n(0, 1, '视频会议设备', 3, 'Cisco Webex Room Kit', '2023-01-15', 1, 'system', NOW(), 1),\n(0, 1, '电子白板', 4, 'SMART Board 6065', '2023-01-15', 1, 'system', NOW(), 1),\n(0, 2, '便携投影仪', 1, 'BENQ MS527', '2023-02-01', 1, 'system', NOW(), 1),\n(0, 2, '白板', 4, '标准白板 120*90cm', '2023-02-01', 1, 'system', NOW(), 1),\n(0, 5, '4K投影仪', 1, 'Sony VPL-VW295ES', '2023-01-20', 1, 'system', NOW(), 1),\n(0, 5, '专业音响', 2, 'JBL Professional', '2023-01-20', 1, 'system', NOW(), 1),\n(0, 5, '高清摄像头', 3, 'Logitech Rally', '2023-01-20', 1, 'system', NOW(), 1),\n(0, 6, '培训投影仪', 1, 'EPSON EB-W49', '2023-03-01', 1, 'system', NOW(), 1),\n(0, 6, '扩音设备', 2, '无线扩音器', '2023-03-01', 1, 'system', NOW(), 1);\n\n-- 初始化完成提示\nSELECT '日程管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建字典类型：', COUNT(*), '个') AS dict_type_count FROM sys_dict_type WHERE dict_type LIKE 'schedule_%' OR dict_type LIKE '%calendar%' OR dict_type LIKE '%reminder%' OR dict_type LIKE '%booking%' OR dict_type LIKE '%sync%';\nSELECT CONCAT('已创建字典数据：', COUNT(*), '个') AS dict_data_count FROM sys_dict_data WHERE dict_type LIKE 'schedule_%' OR dict_type LIKE '%calendar%' OR dict_type LIKE '%reminder%' OR dict_type LIKE '%booking%' OR dict_type LIKE '%sync%';\nSELECT CONCAT('已创建日历：', COUNT(*), '个') AS calendar_count FROM schedule_calendar WHERE tenant_id = 0;\nSELECT CONCAT('已创建会议室：', COUNT(*), '个') AS room_count FROM schedule_meeting_room WHERE tenant_id = 0;\nSELECT CONCAT('已创建设备：', COUNT(*), '个') AS equipment_count FROM schedule_room_equipment WHERE tenant_id = 0; ",
      "size": 13351
    },
    {
      "path": "law-firm-modules\\law-firm-personnel\\src\\main\\resources\\META-INF\\db\\migration\\V3000__personnel_module_description.sql",
      "filename": "V3000__personnel_module_description.sql",
      "version": 3000,
      "module": "law-firm-modules",
      "content": "-- 人员管理模块说明\n-- 版本: V3000\n-- 模块: 人员管理模块 (V3000-V3999)\n-- 创建时间: 2023-06-01\n-- 说明: 人员管理功能模块架构说明\n\n/*\n=============================================================================\n                            人员管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n人员管理模块负责律师事务所的人员信息管理，包括：\n- 人员基础信息管理\n- 律师专业信息管理\n- 员工工作信息管理\n- 客户关系管理\n- 联系人信息管理\n- 人员档案管理\n\n二、版本规划 (V3000-V3999)\n- V3000: 模块说明文档\n- V3001: 表结构定义\n- V3002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 人员基础信息\n   - per_person: 人员基本信息\n   - per_contact: 联系方式信息\n   - per_address: 地址信息\n\n2. 律师管理\n   - per_lawyer: 律师专业信息\n   - per_education_experience: 教育经历\n   - per_work_experience: 工作经历\n\n3. 员工管理\n   - per_employee: 员工信息\n   - per_contract: 合同信息\n   - per_employee_organization: 员工组织关系\n\n4. 客户管理\n   - per_client: 客户信息\n   - per_client_contact: 客户联系人\n   - per_client_relationship: 客户关系\n\n四、数据关系\n=============================================================================\n- per_person → per_contact (人员联系方式)\n- per_person → per_address (人员地址信息)\n- per_person → per_lawyer (律师专业信息)\n- per_person → per_employee (员工工作信息)\n- per_lawyer → per_education_experience (教育经历)\n- per_lawyer → per_work_experience (工作经历)\n- per_employee → per_contract (劳动合同)\n- per_employee → per_employee_organization (组织关系)\n\n五、业务特点\n=============================================================================\n1. 数据结构规范化\n   - 将原有庞大的per_employee表(56字段)拆分为9个逻辑表\n   - 实现数据结构清晰，便于维护和扩展\n\n2. 多角色支持\n   - 同一人员可同时具备多种身份(律师+员工)\n   - 灵活的身份转换和权限管理\n\n3. 完整档案管理\n   - 详细的教育和工作经历记录\n   - 完整的联系方式和地址管理\n\n六、权限设计\n=============================================================================\n人员管理功能权限控制：\n- 人员查看: PERSONNEL_VIEW\n- 人员管理: PERSONNEL_MANAGE\n- 律师管理: LAWYER_MANAGE\n- 员工管理: EMPLOYEE_MANAGE\n- 客户管理: CLIENT_MANAGE\n\n七、注意事项\n=============================================================================\n1. 人员信息涉及隐私，需严格权限控制\n2. 律师执业信息需要定期更新和验证\n3. 客户信息需要做好数据保护和备份\n4. 人员档案变更需要留存历史记录\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 人事管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '人员管理模块说明文档已加载' AS message; ",
      "size": 2314
    },
    {
      "path": "law-firm-modules\\law-firm-personnel\\src\\main\\resources\\META-INF\\db\\migration\\V3001__init_personnel_tables.sql",
      "filename": "V3001__init_personnel_tables.sql",
      "version": 3001,
      "module": "law-firm-modules",
      "content": "-- Personnel模块表结构初始化\n-- 版本: V3001\n-- 模块: personnel\n-- 创建时间: 2023-07-01\n-- 说明: 重新设计人事模块表结构，拆分超大表，统一规范\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 组织架构表 =======================\n\n-- org_department表（部门表）\nDROP TABLE IF EXISTS org_department;\nCREATE TABLE org_department (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '部门ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父部门ID',\n    code VARCHAR(50) NOT NULL COMMENT '部门编码',\n    name VARCHAR(100) NOT NULL COMMENT '部门名称',\n    full_name VARCHAR(255) COMMENT '部门全称',\n    level INT DEFAULT 1 COMMENT '层级深度',\n    path VARCHAR(500) COMMENT '部门路径(用/分隔)',\n    manager_id BIGINT COMMENT '部门负责人ID',\n    phone VARCHAR(20) COMMENT '部门电话',\n    email VARCHAR(100) COMMENT '部门邮箱',\n    address VARCHAR(255) COMMENT '办公地址',\n    function_desc TEXT COMMENT '部门职能描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_manager_id (manager_id),\n    INDEX idx_status (status),\n    INDEX idx_sort (sort)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='部门表';\n\n-- org_position表（职位表）\nDROP TABLE IF EXISTS org_position;\nCREATE TABLE org_position (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '职位ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    department_id BIGINT NOT NULL COMMENT '所属部门ID',\n    code VARCHAR(50) NOT NULL COMMENT '职位编码',\n    name VARCHAR(100) NOT NULL COMMENT '职位名称',\n    level INT COMMENT '职位等级(1-10)',\n    `rank` VARCHAR(20) COMMENT '职位层级(junior/middle/senior/expert)',\n    category VARCHAR(50) COMMENT '职位类别(律师/行政/管理/财务等)',\n    job_description TEXT COMMENT '职位描述',\n    requirements TEXT COMMENT '任职要求',\n    salary_range VARCHAR(100) COMMENT '薪资范围',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_category (category),\n    INDEX idx_level (level),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_position_department FOREIGN KEY (department_id) REFERENCES org_department(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='职位表';\n\n-- org_team表（团队表）\nDROP TABLE IF EXISTS org_team;\nCREATE TABLE org_team (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '团队ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    department_id BIGINT COMMENT '所属部门ID',\n    code VARCHAR(50) NOT NULL COMMENT '团队编码',\n    name VARCHAR(100) NOT NULL COMMENT '团队名称',\n    type TINYINT DEFAULT 1 COMMENT '团队类型(1-常设团队,2-项目团队,3-临时团队)',\n    leader_id BIGINT COMMENT '团队负责人ID',\n    member_count INT DEFAULT 0 COMMENT '团队人数',\n    description TEXT COMMENT '团队描述',\n    objectives TEXT COMMENT '团队目标',\n    start_date DATE COMMENT '成立日期',\n    end_date DATE COMMENT '解散日期',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-解散,1-活跃,2-暂停)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_type (type),\n    INDEX idx_leader_id (leader_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_team_department FOREIGN KEY (department_id) REFERENCES org_department(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='团队表';\n\n-- org_project_group表（项目组表）\nDROP TABLE IF EXISTS org_project_group;\nCREATE TABLE org_project_group (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '项目组ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    team_id BIGINT COMMENT '所属团队ID',\n    code VARCHAR(50) NOT NULL COMMENT '项目组编码',\n    name VARCHAR(100) NOT NULL COMMENT '项目组名称',\n    project_id BIGINT COMMENT '关联项目ID',\n    case_id BIGINT COMMENT '关联案件ID',\n    leader_id BIGINT COMMENT '负责人ID',\n    member_count INT DEFAULT 0 COMMENT '成员数量',\n    start_date DATE COMMENT '开始日期',\n    end_date DATE COMMENT '结束日期',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-筹备,1-进行,2-结束)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_team_id (team_id),\n    INDEX idx_project_id (project_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_leader_id (leader_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_project_group_team FOREIGN KEY (team_id) REFERENCES org_team(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='项目组表';\n\n-- ======================= Personnel模块表结构 =======================\n\n-- per_person表（人员基本信息表）\nDROP TABLE IF EXISTS per_person;\nCREATE TABLE per_person (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '人员ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    code VARCHAR(50) NOT NULL COMMENT '人员编号',\n    name VARCHAR(50) NOT NULL COMMENT '姓名',\n    english_name VARCHAR(100) COMMENT '英文名',\n    gender TINYINT DEFAULT 0 COMMENT '性别(0-未知,1-男,2-女)',\n    birth_date DATE COMMENT '出生日期',\n    id_type TINYINT DEFAULT 1 COMMENT '证件类型(1-身份证,2-护照,3-其他)',\n    id_number VARCHAR(50) COMMENT '证件号码',\n    nationality VARCHAR(50) DEFAULT '中国' COMMENT '国籍',\n    ethnicity VARCHAR(20) COMMENT '民族',\n    marital_status TINYINT COMMENT '婚姻状况(1-未婚,2-已婚,3-离异,4-丧偶)',\n    political_status VARCHAR(50) COMMENT '政治面貌',\n    hometown VARCHAR(100) COMMENT '籍贯',\n    avatar_url VARCHAR(255) COMMENT '头像URL',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    UNIQUE KEY uk_tenant_id_number (tenant_id, id_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_name (name),\n    INDEX idx_gender (gender),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='人员基本信息表';\n\n-- per_employee表（员工信息表）\nDROP TABLE IF EXISTS per_employee;\nCREATE TABLE per_employee (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '员工ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    person_id BIGINT NOT NULL COMMENT '关联人员ID',\n    work_number VARCHAR(50) NOT NULL COMMENT '工号',\n    user_id BIGINT COMMENT '关联用户ID',\n    employee_status TINYINT DEFAULT 1 COMMENT '员工状态(1-在职,2-离职,3-试用期,4-休假,5-停职)',\n    employee_type TINYINT DEFAULT 1 COMMENT '员工类型(1-律师,2-行政人员,3-实习生,4-顾问,99-其他)',\n    department_id BIGINT COMMENT '所属部门ID',\n    position_id BIGINT COMMENT '职位ID',\n    team_id BIGINT COMMENT '所属团队ID',\n    entry_date DATE COMMENT '入职日期',\n    regular_date DATE COMMENT '转正日期',\n    resign_date DATE COMMENT '离职日期',\n    work_email VARCHAR(100) COMMENT '工作邮箱',\n    work_phone VARCHAR(20) COMMENT '工作电话',\n    office_location VARCHAR(100) COMMENT '办公地点',\n    supervisor_id BIGINT COMMENT '直属上级ID',\n    work_years INT DEFAULT 0 COMMENT '工作年限',\n    education TINYINT COMMENT '学历(1-专科,2-本科,3-硕士,4-博士,5-其他)',\n    graduate_school VARCHAR(100) COMMENT '毕业院校',\n    major VARCHAR(100) COMMENT '专业',\n    graduate_year INT COMMENT '毕业年份',\n    contract_status TINYINT DEFAULT 0 COMMENT '合同状态(0-未签,1-已签,2-过期,3-终止)',\n    current_contract_id BIGINT COMMENT '当前合同ID',\n    is_partner TINYINT DEFAULT 0 COMMENT '是否合伙人(0-否,1-是)',\n    partner_date DATE COMMENT '成为合伙人日期',\n    equity_ratio DECIMAL(10,4) COMMENT '股权比例',\n    mentor_id BIGINT COMMENT '导师ID',\n    function_type TINYINT COMMENT '职能类型',\n    function_desc VARCHAR(200) COMMENT '职能描述',\n    job_duties TEXT COMMENT '工作职责',\n    service_scope VARCHAR(500) COMMENT '服务范围',\n    skill_certificates VARCHAR(500) COMMENT '技能证书',\n    resign_reason VARCHAR(500) COMMENT '离职原因',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_work_number (tenant_id, work_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_person_id (person_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_employee_status (employee_status),\n    INDEX idx_employee_type (employee_type),\n    INDEX idx_department_id (department_id),\n    INDEX idx_position_id (position_id),\n    INDEX idx_team_id (team_id),\n    INDEX idx_supervisor_id (supervisor_id),\n    INDEX idx_entry_date (entry_date),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_employee_person FOREIGN KEY (person_id) REFERENCES per_person(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='员工信息表';\n\n-- per_contact表（联系方式表）\nDROP TABLE IF EXISTS per_contact;\nCREATE TABLE per_contact (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '联系方式ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    person_id BIGINT NOT NULL COMMENT '人员ID',\n    contact_type TINYINT NOT NULL COMMENT '联系方式类型(1-手机,2-固话,3-邮箱,4-微信,5-QQ)',\n    contact_value VARCHAR(100) NOT NULL COMMENT '联系方式值',\n    is_primary TINYINT DEFAULT 0 COMMENT '是否主要联系方式(0-否,1-是)',\n    is_work TINYINT DEFAULT 0 COMMENT '是否工作联系方式(0-否,1-是)',\n    description VARCHAR(100) COMMENT '联系方式描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_person_id (person_id),\n    INDEX idx_contact_type (contact_type),\n    INDEX idx_contact_value (contact_value),\n    INDEX idx_is_primary (is_primary),\n    \n    CONSTRAINT fk_contact_person FOREIGN KEY (person_id) REFERENCES per_person(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='联系方式表';\n\n-- per_address表（地址信息表）\nDROP TABLE IF EXISTS per_address;\nCREATE TABLE per_address (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '地址ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    person_id BIGINT NOT NULL COMMENT '人员ID',\n    address_type TINYINT NOT NULL COMMENT '地址类型(1-现居地址,2-户籍地址,3-紧急联系人地址)',\n    province VARCHAR(50) COMMENT '省份',\n    city VARCHAR(50) COMMENT '城市',\n    district VARCHAR(50) COMMENT '区县',\n    street VARCHAR(100) COMMENT '街道',\n    detail_address VARCHAR(255) COMMENT '详细地址',\n    postal_code VARCHAR(20) COMMENT '邮政编码',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认地址(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_person_id (person_id),\n    INDEX idx_address_type (address_type),\n    INDEX idx_province_city (province, city),\n    \n    CONSTRAINT fk_address_person FOREIGN KEY (person_id) REFERENCES per_person(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='地址信息表';\n\n-- ======================= 专业信息表 =======================\n\n-- per_lawyer表（律师专业信息表）\nDROP TABLE IF EXISTS per_lawyer;\nCREATE TABLE per_lawyer (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '律师信息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    employee_id BIGINT NOT NULL COMMENT '员工ID',\n    license_number VARCHAR(50) UNIQUE COMMENT '律师执业证号',\n    license_issue_date DATE COMMENT '执业证颁发日期',\n    license_expire_date DATE COMMENT '执业证过期日期',\n    issuing_authority VARCHAR(100) COMMENT '颁发机构',\n    practice_years INT COMMENT '执业年限',\n    lawyer_level TINYINT COMMENT '律师等级(1-初级,2-中级,3-高级,4-资深)',\n    practice_areas TEXT COMMENT '执业领域(JSON格式)',\n    expertise TEXT COMMENT '专长领域',\n    language_skills VARCHAR(255) COMMENT '语言技能',\n    professional_certificates TEXT COMMENT '专业证书(JSON格式)',\n    bar_association VARCHAR(100) COMMENT '律师协会',\n    is_partner TINYINT DEFAULT 0 COMMENT '是否合伙人(0-否,1-是)',\n    partner_date DATE COMMENT '成为合伙人日期',\n    equity_ratio DECIMAL(10,4) COMMENT '股权比例',\n    mentor_id BIGINT COMMENT '导师ID',\n    profile TEXT COMMENT '律师简介',\n    achievements TEXT COMMENT '律师成就',\n    case_win_rate DECIMAL(5,2) COMMENT '胜诉率',\n    case_count INT DEFAULT 0 COMMENT '案件数量',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-停职,1-正常执业,2-暂停执业)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_employee_id (employee_id),\n    INDEX idx_license_number (license_number),\n    INDEX idx_lawyer_level (lawyer_level),\n    INDEX idx_is_partner (is_partner),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_lawyer_employee FOREIGN KEY (employee_id) REFERENCES per_employee(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='律师专业信息表';\n\n-- per_education表（教育经历表）\nDROP TABLE IF EXISTS per_education_experience;\nCREATE TABLE per_education_experience (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '教育经历ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    person_id BIGINT NOT NULL COMMENT '人员ID',\n    education_level TINYINT COMMENT '学历层次(1-专科,2-本科,3-硕士,4-博士,5-博士后)',\n    degree_type TINYINT COMMENT '学位类型(1-学士,2-硕士,3-博士)',\n    school_name VARCHAR(100) COMMENT '学校名称',\n    school_type TINYINT COMMENT '学校类型(1-985,2-211,3-一本,4-二本,5-专科,6-海外)',\n    major VARCHAR(100) COMMENT '专业',\n    specialty VARCHAR(100) COMMENT '专业方向',\n    admission_date DATE COMMENT '入学时间',\n    graduation_date DATE COMMENT '毕业时间',\n    is_full_time TINYINT DEFAULT 1 COMMENT '是否全日制(0-否,1-是)',\n    graduation_status TINYINT DEFAULT 1 COMMENT '毕业状态(1-正常毕业,2-肄业,3-结业)',\n    gpa DECIMAL(3,2) COMMENT '学分绩点',\n    ranking INT COMMENT '专业排名',\n    thesis_title VARCHAR(255) COMMENT '论文题目',\n    advisor VARCHAR(50) COMMENT '导师姓名',\n    honors TEXT COMMENT '荣誉奖项(JSON格式)',\n    is_highest TINYINT DEFAULT 0 COMMENT '是否最高学历(0-否,1-是)',\n    certificate_number VARCHAR(100) COMMENT '学历证书编号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_person_id (person_id),\n    INDEX idx_education_level (education_level),\n    INDEX idx_school_name (school_name),\n    INDEX idx_graduation_date (graduation_date),\n    INDEX idx_is_highest (is_highest),\n    \n    CONSTRAINT fk_education_person FOREIGN KEY (person_id) REFERENCES per_person(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='教育经历表';\n\n-- per_work_experience表（工作经历表）\nDROP TABLE IF EXISTS per_work_experience;\nCREATE TABLE per_work_experience (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '工作经历ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    person_id BIGINT NOT NULL COMMENT '人员ID',\n    company_name VARCHAR(100) NOT NULL COMMENT '公司名称',\n    company_type TINYINT COMMENT '公司类型(1-律所,2-企业,3-政府,4-事业单位,5-其他)',\n    industry VARCHAR(50) COMMENT '行业',\n    position_name VARCHAR(100) COMMENT '职位名称',\n    position_level TINYINT COMMENT '职位级别(1-基层,2-中层,3-高层)',\n    department VARCHAR(100) COMMENT '部门',\n    start_date DATE COMMENT '开始时间',\n    end_date DATE COMMENT '结束时间',\n    is_current TINYINT DEFAULT 0 COMMENT '是否当前工作(0-否,1-是)',\n    work_description TEXT COMMENT '工作描述',\n    achievements TEXT COMMENT '工作成就',\n    leaving_reason VARCHAR(255) COMMENT '离职原因',\n    supervisor_name VARCHAR(50) COMMENT '直属上级',\n    supervisor_contact VARCHAR(100) COMMENT '上级联系方式',\n    salary_range VARCHAR(50) COMMENT '薪资范围',\n    reference_available TINYINT DEFAULT 1 COMMENT '是否可作为推荐人(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_person_id (person_id),\n    INDEX idx_company_name (company_name),\n    INDEX idx_position_name (position_name),\n    INDEX idx_start_date (start_date),\n    INDEX idx_is_current (is_current),\n    \n    CONSTRAINT fk_work_experience_person FOREIGN KEY (person_id) REFERENCES per_person(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='工作经历表';\n\n-- per_contract表（人事合同表）\nDROP TABLE IF EXISTS per_contract;\nCREATE TABLE per_contract (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '合同ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    employee_id BIGINT NOT NULL COMMENT '员工ID',\n    contract_number VARCHAR(50) NOT NULL COMMENT '合同编号',\n    contract_type TINYINT DEFAULT 1 COMMENT '合同类型(1-劳动合同,2-实习协议,3-顾问协议,4-合伙协议)',\n    contract_name VARCHAR(100) COMMENT '合同名称',\n    start_date DATE COMMENT '合同开始日期',\n    end_date DATE COMMENT '合同结束日期',\n    probation_months INT DEFAULT 0 COMMENT '试用期(月)',\n    basic_salary DECIMAL(12,2) COMMENT '基本工资',\n    performance_salary DECIMAL(12,2) COMMENT '绩效工资',\n    allowance DECIMAL(12,2) COMMENT '津贴补助',\n    benefits TEXT COMMENT '福利待遇(JSON格式)',\n    work_hours VARCHAR(50) COMMENT '工作时间',\n    work_location VARCHAR(100) COMMENT '工作地点',\n    contract_status TINYINT DEFAULT 1 COMMENT '合同状态(1-生效,2-到期,3-解除,4-中止)',\n    signing_date DATE COMMENT '签署日期',\n    file_path VARCHAR(255) COMMENT '合同文件路径',\n    is_current TINYINT DEFAULT 1 COMMENT '是否当前合同(0-否,1-是)',\n    termination_reason VARCHAR(255) COMMENT '终止原因',\n    termination_date DATE COMMENT '终止日期',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_contract_number (tenant_id, contract_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_employee_id (employee_id),\n    INDEX idx_contract_type (contract_type),\n    INDEX idx_contract_status (contract_status),\n    INDEX idx_start_date (start_date),\n    INDEX idx_end_date (end_date),\n    INDEX idx_is_current (is_current),\n    \n    CONSTRAINT fk_contract_employee FOREIGN KEY (employee_id) REFERENCES per_employee(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='人事合同表';\n\n-- per_employee_organization表（员工组织关系表）\nDROP TABLE IF EXISTS per_employee_organization;\nCREATE TABLE per_employee_organization (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关系ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    employee_id BIGINT NOT NULL COMMENT '员工ID',\n    organization_type TINYINT NOT NULL COMMENT '组织类型(1-部门,2-团队,3-项目组)',\n    organization_id BIGINT NOT NULL COMMENT '组织ID',\n    role_type TINYINT DEFAULT 1 COMMENT '角色类型(1-成员,2-负责人,3-副负责人)',\n    start_date DATE COMMENT '开始时间',\n    end_date DATE COMMENT '结束时间',\n    is_current TINYINT DEFAULT 1 COMMENT '是否当前关系(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_employee_id (employee_id),\n    INDEX idx_organization_type (organization_type),\n    INDEX idx_organization_id (organization_id),\n    INDEX idx_role_type (role_type),\n    INDEX idx_is_current (is_current),\n    \n    CONSTRAINT fk_emp_org_employee FOREIGN KEY (employee_id) REFERENCES per_employee(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='员工组织关系表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1;\n",
      "size": 22944
    },
    {
      "path": "law-firm-modules\\law-firm-personnel\\src\\main\\resources\\META-INF\\db\\migration\\V3002__init_personnel_data.sql",
      "filename": "V3002__init_personnel_data.sql",
      "version": 3002,
      "module": "law-firm-modules",
      "content": "-- Personnel模块初始数据\n-- 版本: V3002\n-- 模块: personnel\n-- 创建时间: 2023-07-01\n-- 说明: 初始化人事模块相关基础数据\n\n-- 人事模块相关字典类型\nINSERT INTO sys_dict_type (tenant_id, tenant_code, dict_name, dict_type, status, is_system, create_time, create_by)\nVALUES\n(NULL, NULL, '人员类型', 'per_person_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '员工类型', 'per_employee_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '员工状态', 'per_employee_status', 0, 1, NOW(), 'system'),\n(NULL, NULL, '律师职级', 'per_lawyer_level', 0, 1, NOW(), 'system'),\n(NULL, NULL, '合同类型', 'per_contract_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '合同状态', 'per_contract_status', 0, 1, NOW(), 'system'),\n(NULL, NULL, '职能类型', 'per_function_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '学历', 'per_education', 0, 1, NOW(), 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 人员类型字典数据\nINSERT INTO sys_dict_data (tenant_id, tenant_code, dict_type, dict_label, dict_value, dict_sort, status, is_default, create_time, create_by)\nVALUES\n-- 人员类型\n(NULL, NULL, 'per_person_type', '律师', 'LAWYER', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_person_type', '行政人员', 'STAFF', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_person_type', '客户', 'CLIENT', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_person_type', '合作伙伴', 'PARTNER', 4, 0, 0, NOW(), 'system'),\n\n-- 员工类型\n(NULL, NULL, 'per_employee_type', '律师', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_employee_type', '行政人员', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_type', '实习生', '3', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_type', '顾问', '4', 4, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_type', '其他', '99', 5, 0, 0, NOW(), 'system'),\n\n-- 员工状态\n(NULL, NULL, 'per_employee_status', '在职', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_employee_status', '离职', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_status', '试用期', '3', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_status', '休假', '4', 4, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_employee_status', '停职', '5', 5, 0, 0, NOW(), 'system'),\n\n-- 律师职级\n(NULL, NULL, 'per_lawyer_level', '实习律师', '1', 1, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_lawyer_level', '初级律师', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_lawyer_level', '中级律师', '3', 3, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_lawyer_level', '高级律师', '4', 4, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_lawyer_level', '资深律师', '5', 5, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_lawyer_level', '合伙人', '6', 6, 0, 0, NOW(), 'system'),\n\n-- 合同类型\n(NULL, NULL, 'per_contract_type', '劳动合同', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_contract_type', '服务合同', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_contract_type', '保密协议', '3', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_contract_type', '竞业限制协议', '4', 4, 0, 0, NOW(), 'system'),\n\n-- 合同状态\n(NULL, NULL, 'per_contract_status', '未签', '0', 1, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_contract_status', '已签', '1', 2, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_contract_status', '过期', '2', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_contract_status', '终止', '3', 4, 0, 0, NOW(), 'system'),\n\n-- 职能类型\n(NULL, NULL, 'per_function_type', '行政', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_function_type', '财务', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_function_type', '人事', '3', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_function_type', '市场', '4', 4, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_function_type', 'IT', '5', 5, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_function_type', '前台', '6', 6, 0, 0, NOW(), 'system'),\n\n-- 学历\n(NULL, NULL, 'per_education', '高中', '1', 1, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_education', '专科', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_education', '本科', '3', 3, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'per_education', '硕士', '4', 4, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'per_education', '博士', '5', 5, 0, 0, NOW(), 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 添加人事管理相关菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, icon, component, sort, status, create_time, create_by)\nSELECT NULL, NULL, '人事管理', 'personnel', 0, 0, '/personnel', 'team', NULL, 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'personnel');\n\n-- 员工管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '员工管理', 'personnel:employee', 0, (SELECT id FROM auth_permission WHERE code = 'personnel'), 'employee', 'personnel/employee/index', 'user', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'personnel:employee');\n\n-- 律师管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '律师管理', 'personnel:lawyer', 0, (SELECT id FROM auth_permission WHERE code = 'personnel'), 'lawyer', 'personnel/lawyer/index', 'user-solid', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'personnel:lawyer');\n\n-- 合同管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '合同管理', 'personnel:contract', 0, (SELECT id FROM auth_permission WHERE code = 'personnel'), 'contract', 'personnel/contract/index', 'document', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'personnel:contract');\n\n-- 为管理员角色分配权限\nINSERT INTO auth_role_permission (tenant_id, tenant_code, role_id, permission_id, status, create_time, create_by)\nSELECT NULL, NULL, 1, permission.id, 0, NOW(), 'system'\nFROM auth_permission permission\nWHERE permission.code LIKE 'personnel%'\n  AND NOT EXISTS (\n    SELECT 1 FROM auth_role_permission \n    WHERE role_id = 1 AND permission_id = permission.id\n  );\n\n-- organization模块相关字典类型\nINSERT INTO sys_dict_type (tenant_id, tenant_code, dict_name, dict_type, status, is_system, create_time, create_by)\nVALUES\n(NULL, NULL, '部门类型', 'org_department_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '团队类型', 'org_team_type', 0, 1, NOW(), 'system'),\n(NULL, NULL, '职位类型', 'org_position_type', 0, 1, NOW(), 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 部门类型字典数据\nINSERT INTO sys_dict_data (tenant_id, tenant_code, dict_type, dict_label, dict_value, dict_sort, status, is_default, create_time, create_by)\nVALUES\n-- 部门类型\n(NULL, NULL, 'org_department_type', '业务部门', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'org_department_type', '职能部门', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'org_department_type', '管理部门', '3', 3, 0, 0, NOW(), 'system'),\n\n-- 团队类型\n(NULL, NULL, 'org_team_type', '业务团队', '1', 1, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'org_team_type', '项目团队', '2', 2, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'org_team_type', '特殊团队', '3', 3, 0, 0, NOW(), 'system'),\n\n-- 职位类型\n(NULL, NULL, 'org_position_type', '管理岗', '1', 1, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'org_position_type', '业务岗', '2', 2, 0, 1, NOW(), 'system'),\n(NULL, NULL, 'org_position_type', '职能岗', '3', 3, 0, 0, NOW(), 'system'),\n(NULL, NULL, 'org_position_type', '实习岗', '4', 4, 0, 0, NOW(), 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 初始化组织架构菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, icon, component, sort, status, create_time, create_by)\nSELECT NULL, NULL, '组织架构', 'organization', 0, 0, '/organization', 'office-building', NULL, 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'organization');\n\n-- 部门管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '部门管理', 'organization:department', 0, (SELECT id FROM auth_permission WHERE code = 'organization'), 'department', 'personnel/organization/department/index', 'department', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'organization:department');\n\n-- 团队管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '团队管理', 'organization:team', 0, (SELECT id FROM auth_permission WHERE code = 'organization'), 'team', 'personnel/organization/team/index', 'user-group', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'organization:team');\n\n-- 职位管理菜单\nINSERT INTO auth_permission (tenant_id, tenant_code, name, code, type, parent_id, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, NULL, '职位管理', 'organization:position', 0, (SELECT id FROM auth_permission WHERE code = 'organization'), 'position', 'personnel/organization/position/index', 'position', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'organization:position');\n\n-- 为管理员角色分配组织架构权限\nINSERT INTO auth_role_permission (tenant_id, tenant_code, role_id, permission_id, status, create_time, create_by)\nSELECT NULL, NULL, 1, permission.id, 0, NOW(), 'system'\nFROM auth_permission permission\nWHERE permission.code LIKE 'organization%'\n  AND NOT EXISTS (\n    SELECT 1 FROM auth_role_permission \n    WHERE role_id = 1 AND permission_id = permission.id\n  );\n",
      "size": 9368
    },
    {
      "path": "law-firm-modules\\law-firm-knowledge\\src\\main\\resources\\META-INF\\db\\migration\\V11000__knowledge_module_description.sql",
      "filename": "V11000__knowledge_module_description.sql",
      "version": 11000,
      "module": "law-firm-modules",
      "content": "-- 知识管理模块说明\n-- 版本: V11000\n-- 模块: 知识管理模块 (V11000-V11999)\n-- 创建时间: 2023-06-01\n-- 说明: 知识管理功能模块架构说明\n\n/*\n=============================================================================\n                            知识管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n知识管理模块负责律师事务所的知识库建设和管理，包括：\n- 知识文档管理\n- 知识分类管理\n- 知识标签管理\n- 知识搜索引擎\n- 知识分享协作\n- 知识评论互动\n- 知识收藏管理\n- 知识统计分析\n- 知识专家系统\n\n二、版本规划 (V11000-V11999)\n- V11000: 模块说明文档\n- V11001: 表结构定义\n- V11002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 知识基础管理\n   - knowledge_document: 知识文档\n   - knowledge_content: 知识内容\n   - knowledge_attachment: 知识附件\n\n2. 分类标签管理\n   - knowledge_category: 知识分类\n   - knowledge_tag: 知识标签\n   - knowledge_tag_relation: 标签关联\n\n3. 互动管理\n   - knowledge_comment: 知识评论\n   - knowledge_favorite: 知识收藏\n   - knowledge_like: 知识点赞\n\n4. 专业管理\n   - knowledge_expert: 知识专家\n   - knowledge_field: 专业领域\n   - knowledge_qa: 问答管理\n\n5. 统计分析\n   - knowledge_view_log: 浏览记录\n   - knowledge_download_log: 下载记录\n   - knowledge_statistics: 知识统计\n\n四、数据关系\n=============================================================================\n- knowledge_document → knowledge_content (知识内容)\n- knowledge_document → knowledge_attachment (知识附件)\n- knowledge_document → knowledge_tag_relation → knowledge_tag (知识标签)\n- knowledge_document → knowledge_comment (知识评论)\n- knowledge_document → knowledge_favorite (知识收藏)\n- knowledge_document → knowledge_like (知识点赞)\n- knowledge_document → knowledge_view_log (浏览记录)\n- knowledge_category → knowledge_document (知识分类)\n- knowledge_expert → knowledge_field (专业领域)\n\n五、业务特点\n=============================================================================\n1. 知识分类体系\n   - 多级分类结构\n   - 灵活分类配置\n   - 分类权限控制\n   - 分类统计分析\n\n2. 标签体系\n   - 多维度标签\n   - 智能标签推荐\n   - 标签关联分析\n   - 热门标签统计\n\n3. 内容管理\n   - 富文本编辑\n   - 附件支持\n   - 版本控制\n   - 内容审核\n\n4. 搜索功能\n   - 全文检索\n   - 分类搜索\n   - 标签搜索\n   - 智能推荐\n\n5. 互动功能\n   - 评论讨论\n   - 收藏分享\n   - 点赞投票\n   - 专家答疑\n\n六、权限设计\n=============================================================================\n知识管理功能权限控制：\n- 知识查看: KNOWLEDGE_VIEW\n- 知识管理: KNOWLEDGE_MANAGE\n- 知识创建: KNOWLEDGE_CREATE\n- 知识编辑: KNOWLEDGE_EDIT\n- 知识删除: KNOWLEDGE_DELETE\n- 知识审核: KNOWLEDGE_REVIEW\n- 分类管理: CATEGORY_MANAGE\n- 标签管理: TAG_MANAGE\n- 评论管理: COMMENT_MANAGE\n- 专家管理: EXPERT_MANAGE\n- 统计查看: STATISTICS_VIEW\n- 系统配置: KNOWLEDGE_CONFIG\n\n七、注意事项\n=============================================================================\n1. 知识内容需要版本控制和备份\n2. 支持多种格式的文档上传和预览\n3. 需要建立知识评价和质量控制机制\n4. 建立知识更新和维护流程\n5. 支持知识的导入导出功能\n6. 需要完善的搜索和推荐算法\n7. 建立知识专家认证机制\n\n八、知识编号规则\n=============================================================================\n知识编号格式：KB-分类-YYYY-流水号\n- KB: 知识库(Knowledge Base)前缀\n- 分类: LAW-法律法规, CASE-案例分析, TEMP-合同范本, DOC-法律文书, \n       RES-法律研究, BIZ-业务知识, SYS-管理制度\n- YYYY: 年份\n- 流水号: 4位数字，从0001开始\n\n示例：KB-LAW-2023-0001（2023年第1个法律法规知识）\n\n九、分类编码规则\n=============================================================================\n分类编码采用层级结构：\n- 一级分类: LAW_REGULATION, CASE_ANALYSIS, CONTRACT_TEMPLATE等\n- 二级分类: CIVIL_LAW, CRIMINAL_LAW, ADMINISTRATIVE_LAW等\n- 三级分类: CONTRACT_LAW_BASIC, CONTRACT_LAW_PRACTICE等\n\n路径格式：/一级分类/二级分类/三级分类\n\n十、标签体系\n=============================================================================\n1. 法律领域标签：\n   - 民法典、公司法、合同法、证券法、劳动法等\n\n2. 业务类型标签：\n   - 诉讼业务、非诉业务、顾问业务、专项服务等\n\n3. 重要程度标签：\n   - 核心知识、重要知识、一般知识、参考知识\n\n4. 适用范围标签：\n   - 全所适用、部门适用、专业适用、个人适用\n\n十一、内容管理规范\n=============================================================================\n1. 内容质量标准：\n   - 准确性：内容必须准确无误\n   - 时效性：及时更新法律变化\n   - 完整性：内容结构完整\n   - 实用性：具有实际指导意义\n\n2. 格式规范：\n   - 标题规范：清晰简洁\n   - 结构规范：层次分明\n   - 引用规范：标注来源\n   - 附件规范：格式统一\n\n3. 审核流程：\n   - 专业审核：业务准确性\n   - 技术审核：格式规范性\n   - 最终审核：发布适宜性\n\n十二、知识专家体系\n=============================================================================\n1. 专家认证：\n   - 专业资质认证\n   - 经验能力评估\n   - 贡献度评价\n   - 定期复审机制\n\n2. 专家职责：\n   - 知识审核把关\n   - 专业问题解答\n   - 知识体系建设\n   - 培训指导工作\n\n3. 激励机制：\n   - 贡献积分奖励\n   - 专家荣誉展示\n   - 职业发展支持\n   - 物质激励措施\n\n十三、搜索引擎优化\n=============================================================================\n1. 索引策略：\n   - 全文索引：标题、内容、摘要\n   - 分类索引：按分类快速检索\n   - 标签索引：多标签组合搜索\n   - 时间索引：按时间范围搜索\n\n2. 排序算法：\n   - 相关度排序\n   - 权威度排序\n   - 时效性排序\n   - 热度排序\n\n3. 智能推荐：\n   - 基于用户行为推荐\n   - 基于内容相似度推荐\n   - 基于协同过滤推荐\n   - 基于专家推荐\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 知识管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '知识管理模块说明文档已加载' AS message; ",
      "size": 4541
    },
    {
      "path": "law-firm-modules\\law-firm-knowledge\\src\\main\\resources\\META-INF\\db\\migration\\V11001__init_knowledge_tables.sql",
      "filename": "V11001__init_knowledge_tables.sql",
      "version": 11001,
      "module": "law-firm-modules",
      "content": "-- 知识管理模块表结构\n-- 版本: V11001\n-- 模块: 知识管理模块 (V11000-V11999)\n-- 创建时间: 2023-06-01\n-- 说明: 知识管理功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 知识基础管理表 =======================\n\n-- knowledge_document表（知识文档表）\nDROP TABLE IF EXISTS knowledge_document;\nCREATE TABLE knowledge_document (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '知识ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_number VARCHAR(50) NOT NULL COMMENT '知识编号',\n    title VARCHAR(200) NOT NULL COMMENT '知识标题',\n    subtitle VARCHAR(200) COMMENT '知识副标题',\n    summary VARCHAR(1000) COMMENT '知识摘要',\n    knowledge_type TINYINT DEFAULT 1 COMMENT '知识类型(1-法律法规,2-案例分析,3-合同范本,4-法律文书,5-法律研究,6-业务知识,7-管理制度)',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-文本,2-富文本,3-Markdown,4-PDF,5-Word,6-PPT,7-视频,8-音频)',\n    category_id BIGINT COMMENT '分类ID',\n    category_path VARCHAR(500) COMMENT '分类路径',\n    author_id BIGINT COMMENT '作者ID',\n    author_name VARCHAR(50) COMMENT '作者姓名',\n    author_department VARCHAR(100) COMMENT '作者部门',\n    reviewer_id BIGINT COMMENT '审核人ID',\n    reviewer_name VARCHAR(50) COMMENT '审核人姓名',\n    review_time DATETIME COMMENT '审核时间',\n    publisher_id BIGINT COMMENT '发布人ID',\n    publisher_name VARCHAR(50) COMMENT '发布人姓名',\n    publish_time DATETIME COMMENT '发布时间',\n    keywords VARCHAR(500) COMMENT '关键词(逗号分隔)',\n    difficulty_level TINYINT DEFAULT 1 COMMENT '难度等级(1-入门,2-初级,3-中级,4-高级,5-专家)',\n    importance_level TINYINT DEFAULT 1 COMMENT '重要程度(1-一般,2-重要,3-核心,4-关键,5-战略)',\n    quality_score DECIMAL(3,1) DEFAULT 0.0 COMMENT '质量评分(0.0-10.0)',\n    document_status TINYINT DEFAULT 1 COMMENT '文档状态(1-草稿,2-待审核,3-已发布,4-已归档,5-已下架)',\n    visibility TINYINT DEFAULT 1 COMMENT '可见性(1-公开,2-部门,3-岗位,4-私有)',\n    is_featured TINYINT DEFAULT 0 COMMENT '是否精选(0-否,1-是)',\n    is_top TINYINT DEFAULT 0 COMMENT '是否置顶(0-否,1-是)',\n    view_count INT DEFAULT 0 COMMENT '浏览次数',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    like_count INT DEFAULT 0 COMMENT '点赞次数',\n    favorite_count INT DEFAULT 0 COMMENT '收藏次数',\n    comment_count INT DEFAULT 0 COMMENT '评论次数',\n    share_count INT DEFAULT 0 COMMENT '分享次数',\n    last_view_time DATETIME COMMENT '最后浏览时间',\n    effective_date DATE COMMENT '生效日期',\n    expire_date DATE COMMENT '失效日期',\n    source_url VARCHAR(500) COMMENT '来源链接',\n    source_type TINYINT DEFAULT 1 COMMENT '来源类型(1-原创,2-整理,3-转载,4-翻译)',\n    copyright_info VARCHAR(200) COMMENT '版权信息',\n    attachment_count INT DEFAULT 0 COMMENT '附件数量',\n    version_number VARCHAR(20) DEFAULT '1.0' COMMENT '版本号',\n    tags JSON COMMENT '标签信息(JSON格式)',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_knowledge_number (tenant_id, knowledge_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_title (title),\n    INDEX idx_knowledge_type (knowledge_type),\n    INDEX idx_category_id (category_id),\n    INDEX idx_author_id (author_id),\n    INDEX idx_document_status (document_status),\n    INDEX idx_visibility (visibility),\n    INDEX idx_publish_time (publish_time),\n    INDEX idx_effective_date (effective_date),\n    INDEX idx_expire_date (expire_date),\n    INDEX idx_is_featured (is_featured),\n    INDEX idx_is_top (is_top),\n    INDEX idx_view_count (view_count),\n    INDEX idx_like_count (like_count),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识文档表';\n\n-- knowledge_content表（知识内容表）\nDROP TABLE IF EXISTS knowledge_content;\nCREATE TABLE knowledge_content (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '内容ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-主要内容,2-HTML内容,3-纯文本,4-原始内容)',\n    content LONGTEXT COMMENT '知识内容',\n    content_html LONGTEXT COMMENT 'HTML格式内容',\n    content_text LONGTEXT COMMENT '纯文本内容(用于搜索)',\n    content_markdown LONGTEXT COMMENT 'Markdown格式内容',\n    content_size BIGINT COMMENT '内容大小(字节)',\n    word_count INT DEFAULT 0 COMMENT '字数统计',\n    reading_time INT DEFAULT 0 COMMENT '预估阅读时间(分钟)',\n    is_extracted TINYINT DEFAULT 0 COMMENT '是否已提取文本(0-否,1-是)',\n    extract_time DATETIME COMMENT '提取时间',\n    content_encoding VARCHAR(20) DEFAULT 'UTF-8' COMMENT '内容编码',\n    content_hash VARCHAR(64) COMMENT '内容哈希值',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_knowledge_content_type (knowledge_id, content_type),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_content_type (content_type),\n    INDEX idx_is_extracted (is_extracted),\n    INDEX idx_content_hash (content_hash),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_content_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识内容表';\n\n-- knowledge_attachment表（知识附件表）\nDROP TABLE IF EXISTS knowledge_attachment;\nCREATE TABLE knowledge_attachment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '附件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    file_name VARCHAR(200) NOT NULL COMMENT '文件名称',\n    original_name VARCHAR(200) COMMENT '原始文件名',\n    file_path VARCHAR(500) NOT NULL COMMENT '文件路径',\n    file_url VARCHAR(500) COMMENT '文件访问URL',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_extension VARCHAR(20) COMMENT '文件扩展名',\n    mime_type VARCHAR(100) COMMENT 'MIME类型',\n    file_md5 VARCHAR(32) COMMENT '文件MD5值',\n    storage_type TINYINT DEFAULT 1 COMMENT '存储类型(1-本地,2-OSS,3-CDN)',\n    storage_bucket VARCHAR(100) COMMENT '存储桶',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    is_preview TINYINT DEFAULT 0 COMMENT '是否可预览(0-否,1-是)',\n    preview_url VARCHAR(500) COMMENT '预览地址',\n    thumbnail_url VARCHAR(500) COMMENT '缩略图地址',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    uploader_id BIGINT COMMENT '上传人ID',\n    uploader_name VARCHAR(50) COMMENT '上传人姓名',\n    upload_time DATETIME COMMENT '上传时间',\n    description VARCHAR(500) COMMENT '附件描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_file_type (file_type),\n    INDEX idx_file_md5 (file_md5),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_upload_time (upload_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_attachment_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识附件表';\n\n-- ======================= 分类标签管理表 =======================\n\n-- knowledge_category表（知识分类表）\nDROP TABLE IF EXISTS knowledge_category;\nCREATE TABLE knowledge_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(100) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    parent_id BIGINT DEFAULT 0 COMMENT '父分类ID',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    category_path VARCHAR(500) COMMENT '分类路径',\n    description VARCHAR(500) COMMENT '分类描述',\n    icon VARCHAR(100) COMMENT '分类图标',\n    color VARCHAR(20) COMMENT '分类颜色',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统分类(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    knowledge_count INT DEFAULT 0 COMMENT '知识文档数量',\n    template_config JSON COMMENT '模板配置(JSON格式)',\n    permission_config JSON COMMENT '权限配置(JSON格式)',\n    manager_id BIGINT COMMENT '分类管理员ID',\n    manager_name VARCHAR(50) COMMENT '分类管理员姓名',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_category_name (category_name),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_manager_id (manager_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识分类表';\n\n-- knowledge_tag表（知识标签表）\nDROP TABLE IF EXISTS knowledge_tag;\nCREATE TABLE knowledge_tag (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tag_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    tag_code VARCHAR(50) NOT NULL COMMENT '标签编码',\n    tag_type TINYINT DEFAULT 1 COMMENT '标签类型(1-法律领域,2-业务类型,3-重要程度,4-适用范围,5-自定义)',\n    tag_color VARCHAR(20) DEFAULT '#007bff' COMMENT '标签颜色',\n    tag_icon VARCHAR(100) COMMENT '标签图标',\n    parent_id BIGINT DEFAULT 0 COMMENT '父标签ID',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    use_count INT DEFAULT 0 COMMENT '使用次数',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统标签(0-否,1-是)',\n    is_hot TINYINT DEFAULT 0 COMMENT '是否热门标签(0-否,1-是)',\n    creator_id BIGINT COMMENT '创建人ID',\n    creator_name VARCHAR(50) COMMENT '创建人姓名',\n    description VARCHAR(200) COMMENT '标签描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_tag_code (tenant_id, tag_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_tag_name (tag_name),\n    INDEX idx_tag_type (tag_type),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_use_count (use_count),\n    INDEX idx_is_hot (is_hot),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识标签表';\n\n-- knowledge_tag_relation表（知识标签关联表）\nDROP TABLE IF EXISTS knowledge_tag_relation;\nCREATE TABLE knowledge_tag_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    tag_id BIGINT NOT NULL COMMENT '标签ID',\n    tag_weight DECIMAL(3,2) DEFAULT 1.00 COMMENT '标签权重',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-主标签,2-辅助标签,3-自动标签)',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(50) COMMENT '操作人姓名',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_knowledge_tag (knowledge_id, tag_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_tag_id (tag_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_tag_relation_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE,\n    CONSTRAINT fk_knowledge_tag_relation_tag FOREIGN KEY (tag_id) REFERENCES knowledge_tag(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识标签关联表';\n\n-- ======================= 互动管理表 =======================\n\n-- knowledge_comment表（知识评论表）\nDROP TABLE IF EXISTS knowledge_comment;\nCREATE TABLE knowledge_comment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '评论ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    content TEXT NOT NULL COMMENT '评论内容',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-文本,2-富文本)',\n    user_id BIGINT NOT NULL COMMENT '评论用户ID',\n    user_name VARCHAR(50) COMMENT '评论用户名',\n    user_avatar VARCHAR(200) COMMENT '用户头像',\n    parent_id BIGINT DEFAULT 0 COMMENT '父评论ID',\n    root_id BIGINT DEFAULT 0 COMMENT '根评论ID',\n    reply_user_id BIGINT COMMENT '被回复用户ID',\n    reply_user_name VARCHAR(50) COMMENT '被回复用户名',\n    comment_level TINYINT DEFAULT 1 COMMENT '评论层级',\n    like_count INT DEFAULT 0 COMMENT '点赞数',\n    reply_count INT DEFAULT 0 COMMENT '回复数',\n    is_author_reply TINYINT DEFAULT 0 COMMENT '是否作者回复(0-否,1-是)',\n    is_expert_reply TINYINT DEFAULT 0 COMMENT '是否专家回复(0-否,1-是)',\n    is_featured TINYINT DEFAULT 0 COMMENT '是否精选评论(0-否,1-是)',\n    quality_score DECIMAL(3,1) DEFAULT 0.0 COMMENT '评论质量分',\n    ip_address VARCHAR(50) COMMENT 'IP地址',\n    user_agent VARCHAR(500) COMMENT '用户代理',\n    comment_status TINYINT DEFAULT 1 COMMENT '评论状态(1-正常,2-待审核,3-已屏蔽,4-已删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_root_id (root_id),\n    INDEX idx_comment_status (comment_status),\n    INDEX idx_is_featured (is_featured),\n    INDEX idx_like_count (like_count),\n    INDEX idx_create_time (create_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_comment_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识评论表';\n\n-- knowledge_favorite表（知识收藏表）\nDROP TABLE IF EXISTS knowledge_favorite;\nCREATE TABLE knowledge_favorite (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '收藏ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    user_name VARCHAR(50) COMMENT '用户姓名',\n    folder_id BIGINT DEFAULT 0 COMMENT '收藏夹ID',\n    folder_name VARCHAR(100) COMMENT '收藏夹名称',\n    note VARCHAR(500) COMMENT '收藏备注',\n    tags JSON COMMENT '个人标签(JSON格式)',\n    favorite_type TINYINT DEFAULT 1 COMMENT '收藏类型(1-个人收藏,2-共享收藏)',\n    priority TINYINT DEFAULT 1 COMMENT '优先级(1-一般,2-重要,3-紧急)',\n    access_count INT DEFAULT 0 COMMENT '访问次数',\n    last_access_time DATETIME COMMENT '最后访问时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_user_knowledge (user_id, knowledge_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_folder_id (folder_id),\n    INDEX idx_favorite_type (favorite_type),\n    INDEX idx_priority (priority),\n    INDEX idx_last_access_time (last_access_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_favorite_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识收藏表';\n\n-- knowledge_like表（知识点赞表）\nDROP TABLE IF EXISTS knowledge_like;\nCREATE TABLE knowledge_like (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '点赞ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    user_name VARCHAR(50) COMMENT '用户姓名',\n    like_type TINYINT DEFAULT 1 COMMENT '点赞类型(1-点赞,2-点踩)',\n    ip_address VARCHAR(50) COMMENT 'IP地址',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_user_knowledge_like (user_id, knowledge_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_like_type (like_type),\n    INDEX idx_create_time (create_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_like_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识点赞表';\n\n-- ======================= 统计分析表 =======================\n\n-- knowledge_view_log表（知识浏览记录表）\nDROP TABLE IF EXISTS knowledge_view_log;\nCREATE TABLE knowledge_view_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '浏览记录ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    knowledge_id BIGINT NOT NULL COMMENT '知识ID',\n    user_id BIGINT COMMENT '用户ID',\n    user_name VARCHAR(50) COMMENT '用户姓名',\n    session_id VARCHAR(100) COMMENT '会话ID',\n    ip_address VARCHAR(50) COMMENT 'IP地址',\n    user_agent VARCHAR(500) COMMENT '用户代理',\n    referer VARCHAR(500) COMMENT '来源页面',\n    view_duration INT DEFAULT 0 COMMENT '浏览时长(秒)',\n    view_source TINYINT DEFAULT 1 COMMENT '浏览来源(1-直接访问,2-搜索,3-推荐,4-分享)',\n    device_type TINYINT DEFAULT 1 COMMENT '设备类型(1-PC,2-移动端,3-平板)',\n    view_date DATE COMMENT '浏览日期',\n    view_hour TINYINT COMMENT '浏览小时',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_knowledge_id (knowledge_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_view_date (view_date),\n    INDEX idx_view_hour (view_hour),\n    INDEX idx_view_source (view_source),\n    INDEX idx_device_type (device_type),\n    INDEX idx_create_time (create_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_knowledge_view_log_document FOREIGN KEY (knowledge_id) REFERENCES knowledge_document(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='知识浏览记录表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1;",
      "size": 20160
    },
    {
      "path": "law-firm-modules\\law-firm-knowledge\\src\\main\\resources\\META-INF\\db\\migration\\V11002__init_knowledge_data.sql",
      "filename": "V11002__init_knowledge_data.sql",
      "version": 11002,
      "module": "law-firm-modules",
      "content": "-- 知识管理模块基础数据\n-- 版本: V11002\n-- 模块: 知识管理模块 (V11000-V11999)\n-- 创建时间: 2023-06-01\n-- 说明: 知识管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 知识管理相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('知识类型', 'knowledge_type', 1, 'system', NOW(), '知识文档类型字典'),\n('内容类型', 'knowledge_content_type', 1, 'system', NOW(), '知识内容类型字典'),\n('文档状态', 'knowledge_document_status', 1, 'system', NOW(), '知识文档状态字典'),\n('可见性', 'knowledge_visibility', 1, 'system', NOW(), '知识可见性字典'),\n('难度等级', 'knowledge_difficulty_level', 1, 'system', NOW(), '知识难度等级字典'),\n('重要程度', 'knowledge_importance_level', 1, 'system', NOW(), '知识重要程度字典'),\n('来源类型', 'knowledge_source_type', 1, 'system', NOW(), '知识来源类型字典'),\n('标签类型', 'knowledge_tag_type', 1, 'system', NOW(), '知识标签类型字典'),\n('关联类型', 'knowledge_relation_type', 1, 'system', NOW(), '知识标签关联类型字典'),\n('评论状态', 'knowledge_comment_status', 1, 'system', NOW(), '知识评论状态字典'),\n('收藏类型', 'knowledge_favorite_type', 1, 'system', NOW(), '知识收藏类型字典'),\n('优先级', 'knowledge_priority', 1, 'system', NOW(), '知识优先级字典'),\n('点赞类型', 'knowledge_like_type', 1, 'system', NOW(), '知识点赞类型字典'),\n('浏览来源', 'knowledge_view_source', 1, 'system', NOW(), '知识浏览来源字典'),\n('设备类型', 'knowledge_device_type', 1, 'system', NOW(), '访问设备类型字典'),\n('存储类型', 'knowledge_storage_type', 1, 'system', NOW(), '知识存储类型字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 知识类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '法律法规', '1', 'knowledge_type', '', 'primary', 'Y', 1, 'system', NOW(), '法律法规类知识'),\n(2, '案例分析', '2', 'knowledge_type', '', 'success', 'N', 1, 'system', NOW(), '案例分析类知识'),\n(3, '合同范本', '3', 'knowledge_type', '', 'info', 'N', 1, 'system', NOW(), '合同范本类知识'),\n(4, '法律文书', '4', 'knowledge_type', '', 'warning', 'N', 1, 'system', NOW(), '法律文书类知识'),\n(5, '法律研究', '5', 'knowledge_type', '', 'dark', 'N', 1, 'system', NOW(), '法律研究类知识'),\n(6, '业务知识', '6', 'knowledge_type', '', 'secondary', 'N', 1, 'system', NOW(), '业务知识类知识'),\n(7, '管理制度', '7', 'knowledge_type', '', 'danger', 'N', 1, 'system', NOW(), '管理制度类知识');\n\n-- 内容类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '文本', '1', 'knowledge_content_type', '', 'primary', 'Y', 1, 'system', NOW(), '纯文本内容'),\n(2, '富文本', '2', 'knowledge_content_type', '', 'success', 'N', 1, 'system', NOW(), '富文本内容'),\n(3, 'Markdown', '3', 'knowledge_content_type', '', 'info', 'N', 1, 'system', NOW(), 'Markdown格式'),\n(4, 'PDF', '4', 'knowledge_content_type', '', 'warning', 'N', 1, 'system', NOW(), 'PDF文档'),\n(5, 'Word', '5', 'knowledge_content_type', '', 'dark', 'N', 1, 'system', NOW(), 'Word文档'),\n(6, 'PPT', '6', 'knowledge_content_type', '', 'secondary', 'N', 1, 'system', NOW(), 'PPT演示文稿'),\n(7, '视频', '7', 'knowledge_content_type', '', 'danger', 'N', 1, 'system', NOW(), '视频内容'),\n(8, '音频', '8', 'knowledge_content_type', '', 'light', 'N', 1, 'system', NOW(), '音频内容');\n\n-- 文档状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'knowledge_document_status', '', 'secondary', 'Y', 1, 'system', NOW(), '文档草稿状态'),\n(2, '待审核', '2', 'knowledge_document_status', '', 'warning', 'N', 1, 'system', NOW(), '文档待审核状态'),\n(3, '已发布', '3', 'knowledge_document_status', '', 'success', 'N', 1, 'system', NOW(), '文档已发布状态'),\n(4, '已归档', '4', 'knowledge_document_status', '', 'info', 'N', 1, 'system', NOW(), '文档已归档状态'),\n(5, '已下架', '5', 'knowledge_document_status', '', 'danger', 'N', 1, 'system', NOW(), '文档已下架状态');\n\n-- 可见性\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '公开', '1', 'knowledge_visibility', '', 'success', 'Y', 1, 'system', NOW(), '所有人可见'),\n(2, '部门', '2', 'knowledge_visibility', '', 'primary', 'N', 1, 'system', NOW(), '部门内可见'),\n(3, '岗位', '3', 'knowledge_visibility', '', 'info', 'N', 1, 'system', NOW(), '特定岗位可见'),\n(4, '私有', '4', 'knowledge_visibility', '', 'warning', 'N', 1, 'system', NOW(), '仅创建者可见');\n\n-- 难度等级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '入门', '1', 'knowledge_difficulty_level', '', 'success', 'Y', 1, 'system', NOW(), '入门级别'),\n(2, '初级', '2', 'knowledge_difficulty_level', '', 'primary', 'N', 1, 'system', NOW(), '初级级别'),\n(3, '中级', '3', 'knowledge_difficulty_level', '', 'info', 'N', 1, 'system', NOW(), '中级级别'),\n(4, '高级', '4', 'knowledge_difficulty_level', '', 'warning', 'N', 1, 'system', NOW(), '高级级别'),\n(5, '专家', '5', 'knowledge_difficulty_level', '', 'danger', 'N', 1, 'system', NOW(), '专家级别');\n\n-- 重要程度\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '一般', '1', 'knowledge_importance_level', '', 'secondary', 'Y', 1, 'system', NOW(), '一般重要'),\n(2, '重要', '2', 'knowledge_importance_level', '', 'primary', 'N', 1, 'system', NOW(), '重要'),\n(3, '核心', '3', 'knowledge_importance_level', '', 'info', 'N', 1, 'system', NOW(), '核心重要'),\n(4, '关键', '4', 'knowledge_importance_level', '', 'warning', 'N', 1, 'system', NOW(), '关键重要'),\n(5, '战略', '5', 'knowledge_importance_level', '', 'danger', 'N', 1, 'system', NOW(), '战略重要');\n\n-- 来源类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '原创', '1', 'knowledge_source_type', '', 'primary', 'Y', 1, 'system', NOW(), '原创内容'),\n(2, '整理', '2', 'knowledge_source_type', '', 'success', 'N', 1, 'system', NOW(), '整理内容'),\n(3, '转载', '3', 'knowledge_source_type', '', 'info', 'N', 1, 'system', NOW(), '转载内容'),\n(4, '翻译', '4', 'knowledge_source_type', '', 'warning', 'N', 1, 'system', NOW(), '翻译内容');\n\n-- 标签类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '法律领域', '1', 'knowledge_tag_type', '', 'primary', 'Y', 1, 'system', NOW(), '法律领域标签'),\n(2, '业务类型', '2', 'knowledge_tag_type', '', 'success', 'N', 1, 'system', NOW(), '业务类型标签'),\n(3, '重要程度', '3', 'knowledge_tag_type', '', 'info', 'N', 1, 'system', NOW(), '重要程度标签'),\n(4, '适用范围', '4', 'knowledge_tag_type', '', 'warning', 'N', 1, 'system', NOW(), '适用范围标签'),\n(5, '自定义', '5', 'knowledge_tag_type', '', 'dark', 'N', 1, 'system', NOW(), '自定义标签');\n\n-- 关联类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '主标签', '1', 'knowledge_relation_type', '', 'primary', 'Y', 1, 'system', NOW(), '主要标签'),\n(2, '辅助标签', '2', 'knowledge_relation_type', '', 'secondary', 'N', 1, 'system', NOW(), '辅助标签'),\n(3, '自动标签', '3', 'knowledge_relation_type', '', 'info', 'N', 1, 'system', NOW(), '自动标签');\n\n-- 评论状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '正常', '1', 'knowledge_comment_status', '', 'success', 'Y', 1, 'system', NOW(), '评论正常状态'),\n(2, '待审核', '2', 'knowledge_comment_status', '', 'warning', 'N', 1, 'system', NOW(), '评论待审核状态'),\n(3, '已屏蔽', '3', 'knowledge_comment_status', '', 'danger', 'N', 1, 'system', NOW(), '评论已屏蔽状态'),\n(4, '已删除', '4', 'knowledge_comment_status', '', 'dark', 'N', 1, 'system', NOW(), '评论已删除状态');\n\n-- 收藏类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '个人收藏', '1', 'knowledge_favorite_type', '', 'primary', 'Y', 1, 'system', NOW(), '个人收藏'),\n(2, '共享收藏', '2', 'knowledge_favorite_type', '', 'success', 'N', 1, 'system', NOW(), '共享收藏');\n\n-- 优先级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '一般', '1', 'knowledge_priority', '', 'secondary', 'Y', 1, 'system', NOW(), '一般优先级'),\n(2, '重要', '2', 'knowledge_priority', '', 'primary', 'N', 1, 'system', NOW(), '重要优先级'),\n(3, '紧急', '3', 'knowledge_priority', '', 'danger', 'N', 1, 'system', NOW(), '紧急优先级');\n\n-- 点赞类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '点赞', '1', 'knowledge_like_type', '', 'success', 'Y', 1, 'system', NOW(), '点赞'),\n(2, '点踩', '2', 'knowledge_like_type', '', 'danger', 'N', 1, 'system', NOW(), '点踩');\n\n-- 浏览来源\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '直接访问', '1', 'knowledge_view_source', '', 'primary', 'Y', 1, 'system', NOW(), '直接访问'),\n(2, '搜索', '2', 'knowledge_view_source', '', 'success', 'N', 1, 'system', NOW(), '搜索访问'),\n(3, '推荐', '3', 'knowledge_view_source', '', 'info', 'N', 1, 'system', NOW(), '推荐访问'),\n(4, '分享', '4', 'knowledge_view_source', '', 'warning', 'N', 1, 'system', NOW(), '分享访问');\n\n-- 设备类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, 'PC', '1', 'knowledge_device_type', '', 'primary', 'Y', 1, 'system', NOW(), 'PC端'),\n(2, '移动端', '2', 'knowledge_device_type', '', 'success', 'N', 1, 'system', NOW(), '移动端'),\n(3, '平板', '3', 'knowledge_device_type', '', 'info', 'N', 1, 'system', NOW(), '平板端');\n\n-- 存储类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '本地', '1', 'knowledge_storage_type', '', 'primary', 'Y', 1, 'system', NOW(), '本地存储'),\n(2, 'OSS', '2', 'knowledge_storage_type', '', 'success', 'N', 1, 'system', NOW(), '对象存储'),\n(3, 'CDN', '3', 'knowledge_storage_type', '', 'info', 'N', 1, 'system', NOW(), 'CDN存储');\n\n-- ======================= 知识分类数据 =======================\n\n-- 初始化知识分类（一级分类）\nINSERT INTO knowledge_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, icon, sort_order, is_system, is_enabled, create_by, create_time, status) VALUES\n(0, '法律法规', 'LAW_REGULATION', 0, 1, '/LAW_REGULATION', '法律法规类知识分类', 'law', 1, 1, 1, 'system', NOW(), 1),\n(0, '案例分析', 'CASE_ANALYSIS', 0, 1, '/CASE_ANALYSIS', '案例分析类知识分类', 'case', 2, 1, 1, 'system', NOW(), 1),\n(0, '合同范本', 'CONTRACT_TEMPLATE', 0, 1, '/CONTRACT_TEMPLATE', '合同范本类知识分类', 'contract', 3, 1, 1, 'system', NOW(), 1),\n(0, '法律文书', 'LEGAL_DOCUMENT', 0, 1, '/LEGAL_DOCUMENT', '法律文书类知识分类', 'document', 4, 1, 1, 'system', NOW(), 1),\n(0, '法律研究', 'LEGAL_RESEARCH', 0, 1, '/LEGAL_RESEARCH', '法律研究类知识分类', 'research', 5, 1, 1, 'system', NOW(), 1),\n(0, '业务知识', 'BUSINESS_KNOWLEDGE', 0, 1, '/BUSINESS_KNOWLEDGE', '业务知识类知识分类', 'business', 6, 1, 1, 'system', NOW(), 1),\n(0, '管理制度', 'MANAGEMENT_SYSTEM', 0, 1, '/MANAGEMENT_SYSTEM', '管理制度类知识分类', 'management', 7, 1, 1, 'system', NOW(), 1);\n\n-- 初始化知识分类（二级分类 - 法律法规）\nINSERT INTO knowledge_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, is_enabled, create_by, create_time, status) VALUES\n(0, '宪法', 'CONSTITUTIONAL_LAW', 1, 2, '/LAW_REGULATION/CONSTITUTIONAL_LAW', '宪法相关法规', 1, 1, 1, 'system', NOW(), 1),\n(0, '民商法', 'CIVIL_COMMERCIAL_LAW', 1, 2, '/LAW_REGULATION/CIVIL_COMMERCIAL_LAW', '民商法相关法规', 2, 1, 1, 'system', NOW(), 1),\n(0, '刑法', 'CRIMINAL_LAW', 1, 2, '/LAW_REGULATION/CRIMINAL_LAW', '刑法相关法规', 3, 1, 1, 'system', NOW(), 1),\n(0, '行政法', 'ADMINISTRATIVE_LAW', 1, 2, '/LAW_REGULATION/ADMINISTRATIVE_LAW', '行政法相关法规', 4, 1, 1, 'system', NOW(), 1),\n(0, '经济法', 'ECONOMIC_LAW', 1, 2, '/LAW_REGULATION/ECONOMIC_LAW', '经济法相关法规', 5, 1, 1, 'system', NOW(), 1),\n(0, '社会法', 'SOCIAL_LAW', 1, 2, '/LAW_REGULATION/SOCIAL_LAW', '社会法相关法规', 6, 1, 1, 'system', NOW(), 1),\n(0, '诉讼与非诉讼程序法', 'PROCEDURAL_LAW', 1, 2, '/LAW_REGULATION/PROCEDURAL_LAW', '诉讼程序法相关法规', 7, 1, 1, 'system', NOW(), 1);\n\n-- 初始化知识分类（二级分类 - 案例分析）\nINSERT INTO knowledge_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, is_enabled, create_by, create_time, status) VALUES\n(0, '民事案例', 'CIVIL_CASE', 2, 2, '/CASE_ANALYSIS/CIVIL_CASE', '民事案例分析', 1, 1, 1, 'system', NOW(), 1),\n(0, '刑事案例', 'CRIMINAL_CASE', 2, 2, '/CASE_ANALYSIS/CRIMINAL_CASE', '刑事案例分析', 2, 1, 1, 'system', NOW(), 1),\n(0, '行政案例', 'ADMINISTRATIVE_CASE', 2, 2, '/CASE_ANALYSIS/ADMINISTRATIVE_CASE', '行政案例分析', 3, 1, 1, 'system', NOW(), 1),\n(0, '典型案例', 'TYPICAL_CASE', 2, 2, '/CASE_ANALYSIS/TYPICAL_CASE', '典型案例分析', 4, 1, 1, 'system', NOW(), 1),\n(0, '疑难案例', 'DIFFICULT_CASE', 2, 2, '/CASE_ANALYSIS/DIFFICULT_CASE', '疑难案例分析', 5, 1, 1, 'system', NOW(), 1);\n\n-- 初始化知识分类（二级分类 - 合同范本）\nINSERT INTO knowledge_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, is_enabled, create_by, create_time, status) VALUES\n(0, '买卖合同', 'SALES_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/SALES_CONTRACT', '买卖合同范本', 1, 1, 1, 'system', NOW(), 1),\n(0, '租赁合同', 'LEASE_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/LEASE_CONTRACT', '租赁合同范本', 2, 1, 1, 'system', NOW(), 1),\n(0, '劳动合同', 'LABOR_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/LABOR_CONTRACT', '劳动合同范本', 3, 1, 1, 'system', NOW(), 1),\n(0, '建设工程合同', 'CONSTRUCTION_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/CONSTRUCTION_CONTRACT', '建设工程合同范本', 4, 1, 1, 'system', NOW(), 1),\n(0, '技术合同', 'TECHNOLOGY_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/TECHNOLOGY_CONTRACT', '技术合同范本', 5, 1, 1, 'system', NOW(), 1),\n(0, '金融合同', 'FINANCIAL_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/FINANCIAL_CONTRACT', '金融合同范本', 6, 1, 1, 'system', NOW(), 1),\n(0, '其他合同', 'OTHER_CONTRACT', 3, 2, '/CONTRACT_TEMPLATE/OTHER_CONTRACT', '其他合同范本', 7, 1, 1, 'system', NOW(), 1);\n\n-- 初始化知识分类（二级分类 - 法律文书）\nINSERT INTO knowledge_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, is_enabled, create_by, create_time, status) VALUES\n(0, '诉讼文书', 'LITIGATION_DOCUMENT', 4, 2, '/LEGAL_DOCUMENT/LITIGATION_DOCUMENT', '诉讼文书模板', 1, 1, 1, 'system', NOW(), 1),\n(0, '非诉文书', 'NON_LITIGATION_DOCUMENT', 4, 2, '/LEGAL_DOCUMENT/NON_LITIGATION_DOCUMENT', '非诉讼文书模板', 2, 1, 1, 'system', NOW(), 1),\n(0, '仲裁文书', 'ARBITRATION_DOCUMENT', 4, 2, '/LEGAL_DOCUMENT/ARBITRATION_DOCUMENT', '仲裁文书模板', 3, 1, 1, 'system', NOW(), 1),\n(0, '公证文书', 'NOTARY_DOCUMENT', 4, 2, '/LEGAL_DOCUMENT/NOTARY_DOCUMENT', '公证文书模板', 4, 1, 1, 'system', NOW(), 1);\n\n-- ======================= 知识标签数据 =======================\n\n-- 初始化知识标签（法律领域标签）\nINSERT INTO knowledge_tag (tenant_id, tag_name, tag_code, tag_type, tag_color, sort_order, is_system, creator_name, description, create_by, create_time, status) VALUES\n(0, '民法典', 'CIVIL_CODE', 1, '#007bff', 1, 1, 'system', '民法典相关知识', 'system', NOW(), 1),\n(0, '公司法', 'COMPANY_LAW', 1, '#28a745', 2, 1, 'system', '公司法相关知识', 'system', NOW(), 1),\n(0, '合同法', 'CONTRACT_LAW', 1, '#17a2b8', 3, 1, 'system', '合同法相关知识', 'system', NOW(), 1),\n(0, '证券法', 'SECURITIES_LAW', 1, '#ffc107', 4, 1, 'system', '证券法相关知识', 'system', NOW(), 1),\n(0, '劳动法', 'LABOR_LAW', 1, '#dc3545', 5, 1, 'system', '劳动法相关知识', 'system', NOW(), 1),\n(0, '知识产权', 'IP_LAW', 1, '#6f42c1', 6, 1, 'system', '知识产权法相关知识', 'system', NOW(), 1),\n(0, '房地产', 'REAL_ESTATE', 1, '#fd7e14', 7, 1, 'system', '房地产法相关知识', 'system', NOW(), 1),\n(0, '金融保险', 'FINANCE_INSURANCE', 1, '#20c997', 8, 1, 'system', '金融保险法相关知识', 'system', NOW(), 1),\n(0, '环境保护', 'ENVIRONMENTAL', 1, '#198754', 9, 1, 'system', '环境保护法相关知识', 'system', NOW(), 1),\n(0, '税收法规', 'TAX_LAW', 1, '#6610f2', 10, 1, 'system', '税收法规相关知识', 'system', NOW(), 1);\n\n-- 初始化知识标签（业务类型标签）\nINSERT INTO knowledge_tag (tenant_id, tag_name, tag_code, tag_type, tag_color, sort_order, is_system, creator_name, description, create_by, create_time, status) VALUES\n(0, '诉讼业务', 'LITIGATION_BUSINESS', 2, '#007bff', 11, 1, 'system', '诉讼业务相关知识', 'system', NOW(), 1),\n(0, '非诉业务', 'NON_LITIGATION_BUSINESS', 2, '#28a745', 12, 1, 'system', '非诉讼业务相关知识', 'system', NOW(), 1),\n(0, '顾问业务', 'CONSULTANT_BUSINESS', 2, '#17a2b8', 13, 1, 'system', '法律顾问业务相关知识', 'system', NOW(), 1),\n(0, '专项服务', 'SPECIAL_SERVICE', 2, '#ffc107', 14, 1, 'system', '专项法律服务相关知识', 'system', NOW(), 1),\n(0, '尽职调查', 'DUE_DILIGENCE', 2, '#dc3545', 15, 1, 'system', '尽职调查相关知识', 'system', NOW(), 1);\n\n-- 初始化知识标签（重要程度标签）\nINSERT INTO knowledge_tag (tenant_id, tag_name, tag_code, tag_type, tag_color, sort_order, is_system, creator_name, description, create_by, create_time, status) VALUES\n(0, '核心知识', 'CORE_KNOWLEDGE', 3, '#dc3545', 16, 1, 'system', '核心重要知识', 'system', NOW(), 1),\n(0, '重要知识', 'IMPORTANT_KNOWLEDGE', 3, '#ffc107', 17, 1, 'system', '重要知识', 'system', NOW(), 1),\n(0, '一般知识', 'GENERAL_KNOWLEDGE', 3, '#17a2b8', 18, 1, 'system', '一般知识', 'system', NOW(), 1),\n(0, '参考知识', 'REFERENCE_KNOWLEDGE', 3, '#6c757d', 19, 1, 'system', '参考知识', 'system', NOW(), 1);\n\n-- 初始化知识标签（适用范围标签）\nINSERT INTO knowledge_tag (tenant_id, tag_name, tag_code, tag_type, tag_color, sort_order, is_system, creator_name, description, create_by, create_time, status) VALUES\n(0, '全所适用', 'FIRM_WIDE', 4, '#28a745', 20, 1, 'system', '全所人员适用', 'system', NOW(), 1),\n(0, '部门适用', 'DEPARTMENT_SPECIFIC', 4, '#007bff', 21, 1, 'system', '特定部门适用', 'system', NOW(), 1),\n(0, '专业适用', 'PROFESSIONAL_SPECIFIC', 4, '#6f42c1', 22, 1, 'system', '特定专业适用', 'system', NOW(), 1),\n(0, '个人适用', 'PERSONAL_SPECIFIC', 4, '#fd7e14', 23, 1, 'system', '个人专用', 'system', NOW(), 1);\n\n-- 初始化完成提示\nSELECT '知识管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建字典类型：', COUNT(*), '个') AS dict_type_count FROM sys_dict_type WHERE dict_type LIKE 'knowledge_%';\nSELECT CONCAT('已创建字典数据：', COUNT(*), '个') AS dict_data_count FROM sys_dict_data WHERE dict_type LIKE 'knowledge_%';\nSELECT CONCAT('已创建知识分类：', COUNT(*), '个') AS category_count FROM knowledge_category WHERE tenant_id = 0;\nSELECT CONCAT('已创建知识标签：', COUNT(*), '个') AS tag_count FROM knowledge_tag WHERE tenant_id = 0; ",
      "size": 18117
    },
    {
      "path": "law-firm-modules\\law-firm-finance\\src\\main\\resources\\META-INF\\db\\migration\\V10000__finance_module_description.sql",
      "filename": "V10000__finance_module_description.sql",
      "version": 10000,
      "module": "law-firm-modules",
      "content": "-- 财务管理模块说明\n-- 版本: V10000\n-- 模块: 财务管理模块 (V10000-V10999)\n-- 创建时间: 2023-06-01\n-- 说明: 财务管理功能模块架构说明\n\n/*\n=============================================================================\n                            财务管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n财务管理模块负责律师事务所的财务核算和资金管理，包括：\n- 账户管理\n- 交易记录\n- 发票管理\n- 应收应付管理\n- 账单管理\n- 收支管理\n- 预算管理\n- 财务报表\n- 费用管理\n\n二、版本规划 (V10000-V10999)\n- V10000: 模块说明文档\n- V10001: 表结构定义\n- V10002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 账户管理\n   - finance_account: 账户信息\n   - finance_account_balance: 账户余额\n   - finance_account_operation: 账户操作记录\n\n2. 交易管理\n   - finance_transaction: 交易记录\n   - finance_transaction_detail: 交易明细\n   - finance_voucher: 财务凭证\n\n3. 发票管理\n   - finance_invoice: 发票信息\n   - finance_invoice_item: 发票明细\n   - finance_invoice_log: 发票操作日志\n\n4. 应收应付管理\n   - finance_receivable: 应收账款\n   - finance_receivable_detail: 应收明细\n   - finance_payable: 应付账款\n   - finance_payable_detail: 应付明细\n\n5. 账单管理\n   - finance_bill: 账单信息\n   - finance_bill_item: 账单明细\n   - finance_payment_plan: 付款计划\n\n6. 收支管理\n   - finance_income: 收入记录\n   - finance_expense: 支出记录\n   - finance_cost_center: 成本中心\n\n7. 预算管理\n   - finance_budget: 预算计划\n   - finance_budget_item: 预算明细\n   - finance_budget_execution: 预算执行\n\n8. 财务报表\n   - finance_report: 财务报表\n   - finance_report_data: 报表数据\n   - finance_statement: 财务报表\n\n四、数据关系\n=============================================================================\n- finance_account → finance_account_balance (账户余额)\n- finance_account → finance_account_operation (账户操作)\n- finance_transaction → finance_transaction_detail (交易明细)\n- finance_transaction → finance_voucher (财务凭证)\n- finance_invoice → finance_invoice_item (发票明细)\n- finance_invoice → finance_invoice_log (发票日志)\n- finance_receivable → finance_receivable_detail (应收明细)\n- finance_payable → finance_payable_detail (应付明细)\n- finance_bill → finance_bill_item (账单明细)\n- finance_bill → finance_payment_plan (付款计划)\n- finance_budget → finance_budget_item (预算明细)\n- finance_budget → finance_budget_execution (预算执行)\n- finance_report → finance_report_data (报表数据)\n\n五、业务特点\n=============================================================================\n1. 账户管理\n   - 多币种账户支持\n   - 账户余额实时更新\n   - 账户冻结和解冻\n   - 账户操作审计\n\n2. 交易控制\n   - 交易流水记录\n   - 交易状态跟踪\n   - 交易对账功能\n   - 交易撤销和冲正\n\n3. 发票管理\n   - 发票开具和作废\n   - 发票状态跟踪\n   - 发票寄送管理\n   - 发票验真功能\n\n4. 应收应付\n   - 应收账款跟踪\n   - 逾期提醒功能\n   - 坏账处理机制\n   - 催收管理功能\n\n5. 财务报表\n   - 实时财务数据\n   - 多维度分析\n   - 自定义报表\n   - 数据导出功能\n\n六、权限设计\n=============================================================================\n财务管理功能权限控制：\n- 财务查看: FINANCE_VIEW\n- 财务管理: FINANCE_MANAGE\n- 账户管理: ACCOUNT_MANAGE\n- 交易管理: TRANSACTION_MANAGE\n- 发票管理: INVOICE_MANAGE\n- 应收管理: RECEIVABLE_MANAGE\n- 应付管理: PAYABLE_MANAGE\n- 账单管理: BILL_MANAGE\n- 预算管理: BUDGET_MANAGE\n- 报表查看: REPORT_VIEW\n- 财务审计: FINANCE_AUDIT\n- 财务统计: FINANCE_STATISTICS\n\n七、注意事项\n=============================================================================\n1. 财务数据涉及敏感信息，需严格权限控制\n2. 所有财务操作需要完整的审计日志\n3. 账户余额变动需要事务控制确保一致性\n4. 财务报表数据需要定期校验和对账\n5. 支持多币种和汇率转换\n6. 需要完善的财务审批流程\n7. 支持财务数据的备份和恢复\n\n八、账户编号规则\n=============================================================================\n账户编号格式：ACCT-类型-YYYY-流水号\n- ACCT: 账户(Account)前缀\n- 类型: 01-现金, 02-银行, 03-支付宝, 04-微信, 05-其他\n- YYYY: 年份\n- 流水号: 4位数字，从0001开始\n\n示例：ACCT-02-2023-0001（2023年第1个银行账户）\n\n九、交易编号规则\n=============================================================================\n交易编号格式：TXN-YYYYMMDD-HHMMSS-流水号\n- TXN: 交易(Transaction)前缀\n- YYYYMMDD: 交易日期\n- HHMMSS: 交易时间\n- 流水号: 3位数字，从001开始\n\n示例：TXN-20231201-143022-001\n\n十、发票编号规则\n=============================================================================\n发票编号格式：INV-发票类型-YYYYMM-流水号\n- INV: 发票(Invoice)前缀\n- 发票类型: VAT-增值税, ORD-普通, ELE-电子\n- YYYYMM: 开票年月\n- 流水号: 6位数字，从000001开始\n\n示例：INV-VAT-202312-000001\n\n十一、财务核算原则\n=============================================================================\n1. 权责发生制原则：\n   - 按权责发生制确认收入和费用\n   - 收入确认遵循实现原则\n   - 费用确认遵循配比原则\n\n2. 成本效益原则：\n   - 核算成本不应超过其效益\n   - 简化不重要事项的核算\n   - 重点关注重要财务指标\n\n3. 谨慎性原则：\n   - 稳健估计收入和费用\n   - 充分考虑可能的损失\n   - 合理计提坏账准备\n\n4. 一致性原则：\n   - 财务核算方法保持一致\n   - 核算口径前后一致\n   - 报表格式标准统一\n\n十二、风险控制\n=============================================================================\n1. 内控制度：\n   - 建立完善的内控制度\n   - 实施有效的职责分离\n   - 定期进行内部审计\n\n2. 资金安全：\n   - 银行账户定期对账\n   - 大额资金流动审批\n   - 资金使用全程监控\n\n3. 数据安全：\n   - 财务数据定期备份\n   - 访问权限严格控制\n   - 操作日志完整记录\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 财务管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '财务管理模块说明文档已加载' AS message; ",
      "size": 4701
    },
    {
      "path": "law-firm-modules\\law-firm-finance\\src\\main\\resources\\META-INF\\db\\migration\\V10001__init_finance_tables.sql",
      "filename": "V10001__init_finance_tables.sql",
      "version": 10001,
      "module": "law-firm-modules",
      "content": "-- 财务管理模块表结构\n-- 版本: V10001\n-- 模块: 财务管理模块 (V10000-V10999)\n-- 创建时间: 2023-06-01\n-- 说明: 财务管理功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 账户管理表 =======================\n\n-- finance_account表（账户信息表）\nDROP TABLE IF EXISTS finance_account;\nCREATE TABLE finance_account (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '账户ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    account_number VARCHAR(50) NOT NULL COMMENT '账户编号',\n    account_name VARCHAR(100) NOT NULL COMMENT '账户名称',\n    account_type TINYINT DEFAULT 1 COMMENT '账户类型(1-现金,2-银行,3-支付宝,4-微信,5-虚拟,6-信用)',\n    account_status TINYINT DEFAULT 1 COMMENT '账户状态(1-正常,2-冻结,3-注销,4-锁定)',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    balance DECIMAL(15,2) DEFAULT 0.00 COMMENT '账户余额',\n    frozen_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '冻结金额',\n    available_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '可用金额',\n    credit_limit DECIMAL(15,2) DEFAULT 0.00 COMMENT '信用额度',\n    bank_name VARCHAR(100) COMMENT '开户银行',\n    bank_account VARCHAR(50) COMMENT '银行账号',\n    account_holder VARCHAR(50) COMMENT '开户人',\n    client_id BIGINT COMMENT '关联客户ID',\n    department_id BIGINT COMMENT '关联部门ID',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认账户(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    last_transaction_time DATETIME COMMENT '最后交易时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_account_number (tenant_id, account_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_account_name (account_name),\n    INDEX idx_account_type (account_type),\n    INDEX idx_account_status (account_status),\n    INDEX idx_client_id (client_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_currency (currency),\n    INDEX idx_is_default (is_default),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='账户信息表';\n\n-- ======================= 交易管理表 =======================\n\n-- finance_transaction表（交易记录表）\nDROP TABLE IF EXISTS finance_transaction;\nCREATE TABLE finance_transaction (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '交易ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    transaction_number VARCHAR(50) NOT NULL COMMENT '交易编号',\n    transaction_type TINYINT NOT NULL COMMENT '交易类型(1-收款,2-付款,3-转账,4-退款,5-预付款,6-押金,7-调整)',\n    amount DECIMAL(15,2) NOT NULL COMMENT '交易金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    transaction_time DATETIME NOT NULL COMMENT '交易时间',\n    from_account_id BIGINT COMMENT '付款账户ID',\n    to_account_id BIGINT COMMENT '收款账户ID',\n    business_id BIGINT COMMENT '关联业务ID',\n    business_type VARCHAR(50) COMMENT '关联业务类型(case-案件,contract-合同,invoice-发票)',\n    transaction_status TINYINT DEFAULT 1 COMMENT '交易状态(1-待处理,2-处理中,3-成功,4-失败,5-取消)',\n    summary VARCHAR(200) COMMENT '交易摘要',\n    voucher_number VARCHAR(50) COMMENT '凭证号',\n    payment_method TINYINT COMMENT '付款方式(1-银行转账,2-现金,3-支票,4-支付宝,5-微信,6-抵扣)',\n    approval_status TINYINT DEFAULT 1 COMMENT '审批状态(1-无需审批,2-待审批,3-已审批,4-已拒绝)',\n    approver_id BIGINT COMMENT '审批人ID',\n    approval_time DATETIME COMMENT '审批时间',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(50) COMMENT '操作人姓名',\n    department_id BIGINT COMMENT '部门ID',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_transaction_number (tenant_id, transaction_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_transaction_type (transaction_type),\n    INDEX idx_transaction_time (transaction_time),\n    INDEX idx_from_account_id (from_account_id),\n    INDEX idx_to_account_id (to_account_id),\n    INDEX idx_business_id (business_id),\n    INDEX idx_business_type (business_type),\n    INDEX idx_transaction_status (transaction_status),\n    INDEX idx_approval_status (approval_status),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_finance_transaction_from_account FOREIGN KEY (from_account_id) REFERENCES finance_account(id),\n    CONSTRAINT fk_finance_transaction_to_account FOREIGN KEY (to_account_id) REFERENCES finance_account(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='交易记录表';\n\n-- ======================= 发票管理表 =======================\n\n-- finance_invoice表（发票信息表）\nDROP TABLE IF EXISTS finance_invoice;\nCREATE TABLE finance_invoice (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '发票ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    invoice_number VARCHAR(50) NOT NULL COMMENT '发票编号',\n    invoice_type TINYINT DEFAULT 1 COMMENT '发票类型(1-增值税专用发票,2-增值税普通发票,3-电子发票,4-普通收据)',\n    invoice_status TINYINT DEFAULT 1 COMMENT '发票状态(1-待开票,2-已开票,3-已作废,4-已寄出,5-已签收)',\n    amount DECIMAL(15,2) NOT NULL COMMENT '发票金额',\n    tax_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '税额',\n    total_amount DECIMAL(15,2) NOT NULL COMMENT '价税合计',\n    case_id BIGINT COMMENT '关联案件ID',\n    contract_id BIGINT COMMENT '关联合同ID',\n    client_id BIGINT COMMENT '客户ID',\n    invoice_title VARCHAR(200) NOT NULL COMMENT '发票抬头',\n    invoice_content VARCHAR(500) COMMENT '发票内容',\n    issue_time DATETIME COMMENT '开票时间',\n    issued_by VARCHAR(50) COMMENT '开票人',\n    taxpayer_number VARCHAR(50) COMMENT '纳税人识别号',\n    registered_address VARCHAR(200) COMMENT '注册地址',\n    registered_phone VARCHAR(50) COMMENT '注册电话',\n    bank_name VARCHAR(100) COMMENT '开户银行',\n    bank_account VARCHAR(50) COMMENT '银行账号',\n    receiver_name VARCHAR(50) COMMENT '收件人',\n    receiver_phone VARCHAR(50) COMMENT '收件电话',\n    receiver_address VARCHAR(200) COMMENT '收件地址',\n    express_company VARCHAR(50) COMMENT '快递公司',\n    express_number VARCHAR(50) COMMENT '快递单号',\n    send_time DATETIME COMMENT '寄送时间',\n    receive_time DATETIME COMMENT '签收时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_invoice_number (tenant_id, invoice_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_invoice_type (invoice_type),\n    INDEX idx_invoice_status (invoice_status),\n    INDEX idx_case_id (case_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_issue_time (issue_time),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='发票信息表';\n\n-- ======================= 应收应付管理表 =======================\n\n-- finance_receivable表（应收账款表）\nDROP TABLE IF EXISTS finance_receivable;\nCREATE TABLE finance_receivable (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '应收ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    receivable_number VARCHAR(50) NOT NULL COMMENT '应收账款编号',\n    receivable_name VARCHAR(100) NOT NULL COMMENT '应收账款名称',\n    contract_id BIGINT COMMENT '关联合同ID',\n    case_id BIGINT COMMENT '关联案件ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    total_amount DECIMAL(15,2) NOT NULL COMMENT '应收总金额',\n    received_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '已收金额',\n    unreceived_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '未收金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    credit_period INT DEFAULT 0 COMMENT '账期（天）',\n    due_date DATETIME COMMENT '到期日期',\n    expected_receipt_date DATETIME COMMENT '预计收款日期',\n    overdue_days INT DEFAULT 0 COMMENT '逾期天数',\n    receivable_status TINYINT DEFAULT 1 COMMENT '应收状态(1-待收款,2-部分收款,3-已收款,4-逾期,5-坏账)',\n    lawyer_id BIGINT COMMENT '负责律师ID',\n    department_id BIGINT COMMENT '部门ID',\n    last_receipt_date DATETIME COMMENT '最近收款日期',\n    collection_status TINYINT DEFAULT 1 COMMENT '催收状态(1-无需催收,2-待催收,3-催收中,4-催收完成)',\n    bad_debt_provision DECIMAL(15,2) DEFAULT 0.00 COMMENT '坏账准备',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_receivable_number (tenant_id, receivable_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_receivable_status (receivable_status),\n    INDEX idx_due_date (due_date),\n    INDEX idx_lawyer_id (lawyer_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_collection_status (collection_status),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='应收账款表';\n\n-- ======================= 账单管理表 =======================\n\n-- finance_bill表（账单信息表）\nDROP TABLE IF EXISTS finance_bill;\nCREATE TABLE finance_bill (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '账单ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    bill_number VARCHAR(50) NOT NULL COMMENT '账单编号',\n    bill_type TINYINT DEFAULT 1 COMMENT '账单类型(1-律师费,2-诉讼费,3-顾问费,4-代理费,5-综合账单)',\n    bill_status TINYINT DEFAULT 1 COMMENT '账单状态(1-草稿,2-已确认,3-已发送,4-部分付款,5-已付款,6-已取消,7-逾期)',\n    case_id BIGINT COMMENT '关联案件ID',\n    contract_id BIGINT COMMENT '关联合同ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    bill_title VARCHAR(200) NOT NULL COMMENT '账单标题',\n    total_amount DECIMAL(15,2) NOT NULL COMMENT '账单总金额',\n    paid_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '已付金额',\n    unpaid_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '未付金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    bill_date DATETIME NOT NULL COMMENT '账单日期',\n    due_date DATETIME COMMENT '到期日期',\n    payment_terms VARCHAR(200) COMMENT '付款条件',\n    lawyer_id BIGINT COMMENT '负责律师ID',\n    department_id BIGINT COMMENT '部门ID',\n    is_recurring TINYINT DEFAULT 0 COMMENT '是否循环账单(0-否,1-是)',\n    recurring_period TINYINT COMMENT '循环周期(1-月,2-季度,3-半年,4-年)',\n    next_bill_date DATETIME COMMENT '下次账单日期',\n    discount_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '折扣金额',\n    tax_rate DECIMAL(5,4) DEFAULT 0.0000 COMMENT '税率',\n    tax_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '税额',\n    final_amount DECIMAL(15,2) NOT NULL COMMENT '最终金额',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_bill_number (tenant_id, bill_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_bill_type (bill_type),\n    INDEX idx_bill_status (bill_status),\n    INDEX idx_case_id (case_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_bill_date (bill_date),\n    INDEX idx_due_date (due_date),\n    INDEX idx_lawyer_id (lawyer_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='账单信息表';\n\n-- ======================= 预算管理表 =======================\n\n-- finance_budget表（预算计划表）\nDROP TABLE IF EXISTS finance_budget;\nCREATE TABLE finance_budget (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '预算ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    budget_number VARCHAR(50) NOT NULL COMMENT '预算编号',\n    budget_name VARCHAR(100) NOT NULL COMMENT '预算名称',\n    budget_type TINYINT DEFAULT 1 COMMENT '预算类型(1-部门预算,2-项目预算,3-年度预算,4-季度预算,5-月度预算)',\n    budget_status TINYINT DEFAULT 1 COMMENT '预算状态(1-草稿,2-已审批,3-执行中,4-已完成,5-已取消)',\n    budget_year YEAR NOT NULL COMMENT '预算年度',\n    budget_period TINYINT DEFAULT 1 COMMENT '预算期间(1-年度,2-半年,3-季度,4-月度)',\n    start_date DATE NOT NULL COMMENT '开始日期',\n    end_date DATE NOT NULL COMMENT '结束日期',\n    department_id BIGINT COMMENT '部门ID',\n    project_id BIGINT COMMENT '项目ID',\n    total_budget DECIMAL(15,2) NOT NULL COMMENT '预算总额',\n    used_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '已使用金额',\n    remaining_amount DECIMAL(15,2) DEFAULT 0.00 COMMENT '剩余金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    approver_id BIGINT COMMENT '审批人ID',\n    approval_time DATETIME COMMENT '审批时间',\n    manager_id BIGINT COMMENT '预算负责人ID',\n    description TEXT COMMENT '预算描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_budget_number (tenant_id, budget_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_budget_type (budget_type),\n    INDEX idx_budget_status (budget_status),\n    INDEX idx_budget_year (budget_year),\n    INDEX idx_department_id (department_id),\n    INDEX idx_project_id (project_id),\n    INDEX idx_start_date (start_date),\n    INDEX idx_end_date (end_date),\n    INDEX idx_manager_id (manager_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='预算计划表';\n\n-- ======================= 收支管理表 =======================\n\n-- finance_income表（收入记录表）\nDROP TABLE IF EXISTS finance_income;\nCREATE TABLE finance_income (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '收入ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    income_number VARCHAR(50) NOT NULL COMMENT '收入编号',\n    income_type TINYINT DEFAULT 1 COMMENT '收入类型(1-案件收入,2-顾问收入,3-代理收入,4-利息收入,5-其他收入)',\n    income_status TINYINT DEFAULT 1 COMMENT '收入状态(1-已确认,2-已入账,3-已对账)',\n    amount DECIMAL(15,2) NOT NULL COMMENT '收入金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    income_date DATETIME NOT NULL COMMENT '收入日期',\n    case_id BIGINT COMMENT '关联案件ID',\n    contract_id BIGINT COMMENT '关联合同ID',\n    client_id BIGINT COMMENT '客户ID',\n    account_id BIGINT COMMENT '收款账户ID',\n    transaction_id BIGINT COMMENT '关联交易ID',\n    invoice_id BIGINT COMMENT '关联发票ID',\n    department_id BIGINT COMMENT '部门ID',\n    lawyer_id BIGINT COMMENT '负责律师ID',\n    income_source VARCHAR(100) COMMENT '收入来源',\n    description TEXT COMMENT '收入描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_income_number (tenant_id, income_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_income_type (income_type),\n    INDEX idx_income_status (income_status),\n    INDEX idx_income_date (income_date),\n    INDEX idx_case_id (case_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_account_id (account_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_lawyer_id (lawyer_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_finance_income_account FOREIGN KEY (account_id) REFERENCES finance_account(id),\n    CONSTRAINT fk_finance_income_transaction FOREIGN KEY (transaction_id) REFERENCES finance_transaction(id),\n    CONSTRAINT fk_finance_income_invoice FOREIGN KEY (invoice_id) REFERENCES finance_invoice(id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='收入记录表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 16856
    },
    {
      "path": "law-firm-modules\\law-firm-finance\\src\\main\\resources\\META-INF\\db\\migration\\V10002__init_finance_data.sql",
      "filename": "V10002__init_finance_data.sql",
      "version": 10002,
      "module": "law-firm-modules",
      "content": "-- 财务管理模块基础数据\n-- 版本: V10002\n-- 模块: 财务管理模块 (V10000-V10999)\n-- 创建时间: 2023-06-01\n-- 说明: 财务管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 财务相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('账户类型', 'finance_account_type', 1, 'system', NOW(), '财务账户类型字典'),\n('账户状态', 'finance_account_status', 1, 'system', NOW(), '财务账户状态字典'),\n('币种', 'finance_currency', 1, 'system', NOW(), '财务币种字典'),\n('交易类型', 'finance_transaction_type', 1, 'system', NOW(), '财务交易类型字典'),\n('交易状态', 'finance_transaction_status', 1, 'system', NOW(), '财务交易状态字典'),\n('付款方式', 'finance_payment_method', 1, 'system', NOW(), '财务付款方式字典'),\n('审批状态', 'finance_approval_status', 1, 'system', NOW(), '财务审批状态字典'),\n('发票类型', 'finance_invoice_type', 1, 'system', NOW(), '财务发票类型字典'),\n('发票状态', 'finance_invoice_status', 1, 'system', NOW(), '财务发票状态字典'),\n('应收状态', 'finance_receivable_status', 1, 'system', NOW(), '财务应收状态字典'),\n('催收状态', 'finance_collection_status', 1, 'system', NOW(), '财务催收状态字典'),\n('账单类型', 'finance_bill_type', 1, 'system', NOW(), '财务账单类型字典'),\n('账单状态', 'finance_bill_status', 1, 'system', NOW(), '财务账单状态字典'),\n('预算类型', 'finance_budget_type', 1, 'system', NOW(), '财务预算类型字典'),\n('预算状态', 'finance_budget_status', 1, 'system', NOW(), '财务预算状态字典'),\n('收入类型', 'finance_income_type', 1, 'system', NOW(), '财务收入类型字典'),\n('收入状态', 'finance_income_status', 1, 'system', NOW(), '财务收入状态字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 账户类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '现金账户', '1', 'finance_account_type', '', 'primary', 'Y', 1, 'system', NOW(), '现金账户'),\n(2, '银行账户', '2', 'finance_account_type', '', 'success', 'N', 1, 'system', NOW(), '银行账户'),\n(3, '支付宝账户', '3', 'finance_account_type', '', 'info', 'N', 1, 'system', NOW(), '支付宝账户'),\n(4, '微信账户', '4', 'finance_account_type', '', 'warning', 'N', 1, 'system', NOW(), '微信账户'),\n(5, '虚拟账户', '5', 'finance_account_type', '', 'default', 'N', 1, 'system', NOW(), '虚拟账户'),\n(6, '信用账户', '6', 'finance_account_type', '', 'danger', 'N', 1, 'system', NOW(), '信用账户');\n\n-- 账户状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '正常', '1', 'finance_account_status', '', 'success', 'Y', 1, 'system', NOW(), '账户状态正常'),\n(2, '冻结', '2', 'finance_account_status', '', 'warning', 'N', 1, 'system', NOW(), '账户已冻结'),\n(3, '注销', '3', 'finance_account_status', '', 'danger', 'N', 1, 'system', NOW(), '账户已注销'),\n(4, '锁定', '4', 'finance_account_status', '', 'dark', 'N', 1, 'system', NOW(), '账户已锁定');\n\n-- 币种\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '人民币', 'CNY', 'finance_currency', '', 'primary', 'Y', 1, 'system', NOW(), '人民币'),\n(2, '美元', 'USD', 'finance_currency', '', 'success', 'N', 1, 'system', NOW(), '美元'),\n(3, '欧元', 'EUR', 'finance_currency', '', 'info', 'N', 1, 'system', NOW(), '欧元'),\n(4, '英镑', 'GBP', 'finance_currency', '', 'warning', 'N', 1, 'system', NOW(), '英镑'),\n(5, '日元', 'JPY', 'finance_currency', '', 'default', 'N', 1, 'system', NOW(), '日元'),\n(6, '港币', 'HKD', 'finance_currency', '', 'dark', 'N', 1, 'system', NOW(), '港币');\n\n-- 交易类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '收款', '1', 'finance_transaction_type', '', 'success', 'N', 1, 'system', NOW(), '收款交易'),\n(2, '付款', '2', 'finance_transaction_type', '', 'danger', 'N', 1, 'system', NOW(), '付款交易'),\n(3, '转账', '3', 'finance_transaction_type', '', 'primary', 'Y', 1, 'system', NOW(), '转账交易'),\n(4, '退款', '4', 'finance_transaction_type', '', 'warning', 'N', 1, 'system', NOW(), '退款交易'),\n(5, '预付款', '5', 'finance_transaction_type', '', 'info', 'N', 1, 'system', NOW(), '预付款交易'),\n(6, '押金', '6', 'finance_transaction_type', '', 'dark', 'N', 1, 'system', NOW(), '押金交易'),\n(7, '调整', '7', 'finance_transaction_type', '', 'secondary', 'N', 1, 'system', NOW(), '调整交易');\n\n-- 交易状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待处理', '1', 'finance_transaction_status', '', 'warning', 'Y', 1, 'system', NOW(), '交易待处理'),\n(2, '处理中', '2', 'finance_transaction_status', '', 'info', 'N', 1, 'system', NOW(), '交易处理中'),\n(3, '成功', '3', 'finance_transaction_status', '', 'success', 'N', 1, 'system', NOW(), '交易成功'),\n(4, '失败', '4', 'finance_transaction_status', '', 'danger', 'N', 1, 'system', NOW(), '交易失败'),\n(5, '取消', '5', 'finance_transaction_status', '', 'dark', 'N', 1, 'system', NOW(), '交易取消');\n\n-- 付款方式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '银行转账', '1', 'finance_payment_method', '', 'primary', 'Y', 1, 'system', NOW(), '银行转账'),\n(2, '现金支付', '2', 'finance_payment_method', '', 'success', 'N', 1, 'system', NOW(), '现金支付'),\n(3, '支票', '3', 'finance_payment_method', '', 'info', 'N', 1, 'system', NOW(), '支票支付'),\n(4, '支付宝', '4', 'finance_payment_method', '', 'warning', 'N', 1, 'system', NOW(), '支付宝支付'),\n(5, '微信支付', '5', 'finance_payment_method', '', 'dark', 'N', 1, 'system', NOW(), '微信支付'),\n(6, '抵扣', '6', 'finance_payment_method', '', 'secondary', 'N', 1, 'system', NOW(), '抵扣支付');\n\n-- 审批状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '无需审批', '1', 'finance_approval_status', '', 'success', 'Y', 1, 'system', NOW(), '无需审批'),\n(2, '待审批', '2', 'finance_approval_status', '', 'warning', 'N', 1, 'system', NOW(), '待审批'),\n(3, '已审批', '3', 'finance_approval_status', '', 'primary', 'N', 1, 'system', NOW(), '已审批'),\n(4, '已拒绝', '4', 'finance_approval_status', '', 'danger', 'N', 1, 'system', NOW(), '已拒绝');\n\n-- 发票类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '增值税专用发票', '1', 'finance_invoice_type', '', 'primary', 'Y', 1, 'system', NOW(), '增值税专用发票'),\n(2, '增值税普通发票', '2', 'finance_invoice_type', '', 'success', 'N', 1, 'system', NOW(), '增值税普通发票'),\n(3, '电子发票', '3', 'finance_invoice_type', '', 'info', 'N', 1, 'system', NOW(), '电子发票'),\n(4, '普通收据', '4', 'finance_invoice_type', '', 'warning', 'N', 1, 'system', NOW(), '普通收据');\n\n-- 发票状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待开票', '1', 'finance_invoice_status', '', 'warning', 'Y', 1, 'system', NOW(), '待开票'),\n(2, '已开票', '2', 'finance_invoice_status', '', 'primary', 'N', 1, 'system', NOW(), '已开票'),\n(3, '已作废', '3', 'finance_invoice_status', '', 'danger', 'N', 1, 'system', NOW(), '已作废'),\n(4, '已寄出', '4', 'finance_invoice_status', '', 'info', 'N', 1, 'system', NOW(), '已寄出'),\n(5, '已签收', '5', 'finance_invoice_status', '', 'success', 'N', 1, 'system', NOW(), '已签收');\n\n-- 应收状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待收款', '1', 'finance_receivable_status', '', 'warning', 'Y', 1, 'system', NOW(), '待收款'),\n(2, '部分收款', '2', 'finance_receivable_status', '', 'info', 'N', 1, 'system', NOW(), '部分收款'),\n(3, '已收款', '3', 'finance_receivable_status', '', 'success', 'N', 1, 'system', NOW(), '已收款'),\n(4, '逾期', '4', 'finance_receivable_status', '', 'danger', 'N', 1, 'system', NOW(), '逾期应收'),\n(5, '坏账', '5', 'finance_receivable_status', '', 'dark', 'N', 1, 'system', NOW(), '坏账');\n\n-- 催收状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '无需催收', '1', 'finance_collection_status', '', 'success', 'Y', 1, 'system', NOW(), '无需催收'),\n(2, '待催收', '2', 'finance_collection_status', '', 'warning', 'N', 1, 'system', NOW(), '待催收'),\n(3, '催收中', '3', 'finance_collection_status', '', 'info', 'N', 1, 'system', NOW(), '催收中'),\n(4, '催收完成', '4', 'finance_collection_status', '', 'primary', 'N', 1, 'system', NOW(), '催收完成');\n\n-- 账单类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '律师费', '1', 'finance_bill_type', '', 'primary', 'Y', 1, 'system', NOW(), '律师费账单'),\n(2, '诉讼费', '2', 'finance_bill_type', '', 'success', 'N', 1, 'system', NOW(), '诉讼费账单'),\n(3, '顾问费', '3', 'finance_bill_type', '', 'info', 'N', 1, 'system', NOW(), '顾问费账单'),\n(4, '代理费', '4', 'finance_bill_type', '', 'warning', 'N', 1, 'system', NOW(), '代理费账单'),\n(5, '综合账单', '5', 'finance_bill_type', '', 'dark', 'N', 1, 'system', NOW(), '综合账单');\n\n-- 账单状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'finance_bill_status', '', 'secondary', 'Y', 1, 'system', NOW(), '账单草稿'),\n(2, '已确认', '2', 'finance_bill_status', '', 'primary', 'N', 1, 'system', NOW(), '账单已确认'),\n(3, '已发送', '3', 'finance_bill_status', '', 'info', 'N', 1, 'system', NOW(), '账单已发送'),\n(4, '部分付款', '4', 'finance_bill_status', '', 'warning', 'N', 1, 'system', NOW(), '部分付款'),\n(5, '已付款', '5', 'finance_bill_status', '', 'success', 'N', 1, 'system', NOW(), '已付款'),\n(6, '已取消', '6', 'finance_bill_status', '', 'dark', 'N', 1, 'system', NOW(), '已取消'),\n(7, '逾期', '7', 'finance_bill_status', '', 'danger', 'N', 1, 'system', NOW(), '逾期账单');\n\n-- 预算类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '部门预算', '1', 'finance_budget_type', '', 'primary', 'Y', 1, 'system', NOW(), '部门预算'),\n(2, '项目预算', '2', 'finance_budget_type', '', 'success', 'N', 1, 'system', NOW(), '项目预算'),\n(3, '年度预算', '3', 'finance_budget_type', '', 'info', 'N', 1, 'system', NOW(), '年度预算'),\n(4, '季度预算', '4', 'finance_budget_type', '', 'warning', 'N', 1, 'system', NOW(), '季度预算'),\n(5, '月度预算', '5', 'finance_budget_type', '', 'dark', 'N', 1, 'system', NOW(), '月度预算');\n\n-- 预算状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'finance_budget_status', '', 'secondary', 'Y', 1, 'system', NOW(), '预算草稿'),\n(2, '已审批', '2', 'finance_budget_status', '', 'primary', 'N', 1, 'system', NOW(), '预算已审批'),\n(3, '执行中', '3', 'finance_budget_status', '', 'info', 'N', 1, 'system', NOW(), '预算执行中'),\n(4, '已完成', '4', 'finance_budget_status', '', 'success', 'N', 1, 'system', NOW(), '预算已完成'),\n(5, '已取消', '5', 'finance_budget_status', '', 'danger', 'N', 1, 'system', NOW(), '预算已取消');\n\n-- 收入类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '案件收入', '1', 'finance_income_type', '', 'primary', 'Y', 1, 'system', NOW(), '案件收入'),\n(2, '顾问收入', '2', 'finance_income_type', '', 'success', 'N', 1, 'system', NOW(), '顾问收入'),\n(3, '代理收入', '3', 'finance_income_type', '', 'info', 'N', 1, 'system', NOW(), '代理收入'),\n(4, '利息收入', '4', 'finance_income_type', '', 'warning', 'N', 1, 'system', NOW(), '利息收入'),\n(5, '其他收入', '5', 'finance_income_type', '', 'dark', 'N', 1, 'system', NOW(), '其他收入');\n\n-- 收入状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '已确认', '1', 'finance_income_status', '', 'primary', 'Y', 1, 'system', NOW(), '收入已确认'),\n(2, '已入账', '2', 'finance_income_status', '', 'success', 'N', 1, 'system', NOW(), '收入已入账'),\n(3, '已对账', '3', 'finance_income_status', '', 'info', 'N', 1, 'system', NOW(), '收入已对账');\n\n-- ======================= 初始账户数据 =======================\n\n-- 初始化系统默认账户\nINSERT INTO finance_account (tenant_id, account_number, account_name, account_type, account_status, currency, balance, available_amount, is_default, is_enabled, create_by, create_time, remark) VALUES\n(0, 'ACCT-01-2023-0001', '系统现金账户', 1, 1, 'CNY', 0.00, 0.00, 1, 1, 'system', NOW(), '系统默认现金账户'),\n(0, 'ACCT-02-2023-0001', '系统银行账户', 2, 1, 'CNY', 0.00, 0.00, 0, 1, 'system', NOW(), '系统默认银行账户'),\n(0, 'ACCT-05-2023-0001', '系统虚拟账户', 5, 1, 'CNY', 0.00, 0.00, 0, 1, 'system', NOW(), '系统虚拟账户，用于内部核算');\n\n-- 初始化完成提示\nSELECT '财务管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建字典类型：', COUNT(*), '个') AS dict_type_count FROM sys_dict_type WHERE dict_type LIKE 'finance_%';\nSELECT CONCAT('已创建字典数据：', COUNT(*), '个') AS dict_data_count FROM sys_dict_data WHERE dict_type LIKE 'finance_%';\nSELECT CONCAT('已创建初始账户：', COUNT(*), '个') AS account_count FROM finance_account WHERE tenant_id = 0; ",
      "size": 12926
    },
    {
      "path": "law-firm-modules\\law-firm-evidence\\src\\main\\resources\\META-INF\\db\\migration\\V9000__evidence_module_description.sql",
      "filename": "V9000__evidence_module_description.sql",
      "version": 9000,
      "module": "law-firm-modules",
      "content": "-- 证据管理模块说明\n-- 版本: V9000\n-- 模块: 证据管理模块 (V9000-V9999)\n-- 创建时间: 2023-06-01\n-- 说明: 证据管理功能模块架构说明\n\n/*\n=============================================================================\n                            证据管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n证据管理模块负责律师事务所的证据全生命周期管理，包括：\n- 证据信息管理\n- 证据分类管理\n- 证据收集管理\n- 证据质证管理\n- 证据保全管理\n- 证据链管理\n- 证据追踪管理\n- 证据关联管理\n\n二、版本规划 (V9000-V9999)\n- V9000: 模块说明文档\n- V9001: 表结构定义\n- V9002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 证据基础管理\n   - evidence_info: 证据基本信息\n   - evidence_file: 证据文件管理\n   - evidence_category: 证据分类管理\n\n2. 证据分类标签\n   - evidence_label: 证据标签\n   - evidence_label_relation: 证据标签关联\n\n3. 证据业务关联\n   - evidence_case_relation: 案件证据关联\n   - evidence_fact_relation: 证据事实关联\n   - evidence_person_relation: 证据人员关联\n\n4. 证据质证管理\n   - evidence_challenge: 证据质证记录\n   - evidence_review: 证据审查记录\n   - evidence_authentication: 证据认证记录\n\n5. 证据保全管理\n   - evidence_preservation: 证据保全记录\n   - evidence_chain: 证据链记录\n   - evidence_custody: 证据保管记录\n\n6. 证据操作记录\n   - evidence_operation_log: 证据操作日志\n   - evidence_trace: 证据追踪记录\n   - evidence_timeline: 证据时间线\n\n四、数据关系\n=============================================================================\n- evidence_info → evidence_file (证据文件)\n- evidence_info → evidence_category (证据分类)\n- evidence_info → evidence_label_relation → evidence_label (证据标签)\n- evidence_info → evidence_case_relation (案件关联)\n- evidence_info → evidence_fact_relation (事实关联)\n- evidence_info → evidence_person_relation (人员关联)\n- evidence_info → evidence_challenge (质证记录)\n- evidence_info → evidence_review (审查记录)\n- evidence_info → evidence_authentication (认证记录)\n- evidence_info → evidence_preservation (保全记录)\n- evidence_info → evidence_chain (证据链)\n- evidence_info → evidence_custody (保管记录)\n- evidence_info → evidence_operation_log (操作记录)\n- evidence_info → evidence_trace (追踪记录)\n- evidence_info → evidence_timeline (时间线)\n\n五、业务特点\n=============================================================================\n1. 证据链管理\n   - 完整的证据收集、保管、使用链条\n   - 证据来源的可追溯性\n   - 证据完整性和真实性保障\n\n2. 质证管理\n   - 证据质证过程记录\n   - 质证意见和结果管理\n   - 证据效力评估\n\n3. 保全管理\n   - 证据保全申请和执行\n   - 证据保管条件和环境\n   - 证据防篡改措施\n\n4. 关联管理\n   - 证据与案件的关联\n   - 证据与事实的关联\n   - 证据与人员的关联\n\n六、权限设计\n=============================================================================\n证据管理功能权限控制：\n- 证据查看: EVIDENCE_VIEW\n- 证据管理: EVIDENCE_MANAGE\n- 证据收集: EVIDENCE_COLLECT\n- 证据质证: EVIDENCE_CHALLENGE\n- 证据审查: EVIDENCE_REVIEW\n- 证据保全: EVIDENCE_PRESERVE\n- 证据认证: EVIDENCE_AUTH\n- 证据统计: EVIDENCE_STATISTICS\n\n七、注意事项\n=============================================================================\n1. 证据数据涉及案件机密，需严格权限控制\n2. 证据收集需要完整的过程记录和证据链\n3. 证据保全需要符合法律程序要求\n4. 证据质证需要完整的对抗记录\n5. 证据存储需要防篡改和备份机制\n6. 证据检索需要支持多维度快速查找\n7. 证据统计需要支持多种维度分析\n\n八、证据分类标准\n=============================================================================\n1. 按证据形式分类:\n   - 书证: 合同、协议、凭证等\n   - 物证: 实物、样品等\n   - 证人证言: 当事人陈述、证人证言\n   - 视听资料: 录音录像、照片等\n   - 电子数据: 电子邮件、网页、数据库等\n\n2. 按证据来源分类:\n   - 当事人提供\n   - 法院调取\n   - 律师调查收集\n   - 公安机关移送\n   - 其他途径获得\n\n3. 按证据性质分类:\n   - 直接证据\n   - 间接证据\n   - 原始证据\n   - 传来证据\n\n九、证据编号规则\n=============================================================================\n证据编号格式：ZJ-YYYY-案件类型-流水号\n- ZJ: 证据(ZhengJu)前缀\n- YYYY: 年份\n- 案件类型: 01-民事, 02-刑事, 03-行政, 04-其他\n- 流水号: 4位数字，从0001开始\n\n十、质证标准\n=============================================================================\n1. 真实性质证:\n   - 证据来源是否真实\n   - 证据内容是否真实\n   - 证据形成过程是否真实\n\n2. 关联性质证:\n   - 证据与案件事实的关联度\n   - 证据的证明力强弱\n   - 证据的证明范围\n\n3. 合法性质证:\n   - 证据收集程序是否合法\n   - 证据形式是否符合法律规定\n   - 证据是否存在瑕疵\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 证据管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '证据管理模块说明文档已加载' AS message; ",
      "size": 3882
    },
    {
      "path": "law-firm-modules\\law-firm-evidence\\src\\main\\resources\\META-INF\\db\\migration\\V9001__init_evidence_tables.sql",
      "filename": "V9001__init_evidence_tables.sql",
      "version": 9001,
      "module": "law-firm-modules",
      "content": "-- 证据管理模块表结构\n-- 版本: V9001\n-- 模块: 证据管理模块 (V9000-V9999)\n-- 创建时间: 2023-06-01\n-- 说明: 证据管理功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 证据基础管理表 =======================\n\n-- evidence_info表（证据基本信息表）\nDROP TABLE IF EXISTS evidence_info;\nCREATE TABLE evidence_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '证据ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    evidence_number VARCHAR(50) NOT NULL COMMENT '证据编号',\n    evidence_name VARCHAR(200) NOT NULL COMMENT '证据名称',\n    evidence_description TEXT COMMENT '证据描述',\n    evidence_type TINYINT DEFAULT 1 COMMENT '证据类型(1-书证,2-物证,3-证人证言,4-视听资料,5-电子数据)',\n    evidence_nature TINYINT DEFAULT 1 COMMENT '证据性质(1-直接证据,2-间接证据,3-原始证据,4-传来证据)',\n    evidence_source TINYINT DEFAULT 1 COMMENT '证据来源(1-当事人提供,2-法院调取,3-律师调查,4-公安移送,5-其他)',\n    source_desc VARCHAR(500) COMMENT '来源描述',\n    category_id BIGINT COMMENT '证据分类ID',\n    case_id BIGINT COMMENT '关联案件ID',\n    case_number VARCHAR(50) COMMENT '案件编号',\n    collector_id BIGINT COMMENT '收集人ID',\n    collector_name VARCHAR(50) COMMENT '收集人姓名',\n    collect_time DATETIME COMMENT '收集时间',\n    collect_location VARCHAR(200) COMMENT '收集地点',\n    collect_method VARCHAR(200) COMMENT '收集方式',\n    custodian_id BIGINT COMMENT '保管人ID',\n    custodian_name VARCHAR(50) COMMENT '保管人姓名',\n    custody_location VARCHAR(200) COMMENT '保管位置',\n    proof_matter TEXT COMMENT '证明事项',\n    proof_level TINYINT DEFAULT 1 COMMENT '证明力等级(1-强,2-较强,3-一般,4-较弱,5-弱)',\n    evidence_status TINYINT DEFAULT 1 COMMENT '证据状态(1-收集中,2-已收集,3-已质证,4-已认定,5-已归档)',\n    is_original TINYINT DEFAULT 0 COMMENT '是否原件(0-否,1-是)',\n    is_preserved TINYINT DEFAULT 0 COMMENT '是否已保全(0-否,1-是)',\n    is_challenged TINYINT DEFAULT 0 COMMENT '是否被质证(0-否,1-是)',\n    is_authenticated TINYINT DEFAULT 0 COMMENT '是否已认证(0-否,1-是)',\n    authentication_result TINYINT COMMENT '认证结果(1-有效,2-无效,3-部分有效)',\n    file_count INT DEFAULT 0 COMMENT '文件数量',\n    keywords VARCHAR(500) COMMENT '关键词',\n    chain_id VARCHAR(100) COMMENT '证据链ID',\n    hash_value VARCHAR(64) COMMENT '哈希值',\n    expire_time DATETIME COMMENT '过期时间',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    tags JSON COMMENT '证据标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_evidence_number (tenant_id, evidence_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_evidence_name (evidence_name),\n    INDEX idx_evidence_type (evidence_type),\n    INDEX idx_evidence_nature (evidence_nature),\n    INDEX idx_evidence_source (evidence_source),\n    INDEX idx_category_id (category_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_collector_id (collector_id),\n    INDEX idx_custodian_id (custodian_id),\n    INDEX idx_collect_time (collect_time),\n    INDEX idx_evidence_status (evidence_status),\n    INDEX idx_proof_level (proof_level),\n    INDEX idx_is_original (is_original),\n    INDEX idx_is_preserved (is_preserved),\n    INDEX idx_is_challenged (is_challenged),\n    INDEX idx_is_authenticated (is_authenticated),\n    INDEX idx_chain_id (chain_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据基本信息表';\n\n-- evidence_file表（证据文件表）\nDROP TABLE IF EXISTS evidence_file;\nCREATE TABLE evidence_file (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    evidence_id BIGINT NOT NULL COMMENT '证据ID',\n    file_name VARCHAR(200) NOT NULL COMMENT '文件名称',\n    file_type TINYINT DEFAULT 1 COMMENT '文件类型(1-原件,2-复印件,3-扫描件,4-电子件)',\n    file_format VARCHAR(50) COMMENT '文件格式',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_pages INT DEFAULT 0 COMMENT '文件页数',\n    file_md5 VARCHAR(32) COMMENT '文件MD5',\n    file_sha256 VARCHAR(64) COMMENT '文件SHA256',\n    is_original TINYINT DEFAULT 0 COMMENT '是否原件(0-否,1-是)',\n    is_encrypted TINYINT DEFAULT 0 COMMENT '是否加密(0-否,1-是)',\n    encryption_type VARCHAR(20) COMMENT '加密方式',\n    timestamp_info JSON COMMENT '时间戳信息(JSON格式)',\n    quality_level TINYINT DEFAULT 1 COMMENT '质量等级(1-高,2-中,3-低)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    description VARCHAR(500) COMMENT '文件描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_evidence_id (evidence_id),\n    INDEX idx_file_name (file_name),\n    INDEX idx_file_type (file_type),\n    INDEX idx_is_original (is_original),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_evidence_file_evidence FOREIGN KEY (evidence_id) REFERENCES evidence_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据文件表';\n\n-- evidence_category表（证据分类表）\nDROP TABLE IF EXISTS evidence_category;\nCREATE TABLE evidence_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(100) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    parent_id BIGINT DEFAULT 0 COMMENT '父分类ID',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    category_path VARCHAR(500) COMMENT '分类路径',\n    description VARCHAR(500) COMMENT '分类描述',\n    evidence_count INT DEFAULT 0 COMMENT '证据数量',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统分类(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_category_name (category_name),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据分类表';\n\n-- ======================= 证据分类标签表 =======================\n\n-- evidence_label表（证据标签表）\nDROP TABLE IF EXISTS evidence_label;\nCREATE TABLE evidence_label (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    label_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    label_code VARCHAR(50) NOT NULL COMMENT '标签编码',\n    label_type TINYINT DEFAULT 1 COMMENT '标签类型(1-业务标签,2-状态标签,3-优先级标签,4-自定义标签)',\n    label_category VARCHAR(50) COMMENT '标签分类',\n    color VARCHAR(20) COMMENT '标签颜色',\n    icon VARCHAR(100) COMMENT '标签图标',\n    description VARCHAR(200) COMMENT '标签描述',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统标签(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_label_code (tenant_id, label_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_label_name (label_name),\n    INDEX idx_label_type (label_type),\n    INDEX idx_label_category (label_category),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据标签表';\n\n-- evidence_label_relation表（证据标签关联表）\nDROP TABLE IF EXISTS evidence_label_relation;\nCREATE TABLE evidence_label_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    evidence_id BIGINT NOT NULL COMMENT '证据ID',\n    label_id BIGINT NOT NULL COMMENT '标签ID',\n    label_value VARCHAR(200) COMMENT '标签值',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_evidence_label (evidence_id, label_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_evidence_id (evidence_id),\n    INDEX idx_label_id (label_id),\n    \n    CONSTRAINT fk_evidence_label_relation_evidence FOREIGN KEY (evidence_id) REFERENCES evidence_info(id) ON DELETE CASCADE,\n    CONSTRAINT fk_evidence_label_relation_label FOREIGN KEY (label_id) REFERENCES evidence_label(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据标签关联表';\n\n-- ======================= 证据质证管理表 =======================\n\n-- evidence_challenge表（证据质证记录表）\nDROP TABLE IF EXISTS evidence_challenge;\nCREATE TABLE evidence_challenge (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '质证ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    evidence_id BIGINT NOT NULL COMMENT '证据ID',\n    challenger_id BIGINT COMMENT '质证人ID',\n    challenger_name VARCHAR(50) COMMENT '质证人姓名',\n    challenger_type TINYINT DEFAULT 1 COMMENT '质证人类型(1-对方当事人,2-对方律师,3-第三人,4-其他)',\n    challenge_time DATETIME COMMENT '质证时间',\n    challenge_reason TEXT COMMENT '质证理由',\n    challenge_opinion TEXT COMMENT '质证意见',\n    challenge_result TINYINT COMMENT '质证结果(1-有效,2-无效,3-部分有效,4-待定)',\n    response_opinion TEXT COMMENT '答辩意见',\n    judge_opinion TEXT COMMENT '法官意见',\n    final_conclusion TEXT COMMENT '最终结论',\n    attachment_files JSON COMMENT '附件文件(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_evidence_id (evidence_id),\n    INDEX idx_challenger_id (challenger_id),\n    INDEX idx_challenge_time (challenge_time),\n    INDEX idx_challenge_result (challenge_result),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_evidence_challenge_evidence FOREIGN KEY (evidence_id) REFERENCES evidence_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据质证记录表';\n\n-- ======================= 证据保全管理表 =======================\n\n-- evidence_preservation表（证据保全记录表）\nDROP TABLE IF EXISTS evidence_preservation;\nCREATE TABLE evidence_preservation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '保全ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    preservation_number VARCHAR(50) NOT NULL COMMENT '保全编号',\n    evidence_id BIGINT NOT NULL COMMENT '证据ID',\n    preservation_type TINYINT DEFAULT 1 COMMENT '保全类型(1-诉前保全,2-诉中保全,3-执行保全)',\n    preservation_method TINYINT DEFAULT 1 COMMENT '保全方式(1-查封,2-扣押,3-冻结,4-其他)',\n    applicant_id BIGINT COMMENT '申请人ID',\n    applicant_name VARCHAR(50) COMMENT '申请人姓名',\n    apply_time DATETIME COMMENT '申请时间',\n    apply_reason TEXT COMMENT '申请理由',\n    court_name VARCHAR(100) COMMENT '执行法院',\n    judge_name VARCHAR(50) COMMENT '执行法官',\n    preservation_time DATETIME COMMENT '保全时间',\n    preservation_location VARCHAR(200) COMMENT '保全地点',\n    preservation_desc TEXT COMMENT '保全描述',\n    preservation_status TINYINT DEFAULT 1 COMMENT '保全状态(1-申请中,2-已保全,3-已解除,4-已失效)',\n    expire_time DATETIME COMMENT '失效时间',\n    release_time DATETIME COMMENT '解除时间',\n    release_reason VARCHAR(500) COMMENT '解除原因',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_preservation_number (tenant_id, preservation_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_evidence_id (evidence_id),\n    INDEX idx_preservation_type (preservation_type),\n    INDEX idx_applicant_id (applicant_id),\n    INDEX idx_apply_time (apply_time),\n    INDEX idx_preservation_status (preservation_status),\n    INDEX idx_expire_time (expire_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_evidence_preservation_evidence FOREIGN KEY (evidence_id) REFERENCES evidence_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='证据保全记录表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 13828
    },
    {
      "path": "law-firm-modules\\law-firm-evidence\\src\\main\\resources\\META-INF\\db\\migration\\V9002__init_evidence_data.sql",
      "filename": "V9002__init_evidence_data.sql",
      "version": 9002,
      "module": "law-firm-modules",
      "content": "-- 证据管理模块基础数据\n-- 版本: V9002\n-- 模块: 证据管理模块 (V9000-V9999)\n-- 创建时间: 2023-06-01\n-- 说明: 证据管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 证据相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('证据类型', 'evidence_type', 1, 'system', NOW(), '证据类型字典'),\n('证据性质', 'evidence_nature', 1, 'system', NOW(), '证据性质字典'),\n('证据来源', 'evidence_source', 1, 'system', NOW(), '证据来源字典'),\n('证据状态', 'evidence_status', 1, 'system', NOW(), '证据状态字典'),\n('证明力等级', 'proof_level', 1, 'system', NOW(), '证明力等级字典'),\n('质证人类型', 'challenger_type', 1, 'system', NOW(), '质证人类型字典'),\n('质证结果', 'challenge_result', 1, 'system', NOW(), '质证结果字典'),\n('认证结果', 'authentication_result', 1, 'system', NOW(), '证据认证结果字典'),\n('保全类型', 'preservation_type', 1, 'system', NOW(), '证据保全类型字典'),\n('保全方式', 'preservation_method', 1, 'system', NOW(), '证据保全方式字典'),\n('保全状态', 'preservation_status', 1, 'system', NOW(), '证据保全状态字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 证据类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '书证', '1', 'evidence_type', '', 'primary', 'Y', 1, 'system', NOW(), '书面证据'),\n(2, '物证', '2', 'evidence_type', '', 'success', 'N', 1, 'system', NOW(), '实物证据'),\n(3, '证人证言', '3', 'evidence_type', '', 'info', 'N', 1, 'system', NOW(), '证人提供的证言'),\n(4, '视听资料', '4', 'evidence_type', '', 'warning', 'N', 1, 'system', NOW(), '音视频等资料'),\n(5, '电子数据', '5', 'evidence_type', '', 'danger', 'N', 1, 'system', NOW(), '电子形式的数据');\n\n-- 证据性质\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '直接证据', '1', 'evidence_nature', '', 'primary', 'Y', 1, 'system', NOW(), '能够直接证明案件主要事实的证据'),\n(2, '间接证据', '2', 'evidence_nature', '', 'info', 'N', 1, 'system', NOW(), '不能单独直接证明案件主要事实的证据'),\n(3, '原始证据', '3', 'evidence_nature', '', 'success', 'N', 1, 'system', NOW(), '直接来源于案件事实的第一手资料'),\n(4, '传来证据', '4', 'evidence_nature', '', 'warning', 'N', 1, 'system', NOW(), '经过转述或复制的证据');\n\n-- 证据来源\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '当事人提供', '1', 'evidence_source', '', 'primary', 'Y', 1, 'system', NOW(), '由当事人主动提供'),\n(2, '法院调取', '2', 'evidence_source', '', 'success', 'N', 1, 'system', NOW(), '由法院依职权调取'),\n(3, '律师调查', '3', 'evidence_source', '', 'info', 'N', 1, 'system', NOW(), '律师调查收集'),\n(4, '公安移送', '4', 'evidence_source', '', 'warning', 'N', 1, 'system', NOW(), '公安机关移送'),\n(5, '其他途径', '5', 'evidence_source', '', 'dark', 'N', 1, 'system', NOW(), '其他合法途径获得');\n\n-- 证据状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '收集中', '1', 'evidence_status', '', 'warning', 'Y', 1, 'system', NOW(), '证据收集中'),\n(2, '已收集', '2', 'evidence_status', '', 'info', 'N', 1, 'system', NOW(), '证据已收集'),\n(3, '已质证', '3', 'evidence_status', '', 'primary', 'N', 1, 'system', NOW(), '证据已质证'),\n(4, '已认定', '4', 'evidence_status', '', 'success', 'N', 1, 'system', NOW(), '证据已被法院认定'),\n(5, '已归档', '5', 'evidence_status', '', 'default', 'N', 1, 'system', NOW(), '证据已归档');\n\n-- 证明力等级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '强', '1', 'proof_level', '', 'danger', 'N', 1, 'system', NOW(), '证明力强'),\n(2, '较强', '2', 'proof_level', '', 'warning', 'N', 1, 'system', NOW(), '证明力较强'),\n(3, '一般', '3', 'proof_level', '', 'primary', 'Y', 1, 'system', NOW(), '证明力一般'),\n(4, '较弱', '4', 'proof_level', '', 'info', 'N', 1, 'system', NOW(), '证明力较弱'),\n(5, '弱', '5', 'proof_level', '', 'secondary', 'N', 1, 'system', NOW(), '证明力弱');\n\n-- 质证人类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '对方当事人', '1', 'challenger_type', '', 'primary', 'Y', 1, 'system', NOW(), '对方当事人'),\n(2, '对方律师', '2', 'challenger_type', '', 'info', 'N', 1, 'system', NOW(), '对方律师'),\n(3, '第三人', '3', 'challenger_type', '', 'warning', 'N', 1, 'system', NOW(), '第三人'),\n(4, '其他', '4', 'challenger_type', '', 'dark', 'N', 1, 'system', NOW(), '其他质证人');\n\n-- 质证结果\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '有效', '1', 'challenge_result', '', 'success', 'N', 1, 'system', NOW(), '证据有效'),\n(2, '无效', '2', 'challenge_result', '', 'danger', 'N', 1, 'system', NOW(), '证据无效'),\n(3, '部分有效', '3', 'challenge_result', '', 'warning', 'N', 1, 'system', NOW(), '证据部分有效'),\n(4, '待定', '4', 'challenge_result', '', 'info', 'Y', 1, 'system', NOW(), '质证结果待定');\n\n-- 认证结果\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '有效', '1', 'authentication_result', '', 'success', 'N', 1, 'system', NOW(), '认证有效'),\n(2, '无效', '2', 'authentication_result', '', 'danger', 'N', 1, 'system', NOW(), '认证无效'),\n(3, '部分有效', '3', 'authentication_result', '', 'warning', 'N', 1, 'system', NOW(), '部分有效');\n\n-- 保全类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '诉前保全', '1', 'preservation_type', '', 'primary', 'Y', 1, 'system', NOW(), '诉讼前保全'),\n(2, '诉中保全', '2', 'preservation_type', '', 'success', 'N', 1, 'system', NOW(), '诉讼中保全'),\n(3, '执行保全', '3', 'preservation_type', '', 'warning', 'N', 1, 'system', NOW(), '执行程序中保全');\n\n-- 保全方式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '查封', '1', 'preservation_method', '', 'primary', 'Y', 1, 'system', NOW(), '查封保全'),\n(2, '扣押', '2', 'preservation_method', '', 'warning', 'N', 1, 'system', NOW(), '扣押保全'),\n(3, '冻结', '3', 'preservation_method', '', 'info', 'N', 1, 'system', NOW(), '冻结保全'),\n(4, '其他', '4', 'preservation_method', '', 'dark', 'N', 1, 'system', NOW(), '其他保全方式');\n\n-- 保全状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '申请中', '1', 'preservation_status', '', 'warning', 'Y', 1, 'system', NOW(), '保全申请中'),\n(2, '已保全', '2', 'preservation_status', '', 'success', 'N', 1, 'system', NOW(), '已执行保全'),\n(3, '已解除', '3', 'preservation_status', '', 'info', 'N', 1, 'system', NOW(), '保全已解除'),\n(4, '已失效', '4', 'preservation_status', '', 'danger', 'N', 1, 'system', NOW(), '保全已失效');\n\n-- ======================= 证据分类初始化 =======================\n\n-- 证据分类数据\nINSERT INTO evidence_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, create_by, create_time) VALUES\n-- 一级分类\n(0, '书证类', 'DOCUMENT_EVIDENCE', 0, 1, '/书证类', '书面形式的证据材料', 1, 1, 'system', NOW()),\n(0, '物证类', 'PHYSICAL_EVIDENCE', 0, 1, '/物证类', '实物形式的证据材料', 2, 1, 'system', NOW()),\n(0, '证言类', 'TESTIMONY_EVIDENCE', 0, 1, '/证言类', '证人证言和当事人陈述', 3, 1, 'system', NOW()),\n(0, '视听类', 'AUDIOVISUAL_EVIDENCE', 0, 1, '/视听类', '音频视频等视听资料', 4, 1, 'system', NOW()),\n(0, '电子类', 'ELECTRONIC_EVIDENCE', 0, 1, '/电子类', '电子数据形式的证据', 5, 1, 'system', NOW()),\n\n-- 书证类二级分类\n(0, '合同协议', 'CONTRACT_DOCUMENT', 1, 2, '/书证类/合同协议', '合同、协议等书证', 1, 1, 'system', NOW()),\n(0, '财务凭证', 'FINANCIAL_DOCUMENT', 1, 2, '/书证类/财务凭证', '发票、收据等财务凭证', 2, 1, 'system', NOW()),\n(0, '身份证明', 'IDENTITY_DOCUMENT', 1, 2, '/书证类/身份证明', '身份证、营业执照等身份证明', 3, 1, 'system', NOW()),\n\n-- 物证类二级分类\n(0, '产品样品', 'PRODUCT_SAMPLE', 2, 2, '/物证类/产品样品', '产品实物样品', 1, 1, 'system', NOW()),\n(0, '现场物品', 'SCENE_OBJECT', 2, 2, '/物证类/现场物品', '现场提取的物品', 2, 1, 'system', NOW()),\n\n-- 电子类二级分类\n(0, '电子邮件', 'EMAIL_EVIDENCE', 5, 2, '/电子类/电子邮件', '电子邮件往来记录', 1, 1, 'system', NOW()),\n(0, '网页截图', 'WEBPAGE_SCREENSHOT', 5, 2, '/电子类/网页截图', '网页内容截图', 2, 1, 'system', NOW()),\n(0, '聊天记录', 'CHAT_RECORD', 5, 2, '/电子类/聊天记录', '微信、QQ等聊天记录', 3, 1, 'system', NOW());\n\n-- ======================= 证据标签初始化 =======================\n\n-- 证据标签数据\nINSERT INTO evidence_label (tenant_id, label_name, label_code, label_type, label_category, color, description, sort_order, is_system, create_by, create_time) VALUES\n(0, '关键证据', 'KEY_EVIDENCE', 1, '重要性', '#ff4d4f', '关键性证据', 1, 1, 'system', NOW()),\n(0, '辅助证据', 'AUXILIARY_EVIDENCE', 1, '重要性', '#1890ff', '辅助性证据', 2, 1, 'system', NOW()),\n(0, '原件', 'ORIGINAL', 1, '形式', '#52c41a', '原始证据', 3, 1, 'system', NOW()),\n(0, '复印件', 'COPY', 1, '形式', '#faad14', '复印件证据', 4, 1, 'system', NOW()),\n(0, '已质证', 'CHALLENGED', 2, '状态', '#722ed1', '已完成质证', 5, 1, 'system', NOW()),\n(0, '未质证', 'NOT_CHALLENGED', 2, '状态', '#d9d9d9', '尚未质证', 6, 1, 'system', NOW()),\n(0, '有争议', 'DISPUTED', 2, '状态', '#fa8c16', '存在争议', 7, 1, 'system', NOW()),\n(0, '需保全', 'NEED_PRESERVATION', 3, '紧急程度', '#ff7a45', '需要保全', 8, 1, 'system', NOW()),\n(0, '已保全', 'PRESERVED', 2, '状态', '#13c2c2', '已执行保全', 9, 1, 'system', NOW()),\n(0, '机密', 'CONFIDENTIAL', 1, '安全级别', '#722ed1', '机密证据', 10, 1, 'system', NOW());\n\n-- 初始化完成提示\nSELECT '证据管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建证据分类：', COUNT(*), '个') AS category_count FROM evidence_category WHERE is_system = 1;\nSELECT CONCAT('已创建证据标签：', COUNT(*), '个') AS label_count FROM evidence_label WHERE is_system = 1; ",
      "size": 9465
    },
    {
      "path": "law-firm-modules\\law-firm-document\\src\\main\\resources\\META-INF\\db\\migration\\V7000__document_module_description.sql",
      "filename": "V7000__document_module_description.sql",
      "version": 7000,
      "module": "law-firm-modules",
      "content": "-- 文档管理模块说明\n-- 版本: V7000\n-- 模块: 文档管理模块 (V7000-V7999)\n-- 创建时间: 2023-06-01\n-- 说明: 文档管理功能模块架构说明\n\n/*\n=============================================================================\n                            文档管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n文档管理模块负责律师事务所的文档全生命周期管理，包括：\n- 文档基础信息管理\n- 文档分类管理\n- 文档标签管理\n- 文档权限管理\n- 文档版本管理\n- 文档搜索管理\n- 文档模板管理\n- 文档审核流程\n\n二、版本规划 (V7000-V7999)\n- V7000: 模块说明文档\n- V7001: 表结构定义\n- V7002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 文档基础管理\n   - document_info: 文档基本信息\n   - document_content: 文档内容\n   - document_attachment: 文档附件\n\n2. 文档分类标签\n   - document_category: 文档分类\n   - document_tag: 文档标签\n   - document_tag_relation: 文档标签关联\n\n3. 文档版本权限\n   - document_version: 文档版本\n   - document_permission: 文档权限\n   - document_share: 文档分享\n\n4. 文档业务关联\n   - document_case_relation: 案件文档关联\n   - document_contract_relation: 合同文档关联\n   - document_client_relation: 客户文档关联\n\n5. 文档模板审核\n   - document_template: 文档模板\n   - document_review: 文档审核\n   - document_operation_log: 文档操作日志\n\n四、数据关系\n=============================================================================\n- document_info → document_content (文档内容)\n- document_info → document_attachment (文档附件)\n- document_info → document_tag_relation → document_tag (文档标签)\n- document_info → document_version (文档版本)\n- document_info → document_permission (文档权限)\n- document_info → document_share (文档分享)\n- document_info → document_case_relation (案件关联)\n- document_info → document_contract_relation (合同关联)\n- document_info → document_client_relation (客户关联)\n- document_info → document_review (文档审核)\n- document_template → document_info (基于模板创建)\n\n五、业务特点\n=============================================================================\n1. 多格式支持\n   - 支持Word、PDF、Excel、PPT等多种格式\n   - 支持在线预览和编辑\n   - 支持格式转换\n\n2. 权限控制\n   - 细粒度权限控制(查看、编辑、下载、分享)\n   - 支持用户、角色、部门多维度授权\n   - 支持权限继承和临时授权\n\n3. 版本管理\n   - 文档版本追踪和比较\n   - 支持版本回滚和恢复\n   - 版本变更记录和审批\n\n4. 智能检索\n   - 全文检索和关键词搜索\n   - 基于标签和分类的多维检索\n   - 相关文档推荐\n\n六、权限设计\n=============================================================================\n文档管理功能权限控制：\n- 文档查看: DOCUMENT_VIEW\n- 文档管理: DOCUMENT_MANAGE\n- 文档分类管理: DOCUMENT_CATEGORY_MANAGE\n- 文档标签管理: DOCUMENT_TAG_MANAGE\n- 文档权限管理: DOCUMENT_PERMISSION_MANAGE\n- 文档模板管理: DOCUMENT_TEMPLATE_MANAGE\n- 文档审核: DOCUMENT_REVIEW\n\n七、注意事项\n=============================================================================\n1. 文档内容涉及机密信息，需严格权限控制\n2. 大文件上传需要分片处理和断点续传\n3. 文档索引需要定期更新和优化\n4. 文档存储需要考虑备份和容灾\n5. 文档版本管理需要合理的清理策略\n6. 敏感文档需要加密存储和传输\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 文档管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '文档管理模块说明文档已加载' AS message; ",
      "size": 2869
    },
    {
      "path": "law-firm-modules\\law-firm-document\\src\\main\\resources\\META-INF\\db\\migration\\V7001__init_document_tables.sql",
      "filename": "V7001__init_document_tables.sql",
      "version": 7001,
      "module": "law-firm-modules",
      "content": "-- 文档管理模块表结构\n-- 版本: V7001\n-- 模块: 文档管理模块 (V7000-V7999)\n-- 创建时间: 2023-06-01\n-- 说明: 文档管理功能的完整表结构定义\n-- 包括：文档基础信息、内容管理、分类标签、版本控制、权限管理、业务关联、模板审核\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 文档基础信息表 =======================\n\n-- document_info表（文档基本信息表）\nDROP TABLE IF EXISTS document_info;\nCREATE TABLE document_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文档ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_number VARCHAR(50) NOT NULL COMMENT '文档编号',\n    title VARCHAR(200) NOT NULL COMMENT '文档标题',\n    description TEXT COMMENT '文档描述',\n    keywords VARCHAR(500) COMMENT '关键词',\n    document_type TINYINT DEFAULT 1 COMMENT '文档类型(1-合同文档,2-案件文档,3-法律意见,4-备忘录,5-模板,6-其他)',\n    category_id BIGINT COMMENT '文档分类ID',\n    file_name VARCHAR(200) COMMENT '文件名',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_extension VARCHAR(20) COMMENT '文件扩展名',\n    mime_type VARCHAR(100) COMMENT 'MIME类型',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    storage_type TINYINT DEFAULT 1 COMMENT '存储类型(1-本地,2-云存储,3-NAS)',\n    storage_bucket VARCHAR(100) COMMENT '存储桶',\n    file_md5 VARCHAR(32) COMMENT '文件MD5',\n    author_id BIGINT COMMENT '作者ID',\n    author_name VARCHAR(50) COMMENT '作者姓名',\n    owner_id BIGINT COMMENT '所有者ID',\n    owner_name VARCHAR(50) COMMENT '所有者姓名',\n    department_id BIGINT COMMENT '所属部门ID',\n    department_name VARCHAR(100) COMMENT '所属部门名称',\n    document_status TINYINT DEFAULT 1 COMMENT '文档状态(1-草稿,2-审核中,3-已发布,4-已归档,5-已作废)',\n    security_level TINYINT DEFAULT 1 COMMENT '安全级别(1-公开,2-内部,3-机密,4-绝密)',\n    access_level TINYINT DEFAULT 1 COMMENT '访问权限(1-私有,2-部门内,3-公司内,4-公开)',\n    is_encrypted TINYINT DEFAULT 0 COMMENT '是否加密(0-否,1-是)',\n    encryption_type VARCHAR(20) COMMENT '加密类型',\n    is_template TINYINT DEFAULT 0 COMMENT '是否模板(0-否,1-是)',\n    template_id BIGINT COMMENT '模板ID',\n    language VARCHAR(10) DEFAULT 'zh-CN' COMMENT '文档语言',\n    page_count INT DEFAULT 0 COMMENT '页数',\n    word_count INT DEFAULT 0 COMMENT '字数',\n    view_count INT DEFAULT 0 COMMENT '查看次数',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    share_count INT DEFAULT 0 COMMENT '分享次数',\n    last_view_time DATETIME COMMENT '最后查看时间',\n    last_modify_time DATETIME COMMENT '最后修改时间',\n    publish_time DATETIME COMMENT '发布时间',\n    archive_time DATETIME COMMENT '归档时间',\n    expire_time DATETIME COMMENT '过期时间',\n    tags JSON COMMENT '文档标签(JSON格式)',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_document_number (tenant_id, document_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_title (title),\n    INDEX idx_document_type (document_type),\n    INDEX idx_category_id (category_id),\n    INDEX idx_document_status (document_status),\n    INDEX idx_author_id (author_id),\n    INDEX idx_owner_id (owner_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_security_level (security_level),\n    INDEX idx_is_template (is_template),\n    INDEX idx_template_id (template_id),\n    INDEX idx_file_md5 (file_md5),\n    INDEX idx_create_time (create_time),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档基本信息表';\n\n-- document_content表（文档内容表）\nDROP TABLE IF EXISTS document_content;\nCREATE TABLE document_content (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '内容ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    content_type TINYINT DEFAULT 1 COMMENT '内容类型(1-文本内容,2-HTML内容,3-原始文件,4-预览图)',\n    content LONGTEXT COMMENT '文档内容',\n    content_html LONGTEXT COMMENT 'HTML格式内容',\n    content_text LONGTEXT COMMENT '纯文本内容(用于搜索)',\n    preview_url VARCHAR(500) COMMENT '预览地址',\n    thumbnail_url VARCHAR(500) COMMENT '缩略图地址',\n    extract_text LONGTEXT COMMENT '提取的文本内容',\n    content_encoding VARCHAR(20) DEFAULT 'UTF-8' COMMENT '内容编码',\n    content_size BIGINT COMMENT '内容大小',\n    is_extracted TINYINT DEFAULT 0 COMMENT '是否已提取文本(0-否,1-是)',\n    extract_time DATETIME COMMENT '提取时间',\n    ocr_result LONGTEXT COMMENT 'OCR识别结果',\n    is_ocr_processed TINYINT DEFAULT 0 COMMENT '是否已OCR处理(0-否,1-是)',\n    ocr_time DATETIME COMMENT 'OCR处理时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_document_content_type (document_id, content_type),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_content_type (content_type),\n    INDEX idx_is_extracted (is_extracted),\n    INDEX idx_is_ocr_processed (is_ocr_processed),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_content_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档内容表';\n\n-- document_attachment表（文档附件表）\nDROP TABLE IF EXISTS document_attachment;\nCREATE TABLE document_attachment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '附件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    attachment_name VARCHAR(200) NOT NULL COMMENT '附件名称',\n    attachment_type TINYINT DEFAULT 1 COMMENT '附件类型(1-相关文件,2-签名页,3-附录,4-参考资料)',\n    file_name VARCHAR(200) COMMENT '文件名',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_size BIGINT COMMENT '文件大小',\n    file_md5 VARCHAR(32) COMMENT '文件MD5',\n    upload_time DATETIME COMMENT '上传时间',\n    uploader_id BIGINT COMMENT '上传人ID',\n    uploader_name VARCHAR(50) COMMENT '上传人姓名',\n    description VARCHAR(500) COMMENT '附件描述',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_attachment_type (attachment_type),\n    INDEX idx_uploader_id (uploader_id),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_attachment_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档附件表';\n\n-- ======================= 文档分类标签表 =======================\n\n-- document_category表（文档分类表）\nDROP TABLE IF EXISTS document_category;\nCREATE TABLE document_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(100) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    parent_id BIGINT DEFAULT 0 COMMENT '父分类ID',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    category_path VARCHAR(500) COMMENT '分类路径',\n    description VARCHAR(500) COMMENT '分类描述',\n    icon VARCHAR(100) COMMENT '分类图标',\n    color VARCHAR(20) COMMENT '分类颜色',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统分类(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    document_count INT DEFAULT 0 COMMENT '文档数量',\n    template_config JSON COMMENT '模板配置(JSON格式)',\n    permission_config JSON COMMENT '权限配置(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_category_name (category_name),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档分类表';\n\n-- document_tag表（文档标签表）\nDROP TABLE IF EXISTS document_tag;\nCREATE TABLE document_tag (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tag_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    tag_code VARCHAR(50) NOT NULL COMMENT '标签编码',\n    tag_type TINYINT DEFAULT 1 COMMENT '标签类型(1-业务标签,2-状态标签,3-优先级标签,4-自定义标签)',\n    tag_category VARCHAR(50) COMMENT '标签分类',\n    color VARCHAR(20) COMMENT '标签颜色',\n    icon VARCHAR(100) COMMENT '标签图标',\n    description VARCHAR(200) COMMENT '标签描述',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统标签(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_tag_code (tenant_id, tag_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_tag_name (tag_name),\n    INDEX idx_tag_type (tag_type),\n    INDEX idx_tag_category (tag_category),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档标签表';\n\n-- document_tag_relation表（文档标签关联表）\nDROP TABLE IF EXISTS document_tag_relation;\nCREATE TABLE document_tag_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    tag_id BIGINT NOT NULL COMMENT '标签ID',\n    tag_value VARCHAR(200) COMMENT '标签值',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_document_tag (document_id, tag_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_tag_id (tag_id),\n    \n    CONSTRAINT fk_document_tag_relation_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE,\n    CONSTRAINT fk_document_tag_relation_tag FOREIGN KEY (tag_id) REFERENCES document_tag(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档标签关联表';\n\n-- ======================= 文档版本权限表 =======================\n\n-- document_version表（文档版本表）\nDROP TABLE IF EXISTS document_version;\nCREATE TABLE document_version (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '版本ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    version_number VARCHAR(20) NOT NULL COMMENT '版本号',\n    version_name VARCHAR(100) COMMENT '版本名称',\n    version_type TINYINT DEFAULT 1 COMMENT '版本类型(1-主版本,2-次版本,3-修订版)',\n    version_status TINYINT DEFAULT 1 COMMENT '版本状态(1-草稿,2-发布,3-归档,4-废弃)',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_size BIGINT COMMENT '文件大小',\n    file_md5 VARCHAR(32) COMMENT '文件MD5',\n    change_description TEXT COMMENT '变更描述',\n    change_type TINYINT COMMENT '变更类型(1-新增,2-修改,3-删除,4-合并)',\n    parent_version_id BIGINT COMMENT '父版本ID',\n    is_current TINYINT DEFAULT 0 COMMENT '是否当前版本(0-否,1-是)',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    create_ip VARCHAR(50) COMMENT '创建IP',\n    approval_required TINYINT DEFAULT 0 COMMENT '是否需要审批(0-否,1-是)',\n    approval_status TINYINT COMMENT '审批状态(1-待审批,2-已审批,3-已拒绝)',\n    approver_id BIGINT COMMENT '审批人ID',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_comment TEXT COMMENT '审批意见',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_document_version_number (document_id, version_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_version_status (version_status),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_is_current (is_current),\n    INDEX idx_parent_version_id (parent_version_id),\n    INDEX idx_approval_status (approval_status),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_version_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档版本表';\n\n-- document_permission表（文档权限表）\nDROP TABLE IF EXISTS document_permission;\nCREATE TABLE document_permission (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '权限ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    subject_type TINYINT NOT NULL COMMENT '权限主体类型(1-用户,2-角色,3-部门)',\n    subject_id BIGINT NOT NULL COMMENT '权限主体ID',\n    subject_name VARCHAR(100) COMMENT '权限主体名称',\n    permission_type TINYINT NOT NULL COMMENT '权限类型(1-查看,2-编辑,3-下载,4-分享,5-删除,6-管理)',\n    permission_scope TINYINT DEFAULT 1 COMMENT '权限范围(1-当前版本,2-所有版本)',\n    is_granted TINYINT DEFAULT 1 COMMENT '是否授权(0-拒绝,1-允许)',\n    grant_source TINYINT DEFAULT 1 COMMENT '授权来源(1-直接授权,2-继承授权,3-分享授权)',\n    grantor_id BIGINT COMMENT '授权人ID',\n    grantor_name VARCHAR(50) COMMENT '授权人姓名',\n    grant_time DATETIME COMMENT '授权时间',\n    expire_time DATETIME COMMENT '过期时间',\n    conditions JSON COMMENT '权限条件(JSON格式)',\n    ip_restrictions VARCHAR(500) COMMENT 'IP限制',\n    time_restrictions VARCHAR(200) COMMENT '时间限制',\n    is_inherited TINYINT DEFAULT 0 COMMENT '是否继承权限(0-否,1-是)',\n    inherit_from_id BIGINT COMMENT '继承来源ID',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_document_subject_permission (document_id, subject_type, subject_id, permission_type),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_subject_type_id (subject_type, subject_id),\n    INDEX idx_permission_type (permission_type),\n    INDEX idx_grantor_id (grantor_id),\n    INDEX idx_grant_time (grant_time),\n    INDEX idx_expire_time (expire_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_permission_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档权限表';\n\n-- document_share表（文档分享表）\nDROP TABLE IF EXISTS document_share;\nCREATE TABLE document_share (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分享ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    share_code VARCHAR(32) NOT NULL COMMENT '分享码',\n    share_title VARCHAR(200) COMMENT '分享标题',\n    share_type TINYINT DEFAULT 1 COMMENT '分享类型(1-链接分享,2-密码分享,3-邀请分享)',\n    share_scope TINYINT DEFAULT 1 COMMENT '分享范围(1-公开,2-内部,3-指定用户)',\n    access_password VARCHAR(20) COMMENT '访问密码',\n    access_permissions JSON COMMENT '访问权限(JSON格式)',\n    access_count INT DEFAULT 0 COMMENT '访问次数',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    max_access_count INT COMMENT '最大访问次数',\n    max_download_count INT COMMENT '最大下载次数',\n    share_url VARCHAR(500) COMMENT '分享链接',\n    qr_code_url VARCHAR(500) COMMENT '二维码链接',\n    sharer_id BIGINT NOT NULL COMMENT '分享人ID',\n    sharer_name VARCHAR(50) COMMENT '分享人姓名',\n    share_message TEXT COMMENT '分享留言',\n    expire_time DATETIME COMMENT '过期时间',\n    last_access_time DATETIME COMMENT '最后访问时间',\n    last_access_ip VARCHAR(50) COMMENT '最后访问IP',\n    is_active TINYINT DEFAULT 1 COMMENT '是否有效(0-否,1-是)',\n    watermark_config JSON COMMENT '水印配置(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_share_code (share_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_share_type (share_type),\n    INDEX idx_sharer_id (sharer_id),\n    INDEX idx_expire_time (expire_time),\n    INDEX idx_is_active (is_active),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_share_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档分享表';\n\n-- ======================= 文档业务关联表 =======================\n\n-- document_case_relation表（案件文档关联表）\nDROP TABLE IF EXISTS document_case_relation;\nCREATE TABLE document_case_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-案件材料,2-证据文件,3-法律文书,4-庭审记录,5-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_document TINYINT DEFAULT 0 COMMENT '是否关键文档(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_document_case (document_id, case_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_document (is_key_document),\n    \n    CONSTRAINT fk_document_case_relation_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件文档关联表';\n\n-- document_contract_relation表（合同文档关联表）\nDROP TABLE IF EXISTS document_contract_relation;\nCREATE TABLE document_contract_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-合同正文,2-补充协议,3-附件,4-签署页,5-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_document TINYINT DEFAULT 0 COMMENT '是否关键文档(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_document_contract (document_id, contract_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_document (is_key_document),\n    \n    CONSTRAINT fk_document_contract_relation_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同文档关联表';\n\n-- document_client_relation表（客户文档关联表）\nDROP TABLE IF EXISTS document_client_relation;\nCREATE TABLE document_client_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-客户资料,2-尽调文档,3-法律意见,4-服务记录,5-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_document TINYINT DEFAULT 0 COMMENT '是否关键文档(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_document_client (document_id, client_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_document (is_key_document),\n    \n    CONSTRAINT fk_document_client_relation_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户文档关联表';\n\n-- ======================= 文档模板审核表 =======================\n\n-- document_template表（文档模板表）\nDROP TABLE IF EXISTS document_template;\nCREATE TABLE document_template (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模板ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    template_name VARCHAR(200) NOT NULL COMMENT '模板名称',\n    template_code VARCHAR(50) NOT NULL COMMENT '模板编码',\n    template_type TINYINT DEFAULT 1 COMMENT '模板类型(1-合同模板,2-法律文书,3-意见书,4-备忘录,5-其他)',\n    template_category VARCHAR(50) COMMENT '模板分类',\n    template_content LONGTEXT COMMENT '模板内容',\n    template_fields JSON COMMENT '模板字段(JSON格式)',\n    template_rules JSON COMMENT '模板规则(JSON格式)',\n    preview_url VARCHAR(500) COMMENT '预览地址',\n    file_path VARCHAR(500) COMMENT '模板文件路径',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_size BIGINT COMMENT '文件大小',\n    version_number VARCHAR(20) DEFAULT '1.0' COMMENT '版本号',\n    is_active TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认模板(0-否,1-是)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    approval_status TINYINT DEFAULT 1 COMMENT '审批状态(1-待审批,2-已审批,3-已拒绝)',\n    approver_id BIGINT COMMENT '审批人ID',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_comment TEXT COMMENT '审批意见',\n    applicable_scope TEXT COMMENT '适用范围',\n    usage_instructions TEXT COMMENT '使用说明',\n    change_log TEXT COMMENT '变更日志',\n    tags JSON COMMENT '标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_template_code (tenant_id, template_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_template_name (template_name),\n    INDEX idx_template_type (template_type),\n    INDEX idx_template_category (template_category),\n    INDEX idx_is_active (is_active),\n    INDEX idx_is_default (is_default),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_approval_status (approval_status),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档模板表';\n\n-- document_review表（文档审核表）\nDROP TABLE IF EXISTS document_review;\nCREATE TABLE document_review (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审核ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    review_type TINYINT DEFAULT 1 COMMENT '审核类型(1-内容审核,2-合规审核,3-质量审核,4-发布审核)',\n    review_stage TINYINT DEFAULT 1 COMMENT '审核阶段(1-初审,2-复审,3-终审)',\n    review_status TINYINT DEFAULT 1 COMMENT '审核状态(1-待审核,2-审核通过,3-审核拒绝,4-需要修改)',\n    reviewer_id BIGINT COMMENT '审核人ID',\n    reviewer_name VARCHAR(50) COMMENT '审核人姓名',\n    review_time DATETIME COMMENT '审核时间',\n    review_opinion TEXT COMMENT '审核意见',\n    review_result TEXT COMMENT '审核结果',\n    review_score DECIMAL(3,1) COMMENT '审核评分',\n    issues_found JSON COMMENT '发现的问题(JSON格式)',\n    suggestions TEXT COMMENT '修改建议',\n    next_reviewer_id BIGINT COMMENT '下一审核人ID',\n    process_instance_id VARCHAR(64) COMMENT '流程实例ID',\n    task_id VARCHAR(64) COMMENT '任务ID',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    deadline DATETIME COMMENT '审核截止时间',\n    review_duration INT COMMENT '审核耗时(分钟)',\n    attachments JSON COMMENT '审核附件(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_review_type (review_type),\n    INDEX idx_review_status (review_status),\n    INDEX idx_reviewer_id (reviewer_id),\n    INDEX idx_review_time (review_time),\n    INDEX idx_next_reviewer_id (next_reviewer_id),\n    INDEX idx_deadline (deadline),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_document_review_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档审核表';\n\n-- document_operation_log表（文档操作日志表）\nDROP TABLE IF EXISTS document_operation_log;\nCREATE TABLE document_operation_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    operation_type TINYINT NOT NULL COMMENT '操作类型(1-创建,2-查看,3-下载,4-编辑,5-删除,6-分享,7-评论,8-收藏)',\n    operation_desc VARCHAR(200) COMMENT '操作描述',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(50) COMMENT '操作人姓名',\n    operator_ip VARCHAR(50) COMMENT '操作IP',\n    user_agent VARCHAR(500) COMMENT '用户代理',\n    operation_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间',\n    operation_result TINYINT DEFAULT 1 COMMENT '操作结果(1-成功,2-失败)',\n    error_message VARCHAR(500) COMMENT '错误信息',\n    operation_details JSON COMMENT '操作详情(JSON格式)',\n    request_params JSON COMMENT '请求参数(JSON格式)',\n    response_data JSON COMMENT '响应数据(JSON格式)',\n    execution_time INT COMMENT '执行时间(毫秒)',\n    trace_id VARCHAR(64) COMMENT '链路追踪ID',\n    session_id VARCHAR(64) COMMENT '会话ID',\n    module_name VARCHAR(50) COMMENT '模块名称',\n    method_name VARCHAR(100) COMMENT '方法名称',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_operation_type (operation_type),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_operation_time (operation_time),\n    INDEX idx_operation_result (operation_result),\n    INDEX idx_trace_id (trace_id),\n    \n    CONSTRAINT fk_document_operation_log_document FOREIGN KEY (document_id) REFERENCES document_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档操作日志表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 28339
    },
    {
      "path": "law-firm-modules\\law-firm-document\\src\\main\\resources\\META-INF\\db\\migration\\V7002__init_document_data.sql",
      "filename": "V7002__init_document_data.sql",
      "version": 7002,
      "module": "law-firm-modules",
      "content": "-- 文档管理模块基础数据\n-- 版本: V7002\n-- 模块: 文档管理模块 (V7000-V7999)\n-- 创建时间: 2023-06-01\n-- 说明: 文档管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 文档相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('文档类型', 'document_type', 1, 'system', NOW(), '文档类型字典'),\n('文档状态', 'document_status', 1, 'system', NOW(), '文档状态字典'),\n('安全级别', 'security_level', 1, 'system', NOW(), '文档安全级别字典'),\n('访问权限', 'access_level', 1, 'system', NOW(), '文档访问权限字典'),\n('存储类型', 'storage_type', 1, 'system', NOW(), '文档存储类型字典'),\n('内容类型', 'content_type', 1, 'system', NOW(), '文档内容类型字典'),\n('附件类型', 'attachment_type', 1, 'system', NOW(), '文档附件类型字典'),\n('标签类型', 'tag_type', 1, 'system', NOW(), '文档标签类型字典'),\n('版本类型', 'version_type', 1, 'system', NOW(), '文档版本类型字典'),\n('版本状态', 'version_status', 1, 'system', NOW(), '文档版本状态字典'),\n('权限主体类型', 'subject_type', 1, 'system', NOW(), '权限主体类型字典'),\n('权限类型', 'permission_type', 1, 'system', NOW(), '权限类型字典'),\n('授权来源', 'grant_source', 1, 'system', NOW(), '授权来源字典'),\n('分享类型', 'share_type', 1, 'system', NOW(), '分享类型字典'),\n('分享范围', 'share_scope', 1, 'system', NOW(), '分享范围字典'),\n('关联类型', 'relation_type', 1, 'system', NOW(), '文档关联类型字典'),\n('模板类型', 'template_type', 1, 'system', NOW(), '文档模板类型字典'),\n('审核类型', 'review_type', 1, 'system', NOW(), '文档审核类型字典'),\n('审核阶段', 'review_stage', 1, 'system', NOW(), '文档审核阶段字典'),\n('审核状态', 'review_status', 1, 'system', NOW(), '文档审核状态字典'),\n('操作类型', 'operation_type', 1, 'system', NOW(), '文档操作类型字典'),\n('变更类型', 'change_type', 1, 'system', NOW(), '文档变更类型字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 文档类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '合同文档', '1', 'document_type', '', 'primary', 'Y', 1, 'system', NOW(), '合同相关文档'),\n(2, '案件文档', '2', 'document_type', '', 'info', 'N', 1, 'system', NOW(), '案件相关文档'),\n(3, '法律意见', '3', 'document_type', '', 'success', 'N', 1, 'system', NOW(), '法律意见书'),\n(4, '备忘录', '4', 'document_type', '', 'warning', 'N', 1, 'system', NOW(), '内部备忘录'),\n(5, '模板文档', '5', 'document_type', '', 'danger', 'N', 1, 'system', NOW(), '文档模板'),\n(6, '其他文档', '6', 'document_type', '', 'default', 'N', 1, 'system', NOW(), '其他类型文档');\n\n-- 文档状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'document_status', '', 'warning', 'Y', 1, 'system', NOW(), '文档草稿状态'),\n(2, '审核中', '2', 'document_status', '', 'info', 'N', 1, 'system', NOW(), '文档审核中'),\n(3, '已发布', '3', 'document_status', '', 'success', 'N', 1, 'system', NOW(), '文档已发布'),\n(4, '已归档', '4', 'document_status', '', 'primary', 'N', 1, 'system', NOW(), '文档已归档'),\n(5, '已作废', '5', 'document_status', '', 'danger', 'N', 1, 'system', NOW(), '文档已作废');\n\n-- 安全级别\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '公开', '1', 'security_level', '', 'success', 'Y', 1, 'system', NOW(), '公开级别'),\n(2, '内部', '2', 'security_level', '', 'info', 'N', 1, 'system', NOW(), '内部级别'),\n(3, '机密', '3', 'security_level', '', 'warning', 'N', 1, 'system', NOW(), '机密级别'),\n(4, '绝密', '4', 'security_level', '', 'danger', 'N', 1, 'system', NOW(), '绝密级别');\n\n-- 访问权限\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '私有', '1', 'access_level', '', 'danger', 'Y', 1, 'system', NOW(), '私有访问'),\n(2, '部门内', '2', 'access_level', '', 'warning', 'N', 1, 'system', NOW(), '部门内访问'),\n(3, '公司内', '3', 'access_level', '', 'info', 'N', 1, 'system', NOW(), '公司内访问'),\n(4, '公开', '4', 'access_level', '', 'success', 'N', 1, 'system', NOW(), '公开访问');\n\n-- 存储类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '本地存储', '1', 'storage_type', '', 'primary', 'Y', 1, 'system', NOW(), '本地文件系统'),\n(2, '云存储', '2', 'storage_type', '', 'success', 'N', 1, 'system', NOW(), '云对象存储'),\n(3, 'NAS存储', '3', 'storage_type', '', 'info', 'N', 1, 'system', NOW(), '网络附加存储');\n\n-- 内容类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '文本内容', '1', 'content_type', '', 'primary', 'Y', 1, 'system', NOW(), '纯文本内容'),\n(2, 'HTML内容', '2', 'content_type', '', 'info', 'N', 1, 'system', NOW(), 'HTML格式内容'),\n(3, '原始文件', '3', 'content_type', '', 'success', 'N', 1, 'system', NOW(), '原始文件内容'),\n(4, '预览图', '4', 'content_type', '', 'warning', 'N', 1, 'system', NOW(), '预览图片');\n\n-- 附件类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '相关文件', '1', 'attachment_type', '', 'primary', 'Y', 1, 'system', NOW(), '相关文件'),\n(2, '签名页', '2', 'attachment_type', '', 'success', 'N', 1, 'system', NOW(), '签名页文件'),\n(3, '附录', '3', 'attachment_type', '', 'info', 'N', 1, 'system', NOW(), '附录文件'),\n(4, '参考资料', '4', 'attachment_type', '', 'warning', 'N', 1, 'system', NOW(), '参考资料');\n\n-- 标签类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '业务标签', '1', 'tag_type', '', 'primary', 'Y', 1, 'system', NOW(), '业务相关标签'),\n(2, '状态标签', '2', 'tag_type', '', 'info', 'N', 1, 'system', NOW(), '状态相关标签'),\n(3, '优先级标签', '3', 'tag_type', '', 'warning', 'N', 1, 'system', NOW(), '优先级标签'),\n(4, '自定义标签', '4', 'tag_type', '', 'success', 'N', 1, 'system', NOW(), '自定义标签');\n\n-- 版本类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '主版本', '1', 'version_type', '', 'danger', 'Y', 1, 'system', NOW(), '主要版本更新'),\n(2, '次版本', '2', 'version_type', '', 'warning', 'N', 1, 'system', NOW(), '次要版本更新'),\n(3, '修订版', '3', 'version_type', '', 'info', 'N', 1, 'system', NOW(), '修订版本更新');\n\n-- 版本状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '草稿', '1', 'version_status', '', 'warning', 'Y', 1, 'system', NOW(), '版本草稿'),\n(2, '发布', '2', 'version_status', '', 'success', 'N', 1, 'system', NOW(), '版本已发布'),\n(3, '归档', '3', 'version_status', '', 'primary', 'N', 1, 'system', NOW(), '版本已归档'),\n(4, '废弃', '4', 'version_status', '', 'danger', 'N', 1, 'system', NOW(), '版本已废弃');\n\n-- 权限主体类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '用户', '1', 'subject_type', '', 'primary', 'Y', 1, 'system', NOW(), '用户权限'),\n(2, '角色', '2', 'subject_type', '', 'success', 'N', 1, 'system', NOW(), '角色权限'),\n(3, '部门', '3', 'subject_type', '', 'info', 'N', 1, 'system', NOW(), '部门权限');\n\n-- 权限类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '查看', '1', 'permission_type', '', 'info', 'Y', 1, 'system', NOW(), '查看权限'),\n(2, '编辑', '2', 'permission_type', '', 'warning', 'N', 1, 'system', NOW(), '编辑权限'),\n(3, '下载', '3', 'permission_type', '', 'success', 'N', 1, 'system', NOW(), '下载权限'),\n(4, '分享', '4', 'permission_type', '', 'primary', 'N', 1, 'system', NOW(), '分享权限'),\n(5, '删除', '5', 'permission_type', '', 'danger', 'N', 1, 'system', NOW(), '删除权限'),\n(6, '管理', '6', 'permission_type', '', 'dark', 'N', 1, 'system', NOW(), '管理权限');\n\n-- 授权来源\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '直接授权', '1', 'grant_source', '', 'primary', 'Y', 1, 'system', NOW(), '直接授权'),\n(2, '继承授权', '2', 'grant_source', '', 'info', 'N', 1, 'system', NOW(), '继承授权'),\n(3, '分享授权', '3', 'grant_source', '', 'success', 'N', 1, 'system', NOW(), '分享授权');\n\n-- 分享类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '链接分享', '1', 'share_type', '', 'primary', 'Y', 1, 'system', NOW(), '链接分享'),\n(2, '密码分享', '2', 'share_type', '', 'warning', 'N', 1, 'system', NOW(), '密码分享'),\n(3, '邀请分享', '3', 'share_type', '', 'success', 'N', 1, 'system', NOW(), '邀请分享');\n\n-- 分享范围\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '公开', '1', 'share_scope', '', 'success', 'Y', 1, 'system', NOW(), '公开分享'),\n(2, '内部', '2', 'share_scope', '', 'info', 'N', 1, 'system', NOW(), '内部分享'),\n(3, '指定用户', '3', 'share_scope', '', 'warning', 'N', 1, 'system', NOW(), '指定用户分享');\n\n-- 模板类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '合同模板', '1', 'template_type', '', 'primary', 'Y', 1, 'system', NOW(), '合同模板'),\n(2, '法律文书', '2', 'template_type', '', 'info', 'N', 1, 'system', NOW(), '法律文书模板'),\n(3, '意见书', '3', 'template_type', '', 'success', 'N', 1, 'system', NOW(), '意见书模板'),\n(4, '备忘录', '4', 'template_type', '', 'warning', 'N', 1, 'system', NOW(), '备忘录模板'),\n(5, '其他', '5', 'template_type', '', 'default', 'N', 1, 'system', NOW(), '其他模板');\n\n-- 审核类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '内容审核', '1', 'review_type', '', 'primary', 'Y', 1, 'system', NOW(), '内容审核'),\n(2, '合规审核', '2', 'review_type', '', 'warning', 'N', 1, 'system', NOW(), '合规审核'),\n(3, '质量审核', '3', 'review_type', '', 'info', 'N', 1, 'system', NOW(), '质量审核'),\n(4, '发布审核', '4', 'review_type', '', 'success', 'N', 1, 'system', NOW(), '发布审核');\n\n-- 审核阶段\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '初审', '1', 'review_stage', '', 'info', 'Y', 1, 'system', NOW(), '初次审核'),\n(2, '复审', '2', 'review_stage', '', 'warning', 'N', 1, 'system', NOW(), '复次审核'),\n(3, '终审', '3', 'review_stage', '', 'danger', 'N', 1, 'system', NOW(), '最终审核');\n\n-- 审核状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待审核', '1', 'review_status', '', 'warning', 'Y', 1, 'system', NOW(), '待审核'),\n(2, '审核通过', '2', 'review_status', '', 'success', 'N', 1, 'system', NOW(), '审核通过'),\n(3, '审核拒绝', '3', 'review_status', '', 'danger', 'N', 1, 'system', NOW(), '审核拒绝'),\n(4, '需要修改', '4', 'review_status', '', 'info', 'N', 1, 'system', NOW(), '需要修改');\n\n-- 操作类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '创建', '1', 'operation_type', '', 'success', 'Y', 1, 'system', NOW(), '创建文档'),\n(2, '查看', '2', 'operation_type', '', 'info', 'N', 1, 'system', NOW(), '查看文档'),\n(3, '下载', '3', 'operation_type', '', 'primary', 'N', 1, 'system', NOW(), '下载文档'),\n(4, '编辑', '4', 'operation_type', '', 'warning', 'N', 1, 'system', NOW(), '编辑文档'),\n(5, '删除', '5', 'operation_type', '', 'danger', 'N', 1, 'system', NOW(), '删除文档'),\n(6, '分享', '6', 'operation_type', '', 'dark', 'N', 1, 'system', NOW(), '分享文档'),\n(7, '评论', '7', 'operation_type', '', 'secondary', 'N', 1, 'system', NOW(), '评论文档'),\n(8, '收藏', '8', 'operation_type', '', 'light', 'N', 1, 'system', NOW(), '收藏文档');\n\n-- 变更类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '新增', '1', 'change_type', '', 'success', 'Y', 1, 'system', NOW(), '新增内容'),\n(2, '修改', '2', 'change_type', '', 'warning', 'N', 1, 'system', NOW(), '修改内容'),\n(3, '删除', '3', 'change_type', '', 'danger', 'N', 1, 'system', NOW(), '删除内容'),\n(4, '合并', '4', 'change_type', '', 'info', 'N', 1, 'system', NOW(), '合并内容');\n\n-- ======================= 文档分类初始化 =======================\n\n-- 文档分类数据\nINSERT INTO document_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, sort_order, is_system, create_by, create_time) VALUES\n-- 一级分类\n(0, '合同文档', 'CONTRACT_DOCS', 0, 1, '/合同文档', '合同相关文档分类', 1, 1, 'system', NOW()),\n(0, '案件文档', 'CASE_DOCS', 0, 1, '/案件文档', '案件相关文档分类', 2, 1, 'system', NOW()),\n(0, '法律意见', 'LEGAL_OPINION', 0, 1, '/法律意见', '法律意见书分类', 3, 1, 'system', NOW()),\n(0, '内部文档', 'INTERNAL_DOCS', 0, 1, '/内部文档', '内部文档分类', 4, 1, 'system', NOW()),\n(0, '客户资料', 'CLIENT_DOCS', 0, 1, '/客户资料', '客户相关文档分类', 5, 1, 'system', NOW()),\n\n-- 合同文档二级分类\n(0, '服务合同', 'SERVICE_CONTRACT', 1, 2, '/合同文档/服务合同', '法律服务合同', 1, 1, 'system', NOW()),\n(0, '劳动合同', 'LABOR_CONTRACT', 1, 2, '/合同文档/劳动合同', '劳动合同文档', 2, 1, 'system', NOW()),\n(0, '买卖合同', 'SALES_CONTRACT', 1, 2, '/合同文档/买卖合同', '买卖合同文档', 3, 1, 'system', NOW()),\n(0, '租赁合同', 'LEASE_CONTRACT', 1, 2, '/合同文档/租赁合同', '租赁合同文档', 4, 1, 'system', NOW()),\n\n-- 案件文档二级分类\n(0, '民事案件', 'CIVIL_CASE', 2, 2, '/案件文档/民事案件', '民事案件文档', 1, 1, 'system', NOW()),\n(0, '刑事案件', 'CRIMINAL_CASE', 2, 2, '/案件文档/刑事案件', '刑事案件文档', 2, 1, 'system', NOW()),\n(0, '行政案件', 'ADMINISTRATIVE_CASE', 2, 2, '/案件文档/行政案件', '行政案件文档', 3, 1, 'system', NOW()),\n(0, '仲裁案件', 'ARBITRATION_CASE', 2, 2, '/案件文档/仲裁案件', '仲裁案件文档', 4, 1, 'system', NOW()),\n\n-- 法律意见二级分类\n(0, '合规意见', 'COMPLIANCE_OPINION', 3, 2, '/法律意见/合规意见', '合规法律意见', 1, 1, 'system', NOW()),\n(0, '尽调意见', 'DUE_DILIGENCE_OPINION', 3, 2, '/法律意见/尽调意见', '尽职调查意见', 2, 1, 'system', NOW()),\n(0, '风险评估', 'RISK_ASSESSMENT', 3, 2, '/法律意见/风险评估', '法律风险评估', 3, 1, 'system', NOW()),\n\n-- 内部文档二级分类\n(0, '管理制度', 'MANAGEMENT_SYSTEM', 4, 2, '/内部文档/管理制度', '内部管理制度', 1, 1, 'system', NOW()),\n(0, '工作流程', 'WORK_PROCESS', 4, 2, '/内部文档/工作流程', '工作流程文档', 2, 1, 'system', NOW()),\n(0, '培训资料', 'TRAINING_MATERIALS', 4, 2, '/内部文档/培训资料', '培训学习资料', 3, 1, 'system', NOW()),\n\n-- 客户资料二级分类\n(0, '企业客户', 'ENTERPRISE_CLIENT', 5, 2, '/客户资料/企业客户', '企业客户资料', 1, 1, 'system', NOW()),\n(0, '个人客户', 'INDIVIDUAL_CLIENT', 5, 2, '/客户资料/个人客户', '个人客户资料', 2, 1, 'system', NOW()),\n(0, '政府机构', 'GOVERNMENT_CLIENT', 5, 2, '/客户资料/政府机构', '政府机构客户', 3, 1, 'system', NOW());\n\n-- ======================= 文档标签初始化 =======================\n\n-- 业务标签\nINSERT INTO document_tag (tenant_id, tag_name, tag_code, tag_type, tag_category, color, description, sort_order, is_system, create_by, create_time) VALUES\n(0, '重要', 'IMPORTANT', 1, '优先级', '#ff4d4f', '重要文档', 1, 1, 'system', NOW()),\n(0, '紧急', 'URGENT', 1, '优先级', '#ff7a45', '紧急文档', 2, 1, 'system', NOW()),\n(0, '机密', 'CONFIDENTIAL', 1, '安全', '#722ed1', '机密文档', 3, 1, 'system', NOW()),\n(0, '归档', 'ARCHIVED', 2, '状态', '#8c8c8c', '已归档文档', 4, 1, 'system', NOW()),\n(0, '待审核', 'PENDING_REVIEW', 2, '状态', '#faad14', '待审核文档', 5, 1, 'system', NOW()),\n(0, '已审核', 'REVIEWED', 2, '状态', '#52c41a', '已审核文档', 6, 1, 'system', NOW()),\n(0, '模板', 'TEMPLATE', 1, '类型', '#1890ff', '模板文档', 7, 1, 'system', NOW()),\n(0, '草稿', 'DRAFT', 2, '状态', '#d9d9d9', '草稿文档', 8, 1, 'system', NOW()),\n(0, '最终版', 'FINAL', 2, '状态', '#13c2c2', '最终版本', 9, 1, 'system', NOW()),\n(0, '需修改', 'NEED_REVISION', 2, '状态', '#fa541c', '需要修改', 10, 1, 'system', NOW());\n\n-- ======================= 文档模板初始化 =======================\n\n-- 基础文档模板\nINSERT INTO document_template (tenant_id, template_name, template_code, template_type, template_category, template_content, version_number, creator_name, create_by, create_time) VALUES\n(0, '法律服务合同模板', 'LEGAL_SERVICE_CONTRACT_TEMPLATE', 1, '服务合同', \n'法律服务合同\n\n甲方：{client_name}\n乙方：{law_firm_name}\n\n根据《中华人民共和国合同法》及相关法律法规，甲乙双方本着平等、自愿、公平、诚实信用的原则，就法律服务事宜达成如下协议：\n\n一、服务内容\n{service_content}\n\n二、服务期限\n自 {start_date} 至 {end_date}\n\n三、服务费用\n{service_fee}\n\n四、双方权利义务\n{rights_obligations}\n\n五、其他约定\n{other_agreements}\n\n甲方（盖章）：             乙方（盖章）：\n法定代表人：               法定代表人：\n签订日期：{sign_date}      签订日期：{sign_date}',\n'1.0', 'system', 'system', NOW()),\n\n(0, '律师函模板', 'LAWYER_LETTER_TEMPLATE', 2, '法律文书',\n'律师函\n\n{recipient_name}：\n\n{law_firm_name}接受{client_name}的委托，指派本律师就{matter_description}事宜，致函贵方。\n\n{main_content}\n\n望贵方收函后，能够重视并积极回应上述事项。如有疑问，请及时联系我们。\n\n此致\n敬礼！\n\n{law_firm_name}\n律师：{lawyer_name}\n执业证号：{license_number}\n联系电话：{phone}\n{date}',\n'1.0', 'system', 'system', NOW()),\n\n(0, '法律意见书模板', 'LEGAL_OPINION_TEMPLATE', 3, '意见书',\n'法律意见书\n\n委托方：{client_name}\n出具方：{law_firm_name}\n日期：{date}\n\n一、基本情况\n{basic_info}\n\n二、审查范围\n{review_scope}\n\n三、法律依据\n{legal_basis}\n\n四、法律分析\n{legal_analysis}\n\n五、法律意见\n{legal_opinion}\n\n六、风险提示\n{risk_warning}\n\n特此出具法律意见书。\n\n{law_firm_name}\n律师：{lawyer_name}\n{date}',\n'1.0', 'system', 'system', NOW());\n\n-- 初始化完成提示\nSELECT '文档管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建文档分类：', COUNT(*), '个') AS category_count FROM document_category WHERE is_system = 1;\nSELECT CONCAT('已创建文档标签：', COUNT(*), '个') AS tag_count FROM document_tag WHERE is_system = 1;\nSELECT CONCAT('已创建文档模板：', COUNT(*), '个') AS template_count FROM document_template; ",
      "size": 16987
    },
    {
      "path": "law-firm-modules\\law-firm-contract\\src\\main\\resources\\META-INF\\db\\migration\\V6000__contract_module_description.sql",
      "filename": "V6000__contract_module_description.sql",
      "version": 6000,
      "module": "law-firm-modules",
      "content": "-- 合同管理模块说明\n-- 版本: V6000\n-- 模块: 合同管理模块 (V6000-V6999)\n-- 创建时间: 2023-06-01\n-- 说明: 合同管理功能模块架构说明\n\n/*\n=============================================================================\n                            合同管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n合同管理模块负责律师事务所的合同全生命周期管理，包括：\n- 合同基础信息管理\n- 合同条款管理\n- 合同团队管理\n- 合同费用管理\n- 合同审核审批\n- 合同模板管理\n- 合同变更管理\n- 合同冲突检查\n\n二、版本规划 (V6000-V6999)\n- V6000: 模块说明文档\n- V6001: 表结构定义\n- V6002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 合同基础管理\n   - contract_info: 合同基本信息\n   - contract_attachment: 合同附件\n   - contract_clause: 合同条款\n\n2. 合同团队费用\n   - contract_team: 合同团队\n   - contract_fee: 合同费用\n\n3. 合同审核流程\n   - contract_review: 合同审核\n   - contract_approval: 合同审批\n   - contract_milestone: 合同里程碑\n\n4. 合同模板变更\n   - contract_template: 合同模板\n   - contract_change: 合同变更\n   - contract_conflict: 合同冲突\n\n四、数据关系\n=============================================================================\n- contract_info → contract_attachment (合同附件)\n- contract_info → contract_clause (合同条款)\n- contract_info → contract_team (合同团队)\n- contract_info → contract_fee (合同费用)\n- contract_info → contract_review (合同审核)\n- contract_info → contract_approval (合同审批)\n- contract_info → contract_milestone (合同里程碑)\n- contract_info → contract_change (合同变更)\n- contract_template → contract_info (基于模板创建)\n\n五、业务特点\n=============================================================================\n1. 全生命周期管理\n   - 合同创建、审核、签署、履行、变更、终止\n   - 完整的流程管控和状态跟踪\n\n2. 多维度管理\n   - 按客户、案件、类型、状态等多维度管理\n   - 支持复杂的费用结构和团队协作\n\n3. 智能化功能\n   - 合同模板管理和自动生成\n   - 冲突检查和风险预警\n   - 里程碑管理和提醒\n\n六、权限设计\n=============================================================================\n合同管理功能权限控制：\n- 合同查看: CONTRACT_VIEW\n- 合同管理: CONTRACT_MANAGE\n- 合同审核: CONTRACT_REVIEW\n- 合同审批: CONTRACT_APPROVE\n- 合同模板管理: CONTRACT_TEMPLATE_MANAGE\n- 合同费用管理: CONTRACT_FEE_MANAGE\n\n七、注意事项\n=============================================================================\n1. 合同信息涉及商业机密，需严格权限控制\n2. 合同变更需要完整的审批流程和版本管理\n3. 费用信息需要与财务系统集成\n4. 合同期限和里程碑需要定期提醒\n5. 合同模板需要法务团队定期维护更新\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 合同管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '合同管理模块说明文档已加载' AS message; ",
      "size": 2420
    },
    {
      "path": "law-firm-modules\\law-firm-contract\\src\\main\\resources\\META-INF\\db\\migration\\V6001__init_contract_tables.sql",
      "filename": "V6001__init_contract_tables.sql",
      "version": 6001,
      "module": "law-firm-modules",
      "content": "-- 合同管理模块表结构\n-- 版本: V6001\n-- 模块: 合同管理模块 (V6000-V6999)\n-- 创建时间: 2023-06-01\n-- 说明: 合同管理功能的完整表结构定义\n-- 包括：合同基础信息、附件管理、条款管理、团队管理、费用管理、审核流程、模板管理、变更管理\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 合同基础信息表 =======================\n\n-- contract_info表（合同基本信息表）\nDROP TABLE IF EXISTS contract_info;\nCREATE TABLE contract_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '合同ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_number VARCHAR(50) NOT NULL COMMENT '合同编号',\n    contract_name VARCHAR(200) NOT NULL COMMENT '合同名称',\n    contract_type TINYINT DEFAULT 1 COMMENT '合同类型(1-委托代理,2-法律顾问,3-专项服务,4-其他)',\n    contract_status TINYINT DEFAULT 1 COMMENT '合同状态(1-草稿,2-待审核,3-已审核,4-已签署,5-执行中,6-已完成,7-已终止)',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    case_id BIGINT COMMENT '关联案件ID',\n    template_id BIGINT COMMENT '合同模板ID',\n    lead_attorney_id BIGINT COMMENT '主办律师ID',\n    lead_attorney_name VARCHAR(50) COMMENT '主办律师姓名',\n    department_id BIGINT COMMENT '承办部门ID',\n    department_name VARCHAR(100) COMMENT '承办部门名称',\n    contract_amount DECIMAL(15,2) DEFAULT 0 COMMENT '合同总金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    signing_date DATE COMMENT '签署日期',\n    effective_date DATE COMMENT '生效日期',\n    expiry_date DATE COMMENT '到期日期',\n    service_scope TEXT COMMENT '服务范围',\n    delegate_power TEXT COMMENT '委托授权范围',\n    fee_type TINYINT COMMENT '收费类型(1-固定费用,2-按小时,3-风险代理,4-混合收费)',\n    payment_terms TEXT COMMENT '付款条件',\n    contract_content LONGTEXT COMMENT '合同正文内容',\n    confidentiality_level TINYINT DEFAULT 1 COMMENT '保密级别(1-公开,2-内部,3-机密,4-绝密)',\n    is_framework TINYINT DEFAULT 0 COMMENT '是否框架合同(0-否,1-是)',\n    parent_contract_id BIGINT COMMENT '父合同ID(框架合同下的子合同)',\n    renewal_count INT DEFAULT 0 COMMENT '续签次数',\n    auto_renewal TINYINT DEFAULT 0 COMMENT '是否自动续签(0-否,1-是)',\n    reminder_days INT DEFAULT 30 COMMENT '到期提醒天数',\n    tags JSON COMMENT '合同标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_contract_number (tenant_id, contract_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_name (contract_name),\n    INDEX idx_contract_type (contract_type),\n    INDEX idx_contract_status (contract_status),\n    INDEX idx_client_id (client_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_lead_attorney_id (lead_attorney_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_signing_date (signing_date),\n    INDEX idx_effective_date (effective_date),\n    INDEX idx_expiry_date (expiry_date),\n    INDEX idx_parent_contract_id (parent_contract_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同基本信息表';\n\n-- contract_attachment表（合同附件表）\nDROP TABLE IF EXISTS contract_attachment;\nCREATE TABLE contract_attachment (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '附件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    file_name VARCHAR(200) NOT NULL COMMENT '文件名称',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_extension VARCHAR(20) COMMENT '文件扩展名',\n    attachment_type TINYINT DEFAULT 1 COMMENT '附件类型(1-合同文本,2-签署页,3-补充协议,4-其他)',\n    upload_time DATETIME COMMENT '上传时间',\n    uploader_id BIGINT COMMENT '上传人ID',\n    uploader_name VARCHAR(50) COMMENT '上传人姓名',\n    description VARCHAR(500) COMMENT '附件描述',\n    confidentiality_level TINYINT DEFAULT 1 COMMENT '保密级别(1-公开,2-内部,3-机密,4-绝密)',\n    is_signature_page TINYINT DEFAULT 0 COMMENT '是否签署页(0-否,1-是)',\n    signature_status TINYINT DEFAULT 0 COMMENT '签署状态(0-未签署,1-已签署)',\n    version_number VARCHAR(20) DEFAULT '1.0' COMMENT '版本号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_attachment_type (attachment_type),\n    INDEX idx_file_type (file_type),\n    INDEX idx_uploader_id (uploader_id),\n    INDEX idx_is_signature_page (is_signature_page),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_attachment_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同附件表';\n\n-- contract_clause表（合同条款表）\nDROP TABLE IF EXISTS contract_clause;\nCREATE TABLE contract_clause (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '条款ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    clause_title VARCHAR(200) COMMENT '条款标题',\n    clause_content TEXT NOT NULL COMMENT '条款内容',\n    clause_type TINYINT DEFAULT 1 COMMENT '条款类型(1-标准条款,2-特殊条款,3-补充条款)',\n    clause_category VARCHAR(50) COMMENT '条款分类',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_required TINYINT DEFAULT 0 COMMENT '是否必填条款(0-否,1-是)',\n    is_editable TINYINT DEFAULT 1 COMMENT '是否可编辑(0-否,1-是)',\n    parent_clause_id BIGINT COMMENT '父条款ID',\n    level TINYINT DEFAULT 1 COMMENT '条款层级',\n    variables JSON COMMENT '条款变量(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_clause_type (clause_type),\n    INDEX idx_clause_category (clause_category),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_parent_clause_id (parent_clause_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_clause_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同条款表';\n\n-- ======================= 合同团队费用表 =======================\n\n-- contract_team表（合同团队表）\nDROP TABLE IF EXISTS contract_team;\nCREATE TABLE contract_team (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '团队ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    attorney_id BIGINT NOT NULL COMMENT '律师ID',\n    attorney_name VARCHAR(50) COMMENT '律师姓名',\n    role_type TINYINT DEFAULT 1 COMMENT '角色类型(1-主办律师,2-协办律师,3-律师助理,4-实习生)',\n    responsibility TEXT COMMENT '职责描述',\n    join_date DATE COMMENT '加入日期',\n    exit_date DATE COMMENT '退出日期',\n    is_active TINYINT DEFAULT 1 COMMENT '是否活跃(0-否,1-是)',\n    billable_hours DECIMAL(8,2) DEFAULT 0 COMMENT '计费小时数',\n    hourly_rate DECIMAL(10,2) COMMENT '小时费率',\n    workload_percent DECIMAL(5,2) DEFAULT 0 COMMENT '工作量占比',\n    profit_percent DECIMAL(5,2) DEFAULT 0 COMMENT '收益分配比例',\n    performance_score DECIMAL(3,1) COMMENT '绩效评分',\n    remarks TEXT COMMENT '备注说明',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_contract_attorney (contract_id, attorney_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_attorney_id (attorney_id),\n    INDEX idx_role_type (role_type),\n    INDEX idx_is_active (is_active),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_team_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同团队表';\n\n-- contract_fee表（合同费用表）\nDROP TABLE IF EXISTS contract_fee;\nCREATE TABLE contract_fee (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '费用ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    fee_name VARCHAR(100) NOT NULL COMMENT '费用名称',\n    fee_type TINYINT DEFAULT 1 COMMENT '费用类型(1-律师费,2-诉讼费,3-差旅费,4-其他费用)',\n    fee_category TINYINT DEFAULT 1 COMMENT '收费方式(1-固定费用,2-按小时,3-按比例,4-风险代理)',\n    fee_amount DECIMAL(15,2) NOT NULL COMMENT '费用金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    fee_rate DECIMAL(8,4) COMMENT '费率(适用于比例收费)',\n    calculation_method TEXT COMMENT '计算方式说明',\n    due_date DATE COMMENT '应付日期',\n    payment_status TINYINT DEFAULT 1 COMMENT '支付状态(1-未支付,2-部分支付,3-已支付,4-已退款)',\n    paid_amount DECIMAL(15,2) DEFAULT 0 COMMENT '已付金额',\n    is_taxable TINYINT DEFAULT 1 COMMENT '是否含税(0-否,1-是)',\n    tax_rate DECIMAL(5,2) DEFAULT 0 COMMENT '税率',\n    tax_amount DECIMAL(12,2) DEFAULT 0 COMMENT '税额',\n    invoice_required TINYINT DEFAULT 1 COMMENT '是否需要发票(0-否,1-是)',\n    invoice_issued TINYINT DEFAULT 0 COMMENT '是否已开票(0-否,1-是)',\n    condition_desc TEXT COMMENT '收费条件说明',\n    milestone_id BIGINT COMMENT '关联里程碑ID',\n    billing_cycle TINYINT COMMENT '计费周期(1-一次性,2-按月,3-按季,4-按年)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_fee_type (fee_type),\n    INDEX idx_fee_category (fee_category),\n    INDEX idx_payment_status (payment_status),\n    INDEX idx_due_date (due_date),\n    INDEX idx_milestone_id (milestone_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_fee_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同费用表';\n\n-- ======================= 合同审核流程表 =======================\n\n-- contract_review表（合同审核表）\nDROP TABLE IF EXISTS contract_review;\nCREATE TABLE contract_review (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审核ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    review_type TINYINT DEFAULT 1 COMMENT '审核类型(1-内容审核,2-法务审核,3-财务审核,4-管理审核)',\n    review_stage TINYINT DEFAULT 1 COMMENT '审核阶段(1-初审,2-复审,3-终审)',\n    review_status TINYINT DEFAULT 1 COMMENT '审核状态(1-待审核,2-审核通过,3-审核拒绝,4-需要修改)',\n    reviewer_id BIGINT COMMENT '审核人ID',\n    reviewer_name VARCHAR(50) COMMENT '审核人姓名',\n    review_time DATETIME COMMENT '审核时间',\n    review_opinion TEXT COMMENT '审核意见',\n    review_result TEXT COMMENT '审核结果',\n    next_reviewer_id BIGINT COMMENT '下一审核人ID',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    expected_complete_time DATETIME COMMENT '预期完成时间',\n    review_duration INT COMMENT '审核耗时(分钟)',\n    attachments JSON COMMENT '审核附件(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_review_type (review_type),\n    INDEX idx_review_status (review_status),\n    INDEX idx_reviewer_id (reviewer_id),\n    INDEX idx_review_time (review_time),\n    INDEX idx_next_reviewer_id (next_reviewer_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_review_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同审核表';\n\n-- contract_approval表（合同审批表）\nDROP TABLE IF EXISTS contract_approval;\nCREATE TABLE contract_approval (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审批ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    approval_node VARCHAR(50) COMMENT '审批节点',\n    approval_level TINYINT DEFAULT 1 COMMENT '审批级别',\n    approval_status TINYINT DEFAULT 1 COMMENT '审批状态(1-待审批,2-审批通过,3-审批拒绝,4-已撤回)',\n    approver_id BIGINT COMMENT '审批人ID',\n    approver_name VARCHAR(50) COMMENT '审批人姓名',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_opinion TEXT COMMENT '审批意见',\n    process_instance_id VARCHAR(64) COMMENT '流程实例ID',\n    task_id VARCHAR(64) COMMENT '任务ID',\n    next_approver_id BIGINT COMMENT '下一审批人ID',\n    approval_duration INT COMMENT '审批耗时(分钟)',\n    is_final_approval TINYINT DEFAULT 0 COMMENT '是否最终审批(0-否,1-是)',\n    delegate_approver_id BIGINT COMMENT '委托审批人ID',\n    approval_deadline DATETIME COMMENT '审批截止时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_approval_status (approval_status),\n    INDEX idx_approver_id (approver_id),\n    INDEX idx_approval_time (approval_time),\n    INDEX idx_process_instance_id (process_instance_id),\n    INDEX idx_next_approver_id (next_approver_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_approval_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同审批表';\n\n-- contract_milestone表（合同里程碑表）\nDROP TABLE IF EXISTS contract_milestone;\nCREATE TABLE contract_milestone (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '里程碑ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    milestone_name VARCHAR(100) NOT NULL COMMENT '里程碑名称',\n    milestone_type TINYINT DEFAULT 1 COMMENT '里程碑类型(1-开始节点,2-过程节点,3-结束节点)',\n    description TEXT COMMENT '里程碑描述',\n    plan_date DATE COMMENT '计划完成日期',\n    actual_date DATE COMMENT '实际完成日期',\n    milestone_status TINYINT DEFAULT 1 COMMENT '状态(1-未开始,2-进行中,3-已完成,4-已延期,5-已跳过)',\n    completion_percent DECIMAL(5,2) DEFAULT 0 COMMENT '完成百分比',\n    responsible_id BIGINT COMMENT '负责人ID',\n    responsible_name VARCHAR(50) COMMENT '负责人姓名',\n    linked_fee_id BIGINT COMMENT '关联费用项ID',\n    is_key_point TINYINT DEFAULT 0 COMMENT '是否关键节点(0-否,1-是)',\n    reminder_days INT DEFAULT 3 COMMENT '提前提醒天数',\n    is_reminder_sent TINYINT DEFAULT 0 COMMENT '是否已发送提醒(0-否,1-是)',\n    sequence_number INT COMMENT '序列号',\n    deliverables TEXT COMMENT '交付物说明',\n    acceptance_criteria TEXT COMMENT '验收标准',\n    risk_level TINYINT DEFAULT 1 COMMENT '风险级别(1-低,2-中,3-高)',\n    dependencies JSON COMMENT '依赖关系(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_milestone_type (milestone_type),\n    INDEX idx_milestone_status (milestone_status),\n    INDEX idx_plan_date (plan_date),\n    INDEX idx_responsible_id (responsible_id),\n    INDEX idx_linked_fee_id (linked_fee_id),\n    INDEX idx_is_key_point (is_key_point),\n    INDEX idx_sequence_number (sequence_number),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_milestone_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同里程碑表';\n\n-- ======================= 合同模板变更表 =======================\n\n-- contract_template表（合同模板表）\nDROP TABLE IF EXISTS contract_template;\nCREATE TABLE contract_template (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模板ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    template_name VARCHAR(200) NOT NULL COMMENT '模板名称',\n    template_code VARCHAR(50) NOT NULL COMMENT '模板编码',\n    template_type TINYINT DEFAULT 1 COMMENT '模板类型(1-委托代理,2-法律顾问,3-专项服务,4-其他)',\n    template_category VARCHAR(50) COMMENT '模板分类',\n    template_content LONGTEXT COMMENT '模板内容',\n    template_version VARCHAR(20) DEFAULT '1.0' COMMENT '模板版本',\n    is_active TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认模板(0-否,1-是)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    approval_status TINYINT DEFAULT 1 COMMENT '审批状态(1-待审批,2-已审批,3-已拒绝)',\n    approver_id BIGINT COMMENT '审批人ID',\n    approval_time DATETIME COMMENT '审批时间',\n    variables JSON COMMENT '模板变量(JSON格式)',\n    clauses JSON COMMENT '标准条款(JSON格式)',\n    business_rules JSON COMMENT '业务规则(JSON格式)',\n    applicable_scope TEXT COMMENT '适用范围',\n    usage_instructions TEXT COMMENT '使用说明',\n    maintenance_notes TEXT COMMENT '维护说明',\n    tags JSON COMMENT '标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_template_code (tenant_id, template_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_template_name (template_name),\n    INDEX idx_template_type (template_type),\n    INDEX idx_template_category (template_category),\n    INDEX idx_is_active (is_active),\n    INDEX idx_is_default (is_default),\n    INDEX idx_approval_status (approval_status),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同模板表';\n\n-- contract_change表（合同变更表）\nDROP TABLE IF EXISTS contract_change;\nCREATE TABLE contract_change (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '变更ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    change_number VARCHAR(50) NOT NULL COMMENT '变更单号',\n    change_type TINYINT DEFAULT 1 COMMENT '变更类型(1-金额变更,2-期限变更,3-条款变更,4-团队变更,5-其他)',\n    change_reason TEXT COMMENT '变更原因',\n    change_description TEXT COMMENT '变更描述',\n    change_content JSON COMMENT '变更内容(JSON格式)',\n    old_values JSON COMMENT '变更前值(JSON格式)',\n    new_values JSON COMMENT '变更后值(JSON格式)',\n    change_status TINYINT DEFAULT 1 COMMENT '变更状态(1-草稿,2-待审核,3-已审核,4-已生效,5-已拒绝)',\n    initiator_id BIGINT COMMENT '发起人ID',\n    initiator_name VARCHAR(50) COMMENT '发起人姓名',\n    apply_date DATE COMMENT '申请日期',\n    effective_date DATE COMMENT '生效日期',\n    approval_required TINYINT DEFAULT 1 COMMENT '是否需要审批(0-否,1-是)',\n    approval_process_id VARCHAR(64) COMMENT '审批流程ID',\n    impact_assessment TEXT COMMENT '影响评估',\n    risk_assessment TEXT COMMENT '风险评估',\n    rollback_plan TEXT COMMENT '回滚方案',\n    change_cost DECIMAL(12,2) DEFAULT 0 COMMENT '变更成本',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    attachments JSON COMMENT '附件信息(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_change_number (tenant_id, change_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_change_type (change_type),\n    INDEX idx_change_status (change_status),\n    INDEX idx_initiator_id (initiator_id),\n    INDEX idx_apply_date (apply_date),\n    INDEX idx_effective_date (effective_date),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_change_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同变更表';\n\n-- contract_conflict表（合同冲突表）\nDROP TABLE IF EXISTS contract_conflict;\nCREATE TABLE contract_conflict (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '冲突ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    conflict_type TINYINT DEFAULT 1 COMMENT '冲突类型(1-利益冲突,2-时间冲突,3-资源冲突,4-条款冲突,5-其他)',\n    conflict_description TEXT COMMENT '冲突描述',\n    conflict_source TINYINT DEFAULT 1 COMMENT '冲突来源(1-系统检测,2-人工发现,3-客户反馈)',\n    conflict_level TINYINT DEFAULT 2 COMMENT '冲突级别(1-低,2-中,3-高,4-严重)',\n    conflict_status TINYINT DEFAULT 1 COMMENT '冲突状态(1-待处理,2-处理中,3-已解决,4-已忽略)',\n    related_contract_id BIGINT COMMENT '关联冲突合同ID',\n    related_client_id BIGINT COMMENT '关联冲突客户ID',\n    related_case_id BIGINT COMMENT '关联冲突案件ID',\n    detector_id BIGINT COMMENT '发现人ID',\n    detector_name VARCHAR(50) COMMENT '发现人姓名',\n    detect_time DATETIME COMMENT '发现时间',\n    handler_id BIGINT COMMENT '处理人ID',\n    handler_name VARCHAR(50) COMMENT '处理人姓名',\n    handle_time DATETIME COMMENT '处理时间',\n    resolution_plan TEXT COMMENT '解决方案',\n    resolution_result TEXT COMMENT '解决结果',\n    prevention_measures TEXT COMMENT '预防措施',\n    impact_analysis TEXT COMMENT '影响分析',\n    review_required TINYINT DEFAULT 1 COMMENT '是否需要审核(0-否,1-是)',\n    reviewer_id BIGINT COMMENT '审核人ID',\n    review_time DATETIME COMMENT '审核时间',\n    review_opinion TEXT COMMENT '审核意见',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_conflict_type (conflict_type),\n    INDEX idx_conflict_level (conflict_level),\n    INDEX idx_conflict_status (conflict_status),\n    INDEX idx_related_contract_id (related_contract_id),\n    INDEX idx_related_client_id (related_client_id),\n    INDEX idx_detector_id (detector_id),\n    INDEX idx_handler_id (handler_id),\n    INDEX idx_detect_time (detect_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_contract_conflict_contract FOREIGN KEY (contract_id) REFERENCES contract_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同冲突表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 24171
    },
    {
      "path": "law-firm-modules\\law-firm-contract\\src\\main\\resources\\META-INF\\db\\migration\\V6002__init_contract_data.sql",
      "filename": "V6002__init_contract_data.sql",
      "version": 6002,
      "module": "law-firm-modules",
      "content": "-- 合同管理模块基础数据\n-- 版本: V6002\n-- 模块: 合同管理模块 (V6000-V6999)\n-- 创建时间: 2023-06-01\n-- 说明: 合同管理功能的基础数据初始化\n-- 包括：合同相关字典数据、基础模板配置\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 字典类型初始化 =======================\n\nINSERT INTO sys_dict_type (tenant_id, tenant_code, dict_name, dict_type, status, create_time, create_by, remark)\nVALUES\n(NULL, NULL, '合同类型', 'contract_type', 1, NOW(), 'system', '合同类型字典'),\n(NULL, NULL, '合同状态', 'contract_status', 1, NOW(), 'system', '合同状态字典'),\n(NULL, NULL, '收费类型', 'contract_fee_type', 1, NOW(), 'system', '合同收费类型字典'),\n(NULL, NULL, '收费方式', 'contract_fee_category', 1, NOW(), 'system', '合同收费方式字典'),\n(NULL, NULL, '付款状态', 'contract_payment_status', 1, NOW(), 'system', '合同付款状态字典'),\n(NULL, NULL, '团队角色', 'contract_team_role', 1, NOW(), 'system', '合同团队角色字典'),\n(NULL, NULL, '条款类型', 'contract_clause_type', 1, NOW(), 'system', '合同条款类型字典'),\n(NULL, NULL, '审核类型', 'contract_review_type', 1, NOW(), 'system', '合同审核类型字典'),\n(NULL, NULL, '审核状态', 'contract_review_status', 1, NOW(), 'system', '合同审核状态字典'),\n(NULL, NULL, '审批状态', 'contract_approval_status', 1, NOW(), 'system', '合同审批状态字典'),\n(NULL, NULL, '里程碑类型', 'contract_milestone_type', 1, NOW(), 'system', '合同里程碑类型字典'),\n(NULL, NULL, '里程碑状态', 'contract_milestone_status', 1, NOW(), 'system', '合同里程碑状态字典'),\n(NULL, NULL, '变更类型', 'contract_change_type', 1, NOW(), 'system', '合同变更类型字典'),\n(NULL, NULL, '变更状态', 'contract_change_status', 1, NOW(), 'system', '合同变更状态字典'),\n(NULL, NULL, '冲突类型', 'contract_conflict_type', 1, NOW(), 'system', '合同冲突类型字典'),\n(NULL, NULL, '冲突级别', 'contract_conflict_level', 1, NOW(), 'system', '合同冲突级别字典'),\n(NULL, NULL, '冲突状态', 'contract_conflict_status', 1, NOW(), 'system', '合同冲突状态字典'),\n(NULL, NULL, '保密级别', 'contract_confidentiality_level', 1, NOW(), 'system', '合同保密级别字典'),\n(NULL, NULL, '附件类型', 'contract_attachment_type', 1, NOW(), 'system', '合同附件类型字典'),\n(NULL, NULL, '计费周期', 'contract_billing_cycle', 1, NOW(), 'system', '合同计费周期字典')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- ======================= 字典数据初始化 =======================\n\nINSERT INTO sys_dict_data (tenant_id, tenant_code, dict_type, dict_label, dict_value, dict_sort, status, create_time, create_by, remark)\nVALUES \n-- 合同类型\n(NULL, NULL, 'contract_type', '委托代理', '1', 1, 1, NOW(), 'system', '合同类型 - 委托代理'),\n(NULL, NULL, 'contract_type', '法律顾问', '2', 2, 1, NOW(), 'system', '合同类型 - 法律顾问'),\n(NULL, NULL, 'contract_type', '专项服务', '3', 3, 1, NOW(), 'system', '合同类型 - 专项服务'),\n(NULL, NULL, 'contract_type', '其他', '4', 4, 1, NOW(), 'system', '合同类型 - 其他'),\n\n-- 合同状态\n(NULL, NULL, 'contract_status', '草稿', '1', 1, 1, NOW(), 'system', '合同状态 - 草稿'),\n(NULL, NULL, 'contract_status', '待审核', '2', 2, 1, NOW(), 'system', '合同状态 - 待审核'),\n(NULL, NULL, 'contract_status', '已审核', '3', 3, 1, NOW(), 'system', '合同状态 - 已审核'),\n(NULL, NULL, 'contract_status', '已签署', '4', 4, 1, NOW(), 'system', '合同状态 - 已签署'),\n(NULL, NULL, 'contract_status', '执行中', '5', 5, 1, NOW(), 'system', '合同状态 - 执行中'),\n(NULL, NULL, 'contract_status', '已完成', '6', 6, 1, NOW(), 'system', '合同状态 - 已完成'),\n(NULL, NULL, 'contract_status', '已终止', '7', 7, 1, NOW(), 'system', '合同状态 - 已终止'),\n\n-- 收费类型\n(NULL, NULL, 'contract_fee_type', '律师费', '1', 1, 1, NOW(), 'system', '收费类型 - 律师费'),\n(NULL, NULL, 'contract_fee_type', '诉讼费', '2', 2, 1, NOW(), 'system', '收费类型 - 诉讼费'),\n(NULL, NULL, 'contract_fee_type', '差旅费', '3', 3, 1, NOW(), 'system', '收费类型 - 差旅费'),\n(NULL, NULL, 'contract_fee_type', '其他费用', '4', 4, 1, NOW(), 'system', '收费类型 - 其他费用'),\n\n-- 收费方式\n(NULL, NULL, 'contract_fee_category', '固定费用', '1', 1, 1, NOW(), 'system', '收费方式 - 固定费用'),\n(NULL, NULL, 'contract_fee_category', '按小时', '2', 2, 1, NOW(), 'system', '收费方式 - 按小时'),\n(NULL, NULL, 'contract_fee_category', '按比例', '3', 3, 1, NOW(), 'system', '收费方式 - 按比例'),\n(NULL, NULL, 'contract_fee_category', '风险代理', '4', 4, 1, NOW(), 'system', '收费方式 - 风险代理'),\n\n-- 付款状态\n(NULL, NULL, 'contract_payment_status', '未支付', '1', 1, 1, NOW(), 'system', '付款状态 - 未支付'),\n(NULL, NULL, 'contract_payment_status', '部分支付', '2', 2, 1, NOW(), 'system', '付款状态 - 部分支付'),\n(NULL, NULL, 'contract_payment_status', '已支付', '3', 3, 1, NOW(), 'system', '付款状态 - 已支付'),\n(NULL, NULL, 'contract_payment_status', '已退款', '4', 4, 1, NOW(), 'system', '付款状态 - 已退款'),\n\n-- 团队角色\n(NULL, NULL, 'contract_team_role', '主办律师', '1', 1, 1, NOW(), 'system', '团队角色 - 主办律师'),\n(NULL, NULL, 'contract_team_role', '协办律师', '2', 2, 1, NOW(), 'system', '团队角色 - 协办律师'),\n(NULL, NULL, 'contract_team_role', '律师助理', '3', 3, 1, NOW(), 'system', '团队角色 - 律师助理'),\n(NULL, NULL, 'contract_team_role', '实习生', '4', 4, 1, NOW(), 'system', '团队角色 - 实习生'),\n\n-- 条款类型\n(NULL, NULL, 'contract_clause_type', '标准条款', '1', 1, 1, NOW(), 'system', '条款类型 - 标准条款'),\n(NULL, NULL, 'contract_clause_type', '特殊条款', '2', 2, 1, NOW(), 'system', '条款类型 - 特殊条款'),\n(NULL, NULL, 'contract_clause_type', '补充条款', '3', 3, 1, NOW(), 'system', '条款类型 - 补充条款'),\n\n-- 审核类型\n(NULL, NULL, 'contract_review_type', '内容审核', '1', 1, 1, NOW(), 'system', '审核类型 - 内容审核'),\n(NULL, NULL, 'contract_review_type', '法务审核', '2', 2, 1, NOW(), 'system', '审核类型 - 法务审核'),\n(NULL, NULL, 'contract_review_type', '财务审核', '3', 3, 1, NOW(), 'system', '审核类型 - 财务审核'),\n(NULL, NULL, 'contract_review_type', '管理审核', '4', 4, 1, NOW(), 'system', '审核类型 - 管理审核'),\n\n-- 审核状态\n(NULL, NULL, 'contract_review_status', '待审核', '1', 1, 1, NOW(), 'system', '审核状态 - 待审核'),\n(NULL, NULL, 'contract_review_status', '审核通过', '2', 2, 1, NOW(), 'system', '审核状态 - 审核通过'),\n(NULL, NULL, 'contract_review_status', '审核拒绝', '3', 3, 1, NOW(), 'system', '审核状态 - 审核拒绝'),\n(NULL, NULL, 'contract_review_status', '需要修改', '4', 4, 1, NOW(), 'system', '审核状态 - 需要修改'),\n\n-- 审批状态\n(NULL, NULL, 'contract_approval_status', '待审批', '1', 1, 1, NOW(), 'system', '审批状态 - 待审批'),\n(NULL, NULL, 'contract_approval_status', '审批通过', '2', 2, 1, NOW(), 'system', '审批状态 - 审批通过'),\n(NULL, NULL, 'contract_approval_status', '审批拒绝', '3', 3, 1, NOW(), 'system', '审批状态 - 审批拒绝'),\n(NULL, NULL, 'contract_approval_status', '已撤回', '4', 4, 1, NOW(), 'system', '审批状态 - 已撤回'),\n\n-- 里程碑类型\n(NULL, NULL, 'contract_milestone_type', '开始节点', '1', 1, 1, NOW(), 'system', '里程碑类型 - 开始节点'),\n(NULL, NULL, 'contract_milestone_type', '过程节点', '2', 2, 1, NOW(), 'system', '里程碑类型 - 过程节点'),\n(NULL, NULL, 'contract_milestone_type', '结束节点', '3', 3, 1, NOW(), 'system', '里程碑类型 - 结束节点'),\n\n-- 里程碑状态\n(NULL, NULL, 'contract_milestone_status', '未开始', '1', 1, 1, NOW(), 'system', '里程碑状态 - 未开始'),\n(NULL, NULL, 'contract_milestone_status', '进行中', '2', 2, 1, NOW(), 'system', '里程碑状态 - 进行中'),\n(NULL, NULL, 'contract_milestone_status', '已完成', '3', 3, 1, NOW(), 'system', '里程碑状态 - 已完成'),\n(NULL, NULL, 'contract_milestone_status', '已延期', '4', 4, 1, NOW(), 'system', '里程碑状态 - 已延期'),\n(NULL, NULL, 'contract_milestone_status', '已跳过', '5', 5, 1, NOW(), 'system', '里程碑状态 - 已跳过'),\n\n-- 变更类型\n(NULL, NULL, 'contract_change_type', '金额变更', '1', 1, 1, NOW(), 'system', '变更类型 - 金额变更'),\n(NULL, NULL, 'contract_change_type', '期限变更', '2', 2, 1, NOW(), 'system', '变更类型 - 期限变更'),\n(NULL, NULL, 'contract_change_type', '条款变更', '3', 3, 1, NOW(), 'system', '变更类型 - 条款变更'),\n(NULL, NULL, 'contract_change_type', '团队变更', '4', 4, 1, NOW(), 'system', '变更类型 - 团队变更'),\n(NULL, NULL, 'contract_change_type', '其他', '5', 5, 1, NOW(), 'system', '变更类型 - 其他'),\n\n-- 变更状态\n(NULL, NULL, 'contract_change_status', '草稿', '1', 1, 1, NOW(), 'system', '变更状态 - 草稿'),\n(NULL, NULL, 'contract_change_status', '待审核', '2', 2, 1, NOW(), 'system', '变更状态 - 待审核'),\n(NULL, NULL, 'contract_change_status', '已审核', '3', 3, 1, NOW(), 'system', '变更状态 - 已审核'),\n(NULL, NULL, 'contract_change_status', '已生效', '4', 4, 1, NOW(), 'system', '变更状态 - 已生效'),\n(NULL, NULL, 'contract_change_status', '已拒绝', '5', 5, 1, NOW(), 'system', '变更状态 - 已拒绝'),\n\n-- 冲突类型\n(NULL, NULL, 'contract_conflict_type', '利益冲突', '1', 1, 1, NOW(), 'system', '冲突类型 - 利益冲突'),\n(NULL, NULL, 'contract_conflict_type', '时间冲突', '2', 2, 1, NOW(), 'system', '冲突类型 - 时间冲突'),\n(NULL, NULL, 'contract_conflict_type', '资源冲突', '3', 3, 1, NOW(), 'system', '冲突类型 - 资源冲突'),\n(NULL, NULL, 'contract_conflict_type', '条款冲突', '4', 4, 1, NOW(), 'system', '冲突类型 - 条款冲突'),\n(NULL, NULL, 'contract_conflict_type', '其他', '5', 5, 1, NOW(), 'system', '冲突类型 - 其他'),\n\n-- 冲突级别\n(NULL, NULL, 'contract_conflict_level', '低', '1', 1, 1, NOW(), 'system', '冲突级别 - 低'),\n(NULL, NULL, 'contract_conflict_level', '中', '2', 2, 1, NOW(), 'system', '冲突级别 - 中'),\n(NULL, NULL, 'contract_conflict_level', '高', '3', 3, 1, NOW(), 'system', '冲突级别 - 高'),\n(NULL, NULL, 'contract_conflict_level', '严重', '4', 4, 1, NOW(), 'system', '冲突级别 - 严重'),\n\n-- 冲突状态\n(NULL, NULL, 'contract_conflict_status', '待处理', '1', 1, 1, NOW(), 'system', '冲突状态 - 待处理'),\n(NULL, NULL, 'contract_conflict_status', '处理中', '2', 2, 1, NOW(), 'system', '冲突状态 - 处理中'),\n(NULL, NULL, 'contract_conflict_status', '已解决', '3', 3, 1, NOW(), 'system', '冲突状态 - 已解决'),\n(NULL, NULL, 'contract_conflict_status', '已忽略', '4', 4, 1, NOW(), 'system', '冲突状态 - 已忽略'),\n\n-- 保密级别\n(NULL, NULL, 'contract_confidentiality_level', '公开', '1', 1, 1, NOW(), 'system', '保密级别 - 公开'),\n(NULL, NULL, 'contract_confidentiality_level', '内部', '2', 2, 1, NOW(), 'system', '保密级别 - 内部'),\n(NULL, NULL, 'contract_confidentiality_level', '机密', '3', 3, 1, NOW(), 'system', '保密级别 - 机密'),\n(NULL, NULL, 'contract_confidentiality_level', '绝密', '4', 4, 1, NOW(), 'system', '保密级别 - 绝密'),\n\n-- 附件类型\n(NULL, NULL, 'contract_attachment_type', '合同文本', '1', 1, 1, NOW(), 'system', '附件类型 - 合同文本'),\n(NULL, NULL, 'contract_attachment_type', '签署页', '2', 2, 1, NOW(), 'system', '附件类型 - 签署页'),\n(NULL, NULL, 'contract_attachment_type', '补充协议', '3', 3, 1, NOW(), 'system', '附件类型 - 补充协议'),\n(NULL, NULL, 'contract_attachment_type', '其他', '4', 4, 1, NOW(), 'system', '附件类型 - 其他'),\n\n-- 计费周期\n(NULL, NULL, 'contract_billing_cycle', '一次性', '1', 1, 1, NOW(), 'system', '计费周期 - 一次性'),\n(NULL, NULL, 'contract_billing_cycle', '按月', '2', 2, 1, NOW(), 'system', '计费周期 - 按月'),\n(NULL, NULL, 'contract_billing_cycle', '按季', '3', 3, 1, NOW(), 'system', '计费周期 - 按季'),\n(NULL, NULL, 'contract_billing_cycle', '按年', '4', 4, 1, NOW(), 'system', '计费周期 - 按年')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- ======================= 合同模板初始化 =======================\n\nINSERT INTO contract_template (tenant_id, template_name, template_code, template_type, template_category, \n                              template_content, template_version, is_active, is_default, usage_count,\n                              creator_name, approval_status, applicable_scope, usage_instructions,\n                              status, create_time, create_by)\nVALUES\n(0, '法律顾问服务合同模板', 'LEGAL_ADVISOR_TEMPLATE', 2, '顾问服务',\n'甲方（委托方）：{CLIENT_NAME}\\n地址：{CLIENT_ADDRESS}\\n联系电话：{CLIENT_PHONE}\\n\\n乙方（受托方）：{LAW_FIRM_NAME}\\n地址：{LAW_FIRM_ADDRESS}\\n联系电话：{LAW_FIRM_PHONE}\\n\\n根据《中华人民共和国民法典》及相关法律法规，甲乙双方本着平等自愿、诚实信用的原则，经协商一致，就乙方为甲方提供法律顾问服务事宜达成如下协议：\\n\\n第一条 服务内容\\n1. 解答甲方提出的法律咨询\\n2. 审查甲方的规章制度、合同文本等法律文件\\n3. 代理甲方进行法律谈判\\n4. 代理甲方处理纠纷及诉讼事务\\n5. 其他双方约定的法律服务事项\\n\\n第二条 服务期限\\n本合同服务期限为{CONTRACT_PERIOD}，自{START_DATE}起至{END_DATE}止。\\n\\n第三条 服务费用\\n1. 顾问服务费：人民币{TOTAL_AMOUNT}元整（¥{TOTAL_AMOUNT_CN}）\\n2. 支付方式：{PAYMENT_TERMS}\\n\\n第四条 双方权利义务\\n（甲方权利义务及乙方权利义务条款）\\n\\n第五条 保密条款\\n（保密义务相关条款）\\n\\n第六条 违约责任\\n（违约责任相关条款）\\n\\n第七条 争议解决\\n（争议解决方式相关条款）\\n\\n第八条 其他\\n（其他约定条款）\\n\\n甲方（盖章）：           乙方（盖章）：\\n代表人（签字）：         代表人（签字）：\\n日期：                  日期：',\n'1.0', 1, 1, 0, 'system', 2, '适用于常规法律顾问服务',\n'1. 填写客户基本信息\\n2. 确定服务期限和费用\\n3. 根据具体情况调整服务内容\\n4. 审核后生成正式合同',\n1, NOW(), 'system'),\n\n(0, '委托代理合同模板', 'LITIGATION_AGENT_TEMPLATE', 1, '诉讼代理',\n'委托人：{CLIENT_NAME}\\n受托人：{LAW_FIRM_NAME}\\n\\n根据《中华人民共和国民法典》《中华人民共和国律师法》及相关法律法规的规定，委托人与受托人本着自愿、平等、诚实信用的原则，就委托受托人办理诉讼事务达成如下协议：\\n\\n第一条 委托事项\\n委托人委托受托人担任{CASE_NAME}案件的代理人，案由：{CASE_REASON}。\\n\\n第二条 委托权限\\n{DELEGATION_POWER}\\n\\n第三条 委托期限\\n自本合同签订之日起至{CASE_NAME}案件生效法律文书确定的权利义务履行完毕之日止。\\n\\n第四条 代理费用及支付方式\\n1. 代理费：人民币{TOTAL_AMOUNT}元整（¥{TOTAL_AMOUNT_CN}）\\n2. 支付方式：{PAYMENT_TERMS}\\n\\n第五条 双方权利义务\\n（委托人权利义务及受托人权利义务条款）\\n\\n第六条 违约责任\\n（违约责任相关条款）\\n\\n第七条 争议解决\\n（争议解决方式相关条款）\\n\\n第八条 其他\\n（其他约定条款）\\n\\n委托人（盖章）：         受托人（盖章）：\\n代表人（签字）：         代表人（签字）：\\n日期：                  日期：',\n'1.0', 1, 1, 0, 'system', 2, '适用于诉讼案件代理',\n'1. 填写案件基本信息\\n2. 明确委托权限范围\\n3. 确定代理费用\\n4. 审核后生成正式合同',\n1, NOW(), 'system'),\n\n(0, '专项服务合同模板', 'SPECIAL_SERVICE_TEMPLATE', 3, '专项服务',\n'甲方（委托方）：{CLIENT_NAME}\\n乙方（服务方）：{LAW_FIRM_NAME}\\n\\n根据相关法律法规，甲乙双方就{SERVICE_NAME}专项法律服务事宜达成如下协议：\\n\\n第一条 服务内容\\n{SERVICE_SCOPE}\\n\\n第二条 服务期限\\n{SERVICE_PERIOD}\\n\\n第三条 服务费用\\n总费用：人民币{TOTAL_AMOUNT}元整\\n支付方式：{PAYMENT_TERMS}\\n\\n第四条 交付标准\\n{DELIVERY_STANDARDS}\\n\\n第五条 其他条款\\n（根据具体服务内容补充）\\n\\n甲方（盖章）：           乙方（盖章）：\\n代表人（签字）：         代表人（签字）：\\n日期：                  日期：',\n'1.0', 1, 0, 0, 'system', 2, '适用于各类专项法律服务',\n'1. 明确专项服务内容\\n2. 设定交付标准\\n3. 确定服务期限和费用\\n4. 根据具体服务类型调整条款',\n1, NOW(), 'system')\nON DUPLICATE KEY UPDATE template_name = VALUES(template_name); ",
      "size": 12547
    },
    {
      "path": "law-firm-modules\\law-firm-client\\src\\main\\resources\\META-INF\\db\\migration\\V5000__client_module_description.sql",
      "filename": "V5000__client_module_description.sql",
      "version": 5000,
      "module": "law-firm-modules",
      "content": "-- 客户管理模块说明\n-- 版本: V5000\n-- 模块: 客户管理模块 (V5000-V5999)\n-- 创建时间: 2023-06-01\n-- 说明: 客户管理功能模块架构说明\n\n/*\n=============================================================================\n                            客户管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n客户管理模块负责律师事务所的客户信息管理，包括：\n- 客户基础信息管理\n- 客户联系人管理\n- 客户地址管理\n- 客户分类管理\n- 客户标签管理\n- 客户关系管理\n- 客户跟进管理\n\n二、版本规划 (V5000-V5999)\n- V5000: 模块说明文档\n- V5001: 表结构定义\n- V5002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 客户基础信息\n   - client_info: 客户基本信息\n   - client_contact: 客户联系人\n   - client_address: 客户地址\n\n2. 客户分类管理\n   - client_category: 客户分类\n   - client_tag: 客户标签\n   - client_tag_relation: 客户标签关联\n\n3. 客户关系管理\n   - client_relation: 客户关系\n   - client_follow_up: 客户跟进\n\n四、数据关系\n=============================================================================\n- client_info → client_contact (客户联系人)\n- client_info → client_address (客户地址)\n- client_info → client_tag_relation → client_tag (客户标签)\n- client_info → client_relation (客户关系)\n- client_info → client_follow_up (客户跟进)\n\n五、业务特点\n=============================================================================\n1. 多类型客户支持\n   - 个人客户、企业客户、政府机构、社会组织\n   - 灵活的客户分类和标签体系\n\n2. 完整联系信息\n   - 多联系人管理\n   - 多地址管理\n   - 联系方式管理\n\n3. 客户关系网络\n   - 客户间关系管理\n   - 客户推荐关系\n   - 客户等级管理\n\n六、权限设计\n=============================================================================\n客户管理功能权限控制：\n- 客户查看: CLIENT_VIEW\n- 客户管理: CLIENT_MANAGE\n- 客户分类管理: CLIENT_CATEGORY_MANAGE\n- 客户标签管理: CLIENT_TAG_MANAGE\n- 客户关系管理: CLIENT_RELATION_MANAGE\n\n七、注意事项\n=============================================================================\n1. 客户信息涉及商业机密，需严格权限控制\n2. 客户联系信息需要定期更新和验证\n3. 客户分类和标签需要灵活配置\n4. 客户关系变更需要记录操作日志\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 客户管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '客户管理模块说明文档已加载' AS message; ",
      "size": 2078
    },
    {
      "path": "law-firm-modules\\law-firm-client\\src\\main\\resources\\META-INF\\db\\migration\\V5001__init_client_tables.sql",
      "filename": "V5001__init_client_tables.sql",
      "version": 5001,
      "module": "law-firm-modules",
      "content": "-- 客户管理模块表结构\n-- 版本: V5001\n-- 模块: 客户管理模块 (V5000-V5999)\n-- 创建时间: 2023-06-01\n-- 说明: 客户管理功能的完整表结构定义\n-- 包括：客户基础信息、联系人管理、地址管理、分类管理、标签管理、关系管理、跟进管理\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 客户基础信息表 =======================\n\n-- client_info表（客户基本信息表）\nDROP TABLE IF EXISTS client_info;\nCREATE TABLE client_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '客户ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    client_number VARCHAR(50) NOT NULL COMMENT '客户编号',\n    client_name VARCHAR(100) NOT NULL COMMENT '客户名称',\n    client_type TINYINT DEFAULT 1 COMMENT '客户类型(1-个人客户,2-企业客户,3-政府机构,4-社会组织)',\n    client_level TINYINT DEFAULT 1 COMMENT '客户等级(1-普通客户,2-重要客户,3-VIP客户)',\n    client_source TINYINT DEFAULT 1 COMMENT '客户来源(1-主动咨询,2-同行推荐,3-客户推荐,4-广告宣传,5-老客户)',\n    industry VARCHAR(50) COMMENT '所属行业',\n    scale VARCHAR(50) COMMENT '客户规模',\n    phone VARCHAR(20) COMMENT '联系电话',\n    email VARCHAR(100) COMMENT '电子邮箱',\n    manager_id BIGINT COMMENT '负责人ID',\n    manager_name VARCHAR(50) COMMENT '负责人姓名',\n    id_type TINYINT COMMENT '证件类型(1-身份证,2-护照,3-营业执照,4-其他)',\n    id_number VARCHAR(50) COMMENT '证件号码',\n    credit_level VARCHAR(2) COMMENT '信用等级(A/B/C/D)',\n    legal_representative VARCHAR(50) COMMENT '法定代表人',\n    unified_social_credit_code VARCHAR(50) COMMENT '统一社会信用代码',\n    case_count INT DEFAULT 0 COMMENT '案件总数',\n    active_case_count INT DEFAULT 0 COMMENT '活跃案件数',\n    contract_count INT DEFAULT 0 COMMENT '合同总数',\n    total_amount DECIMAL(15,2) DEFAULT 0 COMMENT '总金额',\n    last_contact_time DATETIME COMMENT '最后联系时间',\n    next_follow_time DATETIME COMMENT '下次跟进时间',\n    customer_service_id BIGINT COMMENT '客服人员ID',\n    customer_service_name VARCHAR(50) COMMENT '客服人员姓名',\n    tags JSON COMMENT '客户标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_client_number (tenant_id, client_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_client_name (client_name),\n    INDEX idx_client_type (client_type),\n    INDEX idx_client_level (client_level),\n    INDEX idx_client_source (client_source),\n    INDEX idx_manager_id (manager_id),\n    INDEX idx_id_number (id_number),\n    INDEX idx_credit_level (credit_level),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户基本信息表';\n\n-- client_contact表（客户联系人表）\nDROP TABLE IF EXISTS client_contact;\nCREATE TABLE client_contact (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '联系人ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    contact_name VARCHAR(50) NOT NULL COMMENT '联系人姓名',\n    contact_type TINYINT DEFAULT 1 COMMENT '联系人类型(1-法定代表人,2-业务联系人,3-财务联系人,4-其他)',\n    department VARCHAR(50) COMMENT '所属部门',\n    position VARCHAR(50) COMMENT '职务职位',\n    mobile VARCHAR(20) COMMENT '手机号码',\n    telephone VARCHAR(20) COMMENT '固定电话',\n    email VARCHAR(100) COMMENT '电子邮箱',\n    wechat VARCHAR(50) COMMENT '微信号',\n    qq VARCHAR(20) COMMENT 'QQ号',\n    importance TINYINT DEFAULT 1 COMMENT '重要程度(1-普通,2-重要,3-非常重要)',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认联系人(0-否,1-是)',\n    gender TINYINT COMMENT '性别(1-男,2-女)',\n    birth_date DATE COMMENT '出生日期',\n    education VARCHAR(50) COMMENT '学历',\n    hobby VARCHAR(255) COMMENT '兴趣爱好',\n    last_contact_time DATETIME COMMENT '最后联系时间',\n    contact_frequency VARCHAR(20) COMMENT '联系频率',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-无效,1-有效)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_contact_name (contact_name),\n    INDEX idx_contact_type (contact_type),\n    INDEX idx_mobile (mobile),\n    INDEX idx_is_default (is_default),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_client_contact_client FOREIGN KEY (client_id) REFERENCES client_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户联系人表';\n\n-- client_address表（客户地址表）\nDROP TABLE IF EXISTS client_address;\nCREATE TABLE client_address (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '地址ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    address_type TINYINT DEFAULT 1 COMMENT '地址类型(1-注册地址,2-办公地址,3-收件地址,4-开票地址,5-其他)',\n    country VARCHAR(50) DEFAULT '中国' COMMENT '国家地区',\n    province VARCHAR(50) COMMENT '省份',\n    city VARCHAR(50) COMMENT '城市',\n    district VARCHAR(50) COMMENT '区县',\n    address VARCHAR(255) NOT NULL COMMENT '详细地址',\n    postcode VARCHAR(20) COMMENT '邮政编码',\n    longitude DECIMAL(10,7) COMMENT '经度',\n    latitude DECIMAL(10,7) COMMENT '纬度',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认地址(0-否,1-是)',\n    address_tag VARCHAR(50) COMMENT '地址标签',\n    contact_person VARCHAR(50) COMMENT '联系人',\n    contact_phone VARCHAR(20) COMMENT '联系电话',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-无效,1-有效)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_address_type (address_type),\n    INDEX idx_province_city (province, city),\n    INDEX idx_is_default (is_default),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_client_address_client FOREIGN KEY (client_id) REFERENCES client_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户地址表';\n\n-- ======================= 客户分类管理表 =======================\n\n-- client_category表（客户分类表）\nDROP TABLE IF EXISTS client_category;\nCREATE TABLE client_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(50) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    parent_id BIGINT DEFAULT 0 COMMENT '上级分类ID',\n    category_path VARCHAR(255) COMMENT '分类路径',\n    description VARCHAR(255) COMMENT '分类描述',\n    sort INT DEFAULT 0 COMMENT '排序权重',\n    allow_select TINYINT DEFAULT 1 COMMENT '是否允许选择(0-否,1-是)',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统预置(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-启用)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort (sort),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户分类表';\n\n-- client_tag表（客户标签表）\nDROP TABLE IF EXISTS client_tag;\nCREATE TABLE client_tag (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tag_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    tag_code VARCHAR(50) NOT NULL COMMENT '标签编码',\n    color VARCHAR(20) COMMENT '标签颜色',\n    tag_type VARCHAR(30) COMMENT '标签类型',\n    description VARCHAR(255) COMMENT '标签描述',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    sort INT DEFAULT 0 COMMENT '排序',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统预置(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-启用)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_tag_code (tenant_id, tag_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_tag_name (tag_name),\n    INDEX idx_tag_type (tag_type),\n    INDEX idx_sort (sort),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户标签表';\n\n-- client_tag_relation表（客户标签关联表）\nDROP TABLE IF EXISTS client_tag_relation;\nCREATE TABLE client_tag_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    tag_id BIGINT NOT NULL COMMENT '标签ID',\n    tag_value VARCHAR(100) COMMENT '标签值',\n    effective_time DATETIME COMMENT '生效时间',\n    expiry_time DATETIME COMMENT '失效时间',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    \n    UNIQUE KEY uk_client_tag (client_id, tag_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_tag_id (tag_id),\n    \n    CONSTRAINT fk_client_tag_relation_client FOREIGN KEY (client_id) REFERENCES client_info(id) ON DELETE CASCADE,\n    CONSTRAINT fk_client_tag_relation_tag FOREIGN KEY (tag_id) REFERENCES client_tag(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户标签关联表';\n\n-- ======================= 客户关系管理表 =======================\n\n-- client_relation表（客户关系表）\nDROP TABLE IF EXISTS client_relation;\nCREATE TABLE client_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关系ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    relation_type TINYINT NOT NULL COMMENT '关系类型(1-推荐关系,2-合作关系,3-竞争关系,4-上下游关系,5-其他)',\n    source_client_id BIGINT NOT NULL COMMENT '源客户ID',\n    target_client_id BIGINT NOT NULL COMMENT '目标客户ID',\n    relation_desc VARCHAR(255) COMMENT '关系描述',\n    start_time DATETIME COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    effective_time DATETIME COMMENT '生效时间',\n    expiry_time DATETIME COMMENT '失效时间',\n    priority TINYINT DEFAULT 0 COMMENT '优先级(1-低,2-中,3-高)',\n    attributes JSON COMMENT '关系属性(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-停用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_source_client_id (source_client_id),\n    INDEX idx_target_client_id (target_client_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_client_relation_source FOREIGN KEY (source_client_id) REFERENCES client_info(id) ON DELETE CASCADE,\n    CONSTRAINT fk_client_relation_target FOREIGN KEY (target_client_id) REFERENCES client_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户关系表';\n\n-- client_follow_up表（客户跟进表）\nDROP TABLE IF EXISTS client_follow_up;\nCREATE TABLE client_follow_up (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '跟进ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    client_id BIGINT NOT NULL COMMENT '客户ID',\n    follow_type TINYINT DEFAULT 1 COMMENT '跟进类型(1-电话跟进,2-邮件跟进,3-实地拜访,4-会议沟通,5-其他)',\n    follow_title VARCHAR(100) NOT NULL COMMENT '跟进标题',\n    follow_content TEXT COMMENT '跟进内容',\n    follow_time DATETIME NOT NULL COMMENT '跟进时间',\n    follower_id BIGINT NOT NULL COMMENT '跟进人ID',\n    follower_name VARCHAR(50) COMMENT '跟进人姓名',\n    contact_person VARCHAR(50) COMMENT '联系人',\n    result TINYINT COMMENT '跟进结果(1-成功,2-失败,3-待定)',\n    next_follow_time DATETIME COMMENT '下次跟进时间',\n    next_follow_plan TEXT COMMENT '下次跟进计划',\n    importance TINYINT DEFAULT 2 COMMENT '重要性(1-低,2-中,3-高)',\n    satisfaction TINYINT COMMENT '满意度(1-不满意,2-一般,3-满意,4-非常满意)',\n    attachments JSON COMMENT '附件信息(JSON格式)',\n    tags JSON COMMENT '跟进标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_client_id (client_id),\n    INDEX idx_follow_type (follow_type),\n    INDEX idx_follow_time (follow_time),\n    INDEX idx_follower_id (follower_id),\n    INDEX idx_next_follow_time (next_follow_time),\n    INDEX idx_result (result),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_client_follow_up_client FOREIGN KEY (client_id) REFERENCES client_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='客户跟进表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 13886
    },
    {
      "path": "law-firm-modules\\law-firm-client\\src\\main\\resources\\META-INF\\db\\migration\\V5002__init_client_data.sql",
      "filename": "V5002__init_client_data.sql",
      "version": 5002,
      "module": "law-firm-modules",
      "content": "-- 客户管理模块基础数据\n-- 版本: V5002\n-- 模块: 客户管理模块 (V5000-V5999)\n-- 创建时间: 2023-06-01\n-- 说明: 客户管理功能的基础数据初始化\n-- 包括：客户相关字典数据、基础分类、标签配置\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 字典类型初始化 =======================\n\nINSERT INTO sys_dict_type (tenant_id, tenant_code, dict_name, dict_type, status, create_time, create_by, remark)\nVALUES\n(NULL, NULL, '客户类型', 'client_type', 1, NOW(), 'system', '客户类型字典'),\n(NULL, NULL, '客户等级', 'client_level', 1, NOW(), 'system', '客户等级字典'),\n(NULL, NULL, '客户来源', 'client_source', 1, NOW(), 'system', '客户来源字典'),\n(NULL, NULL, '客户状态', 'client_status', 1, NOW(), 'system', '客户状态字典'),\n(NULL, NULL, '证件类型', 'client_id_type', 1, NOW(), 'system', '客户证件类型字典'),\n(NULL, NULL, '信用等级', 'client_credit_level', 1, NOW(), 'system', '客户信用等级字典'),\n(NULL, NULL, '联系人类型', 'client_contact_type', 1, NOW(), 'system', '客户联系人类型字典'),\n(NULL, NULL, '地址类型', 'client_address_type', 1, NOW(), 'system', '客户地址类型字典'),\n(NULL, NULL, '关系类型', 'client_relation_type', 1, NOW(), 'system', '客户关系类型字典'),\n(NULL, NULL, '跟进类型', 'client_follow_type', 1, NOW(), 'system', '客户跟进类型字典'),\n(NULL, NULL, '跟进结果', 'client_follow_result', 1, NOW(), 'system', '客户跟进结果字典')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- ======================= 字典数据初始化 =======================\n\nINSERT INTO sys_dict_data (tenant_id, tenant_code, dict_type, dict_label, dict_value, dict_sort, status, create_time, create_by, remark)\nVALUES \n-- 客户类型\n(NULL, NULL, 'client_type', '个人客户', '1', 1, 1, NOW(), 'system', '客户类型 - 个人客户'),\n(NULL, NULL, 'client_type', '企业客户', '2', 2, 1, NOW(), 'system', '客户类型 - 企业客户'),\n(NULL, NULL, 'client_type', '政府机构', '3', 3, 1, NOW(), 'system', '客户类型 - 政府机构'),\n(NULL, NULL, 'client_type', '社会组织', '4', 4, 1, NOW(), 'system', '客户类型 - 社会组织'),\n\n-- 客户等级\n(NULL, NULL, 'client_level', '普通客户', '1', 1, 1, NOW(), 'system', '客户等级 - 普通客户'),\n(NULL, NULL, 'client_level', '重要客户', '2', 2, 1, NOW(), 'system', '客户等级 - 重要客户'),\n(NULL, NULL, 'client_level', 'VIP客户', '3', 3, 1, NOW(), 'system', '客户等级 - VIP客户'),\n\n-- 客户来源\n(NULL, NULL, 'client_source', '主动咨询', '1', 1, 1, NOW(), 'system', '客户来源 - 主动咨询'),\n(NULL, NULL, 'client_source', '同行推荐', '2', 2, 1, NOW(), 'system', '客户来源 - 同行推荐'),\n(NULL, NULL, 'client_source', '客户推荐', '3', 3, 1, NOW(), 'system', '客户来源 - 客户推荐'),\n(NULL, NULL, 'client_source', '广告宣传', '4', 4, 1, NOW(), 'system', '客户来源 - 广告宣传'),\n(NULL, NULL, 'client_source', '老客户', '5', 5, 1, NOW(), 'system', '客户来源 - 老客户'),\n\n-- 客户状态\n(NULL, NULL, 'client_status', '正常', '1', 1, 1, NOW(), 'system', '客户状态 - 正常'),\n(NULL, NULL, 'client_status', '禁用', '0', 2, 1, NOW(), 'system', '客户状态 - 禁用'),\n\n-- 证件类型\n(NULL, NULL, 'client_id_type', '身份证', '1', 1, 1, NOW(), 'system', '证件类型 - 身份证'),\n(NULL, NULL, 'client_id_type', '护照', '2', 2, 1, NOW(), 'system', '证件类型 - 护照'),\n(NULL, NULL, 'client_id_type', '营业执照', '3', 3, 1, NOW(), 'system', '证件类型 - 营业执照'),\n(NULL, NULL, 'client_id_type', '其他', '4', 4, 1, NOW(), 'system', '证件类型 - 其他'),\n\n-- 信用等级\n(NULL, NULL, 'client_credit_level', 'A级', 'A', 1, 1, NOW(), 'system', '信用等级 - A级'),\n(NULL, NULL, 'client_credit_level', 'B级', 'B', 2, 1, NOW(), 'system', '信用等级 - B级'),\n(NULL, NULL, 'client_credit_level', 'C级', 'C', 3, 1, NOW(), 'system', '信用等级 - C级'),\n(NULL, NULL, 'client_credit_level', 'D级', 'D', 4, 1, NOW(), 'system', '信用等级 - D级'),\n\n-- 联系人类型\n(NULL, NULL, 'client_contact_type', '法定代表人', '1', 1, 1, NOW(), 'system', '联系人类型 - 法定代表人'),\n(NULL, NULL, 'client_contact_type', '业务联系人', '2', 2, 1, NOW(), 'system', '联系人类型 - 业务联系人'),\n(NULL, NULL, 'client_contact_type', '财务联系人', '3', 3, 1, NOW(), 'system', '联系人类型 - 财务联系人'),\n(NULL, NULL, 'client_contact_type', '其他', '4', 4, 1, NOW(), 'system', '联系人类型 - 其他'),\n\n-- 地址类型\n(NULL, NULL, 'client_address_type', '注册地址', '1', 1, 1, NOW(), 'system', '地址类型 - 注册地址'),\n(NULL, NULL, 'client_address_type', '办公地址', '2', 2, 1, NOW(), 'system', '地址类型 - 办公地址'),\n(NULL, NULL, 'client_address_type', '收件地址', '3', 3, 1, NOW(), 'system', '地址类型 - 收件地址'),\n(NULL, NULL, 'client_address_type', '开票地址', '4', 4, 1, NOW(), 'system', '地址类型 - 开票地址'),\n(NULL, NULL, 'client_address_type', '其他', '5', 5, 1, NOW(), 'system', '地址类型 - 其他'),\n\n-- 关系类型\n(NULL, NULL, 'client_relation_type', '推荐关系', '1', 1, 1, NOW(), 'system', '关系类型 - 推荐关系'),\n(NULL, NULL, 'client_relation_type', '合作关系', '2', 2, 1, NOW(), 'system', '关系类型 - 合作关系'),\n(NULL, NULL, 'client_relation_type', '竞争关系', '3', 3, 1, NOW(), 'system', '关系类型 - 竞争关系'),\n(NULL, NULL, 'client_relation_type', '上下游关系', '4', 4, 1, NOW(), 'system', '关系类型 - 上下游关系'),\n(NULL, NULL, 'client_relation_type', '其他', '5', 5, 1, NOW(), 'system', '关系类型 - 其他'),\n\n-- 跟进类型\n(NULL, NULL, 'client_follow_type', '电话跟进', '1', 1, 1, NOW(), 'system', '跟进类型 - 电话跟进'),\n(NULL, NULL, 'client_follow_type', '邮件跟进', '2', 2, 1, NOW(), 'system', '跟进类型 - 邮件跟进'),\n(NULL, NULL, 'client_follow_type', '实地拜访', '3', 3, 1, NOW(), 'system', '跟进类型 - 实地拜访'),\n(NULL, NULL, 'client_follow_type', '会议沟通', '4', 4, 1, NOW(), 'system', '跟进类型 - 会议沟通'),\n(NULL, NULL, 'client_follow_type', '其他', '5', 5, 1, NOW(), 'system', '跟进类型 - 其他'),\n\n-- 跟进结果\n(NULL, NULL, 'client_follow_result', '成功', '1', 1, 1, NOW(), 'system', '跟进结果 - 成功'),\n(NULL, NULL, 'client_follow_result', '失败', '2', 2, 1, NOW(), 'system', '跟进结果 - 失败'),\n(NULL, NULL, 'client_follow_result', '待定', '3', 3, 1, NOW(), 'system', '跟进结果 - 待定')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- ======================= 客户分类初始化 =======================\n\nINSERT INTO client_category (tenant_id, category_name, category_code, level, parent_id, category_path, description, sort, status, allow_select, is_system, create_time, create_by)\nVALUES\n(0, '客户分类', 'ROOT', 1, 0, '/ROOT', '客户分类根节点', 1, 1, 0, 1, NOW(), 'system'),\n(0, '个人客户', 'INDIVIDUAL', 2, 1, '/ROOT/INDIVIDUAL', '个人客户分类', 1, 1, 1, 1, NOW(), 'system'),\n(0, '企业客户', 'ENTERPRISE', 2, 1, '/ROOT/ENTERPRISE', '企业客户分类', 2, 1, 1, 1, NOW(), 'system'),\n(0, '政府机构', 'GOVERNMENT', 2, 1, '/ROOT/GOVERNMENT', '政府机构分类', 3, 1, 1, 1, NOW(), 'system'),\n(0, '社会组织', 'ORGANIZATION', 2, 1, '/ROOT/ORGANIZATION', '社会组织分类', 4, 1, 1, 1, NOW(), 'system'),\n-- 企业客户子分类\n(0, '大型企业', 'LARGE_ENTERPRISE', 3, 3, '/ROOT/ENTERPRISE/LARGE', '大型企业客户', 1, 1, 1, 1, NOW(), 'system'),\n(0, '中小企业', 'SME', 3, 3, '/ROOT/ENTERPRISE/SME', '中小企业客户', 2, 1, 1, 1, NOW(), 'system'),\n(0, '初创企业', 'STARTUP', 3, 3, '/ROOT/ENTERPRISE/STARTUP', '初创企业客户', 3, 1, 1, 1, NOW(), 'system')\nON DUPLICATE KEY UPDATE category_name = VALUES(category_name);\n\n-- ======================= 客户标签初始化 =======================\n\nINSERT INTO client_tag (tenant_id, tag_name, tag_code, color, tag_type, description, sort, is_system, status, create_time, create_by)\nVALUES\n(0, '重点客户', 'VIP_CLIENT', '#FF0000', 'LEVEL', '重点客户标签', 1, 1, 1, NOW(), 'system'),\n(0, '长期合作', 'LONG_TERM', '#00FF00', 'COOPERATION', '长期合作客户', 2, 1, 1, NOW(), 'system'),\n(0, '潜在客户', 'POTENTIAL', '#0000FF', 'POTENTIAL', '潜在客户标签', 3, 1, 1, NOW(), 'system'),\n(0, '待开发', 'TO_DEVELOP', '#FFA500', 'POTENTIAL', '待开发客户', 4, 1, 1, NOW(), 'system'),\n(0, '高价值', 'HIGH_VALUE', '#800080', 'VALUE', '高价值客户', 5, 1, 1, NOW(), 'system'),\n(0, '优质客户', 'QUALITY', '#008000', 'LEVEL', '优质客户标签', 6, 1, 1, NOW(), 'system'),\n(0, '战略客户', 'STRATEGIC', '#FF1493', 'LEVEL', '战略客户标签', 7, 1, 1, NOW(), 'system'),\n(0, '信用良好', 'GOOD_CREDIT', '#32CD32', 'CREDIT', '信用良好客户', 8, 1, 1, NOW(), 'system'),\n(0, '频繁联系', 'FREQUENT', '#FF69B4', 'FREQUENCY', '频繁联系客户', 9, 1, 1, NOW(), 'system'),\n(0, '新客户', 'NEW_CLIENT', '#FFD700', 'STATUS', '新客户标签', 10, 1, 1, NOW(), 'system')\nON DUPLICATE KEY UPDATE tag_name = VALUES(tag_name); ",
      "size": 7395
    },
    {
      "path": "law-firm-modules\\law-firm-case\\src\\main\\resources\\META-INF\\db\\migration\\V4000__case_module_description.sql",
      "filename": "V4000__case_module_description.sql",
      "version": 4000,
      "module": "law-firm-modules",
      "content": "-- 案件管理模块说明\n-- 版本: V4000\n-- 模块: 案件管理模块 (V4000-V4999)\n-- 创建时间: 2023-06-01\n-- 说明: 案件管理功能模块架构说明\n\n/*\n=============================================================================\n                            案件管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n案件管理模块负责律师事务所的案件业务管理，包括：\n- 案件基础信息管理\n- 案件详细信息管理\n- 案件参与人管理\n- 案件团队管理\n- 案件费用管理\n- 案件文档管理\n- 案件任务管理\n- 案件事件管理\n\n二、版本规划 (V4000-V4999)\n- V4000: 模块说明文档\n- V4001: 表结构定义\n- V4002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 案件基础信息\n   - case_info: 案件基本信息(简化核心字段)\n   - case_detail: 案件详细信息\n   - case_fee: 案件费用信息\n\n2. 案件团队管理\n   - case_team: 案件团队配置\n   - case_participant: 案件参与人\n\n3. 案件执行管理\n   - case_task: 案件任务\n   - case_document: 案件文档\n   - case_event: 案件事件记录\n\n四、数据关系\n=============================================================================\n- case_info → case_detail (案件详细信息)\n- case_info → case_fee (案件费用)\n- case_info → case_team (案件团队)\n- case_info → case_participant (案件参与人)\n- case_info → case_task (案件任务)\n- case_info → case_document (案件文档)\n- case_info → case_event (案件事件)\n\n五、业务特点\n=============================================================================\n1. 数据结构规范化\n   - 将原有庞大的case_info表(55+字段)拆分为8个逻辑表\n   - 实现案件信息结构化管理\n\n2. 完整业务流程\n   - 从案件接收到结案的全流程管理\n   - 详细的案件进展和状态跟踪\n\n3. 多维度管理\n   - 支持案件分类、优先级、状态管理\n   - 灵活的团队配置和权限控制\n\n六、权限设计\n=============================================================================\n案件管理功能权限控制：\n- 案件查看: CASE_VIEW\n- 案件管理: CASE_MANAGE\n- 案件分配: CASE_ASSIGN\n- 费用管理: CASE_FEE_MANAGE\n- 文档管理: CASE_DOC_MANAGE\n- 任务管理: CASE_TASK_MANAGE\n\n七、状态流转\n=============================================================================\n案件状态流转：\n1. 待接收 → 2. 进行中 → 3. 已完成 → 4. 已关闭\n           ↓\n        5. 已暂停 → 2. 进行中\n\n八、注意事项\n=============================================================================\n1. 案件信息涉及法律机密，需严格保密管理\n2. 案件状态变更需要记录完整的操作日志\n3. 案件文档需要版本控制和权限管理\n4. 费用信息需要准确核算和定期对账\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 业务管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '案件管理模块说明文档已加载' AS message; ",
      "size": 2275
    },
    {
      "path": "law-firm-modules\\law-firm-case\\src\\main\\resources\\META-INF\\db\\migration\\V4001__init_case_tables.sql",
      "filename": "V4001__init_case_tables.sql",
      "version": 4001,
      "module": "law-firm-modules",
      "content": "-- 案件管理模块表结构\n-- 版本: V4001\n-- 模块: 案件管理模块 (V4000-V4999)\n-- 创建时间: 2023-06-01\n-- 说明: 案件管理功能的完整表结构定义\n-- 包括：案件基础信息、案件详情、费用管理、团队管理、参与方管理、任务管理、文档管理、事件管理\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 案件核心表 =======================\n\n-- case_info表（案件基本信息表）\nDROP TABLE IF EXISTS case_info;\nCREATE TABLE case_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '案件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_number VARCHAR(50) NOT NULL COMMENT '案件编号',\n    case_name VARCHAR(200) NOT NULL COMMENT '案件名称',\n    case_type TINYINT NOT NULL COMMENT '案件类型(1-民事,2-刑事,3-行政,4-仲裁,5-非诉)',\n    case_status TINYINT DEFAULT 1 COMMENT '案件状态(1-待受理,2-进行中,3-已结案,4-已关闭)',\n    case_stage TINYINT COMMENT '案件阶段(1-立案,2-调查,3-开庭,4-执行,5-结案)',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    difficulty TINYINT DEFAULT 2 COMMENT '难度(1-简单,2-一般,3-复杂,4-疑难)',\n    client_id BIGINT COMMENT '委托人ID',\n    primary_lawyer_id BIGINT COMMENT '主办律师ID',\n    department_id BIGINT COMMENT '承办部门ID',\n    case_source TINYINT COMMENT '案件来源(1-新客户,2-老客户,3-转介绍,4-公益)',\n    description TEXT COMMENT '案件描述',\n    filing_date DATE COMMENT '立案日期',\n    expected_close_date DATE COMMENT '预计结案日期',\n    actual_close_date DATE COMMENT '实际结案日期',\n    result TINYINT COMMENT '案件结果(1-胜诉,2-败诉,3-和解,4-调解,5-撤诉)',\n    is_confidential TINYINT DEFAULT 0 COMMENT '是否保密(0-否,1-是)',\n    has_conflict TINYINT DEFAULT 0 COMMENT '是否有利益冲突(0-否,1-是)',\n    tags JSON COMMENT '案件标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_case_number (tenant_id, case_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_type (case_type),\n    INDEX idx_case_status (case_status),\n    INDEX idx_case_stage (case_stage),\n    INDEX idx_priority (priority),\n    INDEX idx_client_id (client_id),\n    INDEX idx_primary_lawyer_id (primary_lawyer_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_filing_date (filing_date),\n    INDEX idx_expected_close_date (expected_close_date),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件基本信息表';\n\n-- case_detail表（案件详细信息表）\nDROP TABLE IF EXISTS case_detail;\nCREATE TABLE case_detail (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '详情ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    court_name VARCHAR(100) COMMENT '法院/仲裁机构',\n    court_case_number VARCHAR(100) COMMENT '案号',\n    judge_name VARCHAR(50) COMMENT '法官/仲裁员',\n    opposing_party VARCHAR(100) COMMENT '对方当事人',\n    case_summary TEXT COMMENT '案件概要',\n    dispute_focus TEXT COMMENT '争议焦点',\n    legal_basis TEXT COMMENT '法律依据',\n    case_analysis TEXT COMMENT '案件分析',\n    risk_assessment TEXT COMMENT '风险评估',\n    strategy TEXT COMMENT '办案策略',\n    evidence_summary TEXT COMMENT '证据总结',\n    timeline JSON COMMENT '案件时间线(JSON格式)',\n    related_laws JSON COMMENT '相关法条(JSON格式)',\n    keywords JSON COMMENT '关键词(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_case_id (case_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_court_name (court_name),\n    INDEX idx_court_case_number (court_case_number),\n    \n    CONSTRAINT fk_case_detail_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件详细信息表';\n\n-- case_fee表（案件费用表）\nDROP TABLE IF EXISTS case_fee;\nCREATE TABLE case_fee (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '费用ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    fee_type TINYINT NOT NULL COMMENT '费用类型(1-律师费,2-诉讼费,3-差旅费,4-其他)',\n    fee_category TINYINT COMMENT '收费方式(1-固定费用,2-按小时,3-按比例,4-风险代理)',\n    estimated_amount DECIMAL(12,2) COMMENT '预估金额',\n    actual_amount DECIMAL(12,2) COMMENT '实际金额',\n    paid_amount DECIMAL(12,2) DEFAULT 0 COMMENT '已付金额',\n    currency VARCHAR(10) DEFAULT 'CNY' COMMENT '币种',\n    fee_description TEXT COMMENT '费用说明',\n    billing_cycle TINYINT COMMENT '计费周期(1-一次性,2-按月,3-按季,4-按年)',\n    payment_terms TEXT COMMENT '付款条件',\n    discount_rate DECIMAL(5,2) DEFAULT 0 COMMENT '折扣率',\n    tax_rate DECIMAL(5,2) DEFAULT 0 COMMENT '税率',\n    fee_status TINYINT DEFAULT 1 COMMENT '费用状态(1-待收,2-部分收取,3-已收取,4-减免)',\n    due_date DATE COMMENT '应收日期',\n    payment_date DATE COMMENT '实收日期',\n    invoice_required TINYINT DEFAULT 1 COMMENT '是否需要发票(0-否,1-是)',\n    invoice_issued TINYINT DEFAULT 0 COMMENT '是否已开票(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_fee_type (fee_type),\n    INDEX idx_fee_status (fee_status),\n    INDEX idx_due_date (due_date),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_case_fee_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件费用表';\n\n-- case_team表（案件团队表）\nDROP TABLE IF EXISTS case_team;\nCREATE TABLE case_team (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '团队ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    employee_id BIGINT NOT NULL COMMENT '律师/员工ID',\n    role_type TINYINT DEFAULT 1 COMMENT '角色类型(1-主办律师,2-协办律师,3-律师助理,4-实习生)',\n    responsibility TEXT COMMENT '职责描述',\n    workload_percentage DECIMAL(5,2) DEFAULT 0 COMMENT '工作量占比',\n    profit_percentage DECIMAL(5,2) DEFAULT 0 COMMENT '收益分配比例',\n    join_date DATE COMMENT '加入日期',\n    exit_date DATE COMMENT '退出日期',\n    is_active TINYINT DEFAULT 1 COMMENT '是否活跃(0-否,1-是)',\n    permission_level TINYINT DEFAULT 1 COMMENT '权限级别(1-只读,2-编辑,3-管理)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_case_employee (case_id, employee_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_employee_id (employee_id),\n    INDEX idx_role_type (role_type),\n    INDEX idx_is_active (is_active),\n    \n    CONSTRAINT fk_case_team_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件团队表';\n\n-- case_participant表（案件参与方表）\nDROP TABLE IF EXISTS case_participant;\nCREATE TABLE case_participant (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '参与方ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    participant_type TINYINT NOT NULL COMMENT '参与方类型(1-原告,2-被告,3-第三人,4-证人,5-鉴定人)',\n    participant_name VARCHAR(100) NOT NULL COMMENT '参与方名称',\n    is_organization TINYINT DEFAULT 0 COMMENT '是否为组织(0-个人,1-组织)',\n    id_type TINYINT COMMENT '证件类型(1-身份证,2-护照,3-营业执照)',\n    id_number VARCHAR(50) COMMENT '证件号码',\n    legal_representative VARCHAR(50) COMMENT '法定代表人',\n    contact_person VARCHAR(50) COMMENT '联系人',\n    contact_phone VARCHAR(20) COMMENT '联系电话',\n    contact_email VARCHAR(100) COMMENT '联系邮箱',\n    contact_address VARCHAR(255) COMMENT '联系地址',\n    role_description TEXT COMMENT '角色说明',\n    is_primary TINYINT DEFAULT 0 COMMENT '是否主要参与方(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_participant_type (participant_type),\n    INDEX idx_participant_name (participant_name),\n    INDEX idx_is_primary (is_primary),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_case_participant_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件参与方表';\n\n-- case_task表（案件任务表）\nDROP TABLE IF EXISTS case_task;\nCREATE TABLE case_task (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '任务ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    task_name VARCHAR(100) NOT NULL COMMENT '任务名称',\n    task_type TINYINT DEFAULT 1 COMMENT '任务类型(1-文件准备,2-法律研究,3-客户沟通,4-证据收集,5-出庭准备)',\n    task_description TEXT COMMENT '任务描述',\n    assignee_id BIGINT COMMENT '指派人ID',\n    assignee_name VARCHAR(50) COMMENT '指派人姓名',\n    assigned_to_id BIGINT NOT NULL COMMENT '执行人ID',\n    assigned_to_name VARCHAR(50) COMMENT '执行人姓名',\n    task_priority TINYINT DEFAULT 2 COMMENT '任务优先级(1-低,2-中,3-高,4-紧急)',\n    task_status TINYINT DEFAULT 1 COMMENT '任务状态(1-待处理,2-进行中,3-已完成,4-已取消)',\n    start_date DATE COMMENT '开始日期',\n    due_date DATE COMMENT '截止日期',\n    complete_date DATE COMMENT '完成日期',\n    estimated_hours DECIMAL(5,2) COMMENT '预估工时',\n    actual_hours DECIMAL(5,2) COMMENT '实际工时',\n    completion_percentage DECIMAL(5,2) DEFAULT 0 COMMENT '完成进度',\n    completion_notes TEXT COMMENT '完成说明',\n    dependencies JSON COMMENT '依赖任务(JSON格式)',\n    tags JSON COMMENT '任务标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_task_type (task_type),\n    INDEX idx_task_status (task_status),\n    INDEX idx_assignee_id (assignee_id),\n    INDEX idx_assigned_to_id (assigned_to_id),\n    INDEX idx_due_date (due_date),\n    INDEX idx_task_priority (task_priority),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_case_task_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件任务表';\n\n-- case_document表（案件文档表）\nDROP TABLE IF EXISTS case_document;\nCREATE TABLE case_document (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文档ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    document_name VARCHAR(200) NOT NULL COMMENT '文档名称',\n    document_type TINYINT DEFAULT 1 COMMENT '文档类型(1-起诉书,2-答辩状,3-证据材料,4-判决书,5-法律意见书)',\n    document_category VARCHAR(50) COMMENT '文档分类',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_format VARCHAR(20) COMMENT '文件格式',\n    upload_by_id BIGINT COMMENT '上传人ID',\n    upload_by_name VARCHAR(50) COMMENT '上传人姓名',\n    document_description TEXT COMMENT '文档描述',\n    is_confidential TINYINT DEFAULT 0 COMMENT '是否保密(0-否,1-是)',\n    access_level TINYINT DEFAULT 1 COMMENT '访问级别(1-公开,2-团队,3-指定人员)',\n    document_status TINYINT DEFAULT 1 COMMENT '文档状态(1-草稿,2-待审核,3-已发布,4-已归档)',\n    version_number VARCHAR(20) DEFAULT '1.0' COMMENT '版本号',\n    parent_document_id BIGINT COMMENT '父文档ID(版本关联)',\n    keywords JSON COMMENT '关键词(JSON格式)',\n    tags JSON COMMENT '标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_document_type (document_type),\n    INDEX idx_document_status (document_status),\n    INDEX idx_upload_by_id (upload_by_id),\n    INDEX idx_parent_document_id (parent_document_id),\n    INDEX idx_is_confidential (is_confidential),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_case_document_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件文档表';\n\n-- case_event表（案件事件表）\nDROP TABLE IF EXISTS case_event;\nCREATE TABLE case_event (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '事件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    event_name VARCHAR(100) NOT NULL COMMENT '事件名称',\n    event_type TINYINT DEFAULT 1 COMMENT '事件类型(1-开庭,2-客户会议,3-团队讨论,4-调解会议,5-证人约见)',\n    event_description TEXT COMMENT '事件描述',\n    event_date DATETIME NOT NULL COMMENT '事件时间',\n    location VARCHAR(200) COMMENT '事件地点',\n    organizer_id BIGINT COMMENT '组织者ID',\n    organizer_name VARCHAR(50) COMMENT '组织者姓名',\n    participants JSON COMMENT '参与人员(JSON格式)',\n    event_status TINYINT DEFAULT 1 COMMENT '事件状态(1-计划中,2-进行中,3-已完成,4-已取消)',\n    importance TINYINT DEFAULT 2 COMMENT '重要性(1-低,2-中,3-高,4-紧急)',\n    reminder_time DATETIME COMMENT '提醒时间',\n    result_summary TEXT COMMENT '结果总结',\n    follow_up_actions TEXT COMMENT '后续行动',\n    related_documents JSON COMMENT '相关文档(JSON格式)',\n    tags JSON COMMENT '标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_event_type (event_type),\n    INDEX idx_event_status (event_status),\n    INDEX idx_event_date (event_date),\n    INDEX idx_organizer_id (organizer_id),\n    INDEX idx_importance (importance),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_case_event_case FOREIGN KEY (case_id) REFERENCES case_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件事件表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 15557
    },
    {
      "path": "law-firm-modules\\law-firm-case\\src\\main\\resources\\META-INF\\db\\migration\\V4002__init_case_data.sql",
      "filename": "V4002__init_case_data.sql",
      "version": 4002,
      "module": "law-firm-modules",
      "content": "-- 案件管理模块基础数据\n-- 版本: V4002\n-- 模块: 案件管理模块 (V4000-V4999)\n-- 创建时间: 2023-06-01\n-- 说明: 案件管理功能的基础数据初始化\n-- 包括：案件相关字典数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 字典类型初始化 =======================\n\nINSERT INTO sys_dict_type (tenant_id, tenant_code, dict_name, dict_type, status, create_time, create_by, remark)\nVALUES\n(NULL, NULL, '案件类型', 'case_type', 1, NOW(), 'system', '案件类型字典'),\n(NULL, NULL, '案件状态', 'case_status', 1, NOW(), 'system', '案件状态字典'),\n(NULL, NULL, '案件阶段', 'case_stage', 1, NOW(), 'system', '案件阶段字典'),\n(NULL, NULL, '案件优先级', 'case_priority', 1, NOW(), 'system', '案件优先级字典'),\n(NULL, NULL, '案件难度', 'case_difficulty', 1, NOW(), 'system', '案件难度字典'),\n(NULL, NULL, '案件来源', 'case_source', 1, NOW(), 'system', '案件来源字典'),\n(NULL, NULL, '案件结果', 'case_result', 1, NOW(), 'system', '案件结果字典'),\n(NULL, NULL, '费用类型', 'case_fee_type', 1, NOW(), 'system', '案件费用类型字典'),\n(NULL, NULL, '收费方式', 'case_fee_category', 1, NOW(), 'system', '案件收费方式字典'),\n(NULL, NULL, '费用状态', 'case_fee_status', 1, NOW(), 'system', '案件费用状态字典'),\n(NULL, NULL, '团队角色', 'case_team_role', 1, NOW(), 'system', '案件团队角色字典'),\n(NULL, NULL, '参与方类型', 'case_participant_type', 1, NOW(), 'system', '案件参与方类型字典'),\n(NULL, NULL, '任务类型', 'case_task_type', 1, NOW(), 'system', '案件任务类型字典'),\n(NULL, NULL, '任务状态', 'case_task_status', 1, NOW(), 'system', '案件任务状态字典'),\n(NULL, NULL, '任务优先级', 'case_task_priority', 1, NOW(), 'system', '案件任务优先级字典'),\n(NULL, NULL, '文档类型', 'case_document_type', 1, NOW(), 'system', '案件文档类型字典'),\n(NULL, NULL, '文档状态', 'case_document_status', 1, NOW(), 'system', '案件文档状态字典'),\n(NULL, NULL, '事件类型', 'case_event_type', 1, NOW(), 'system', '案件事件类型字典'),\n(NULL, NULL, '事件状态', 'case_event_status', 1, NOW(), 'system', '案件事件状态字典')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- ======================= 字典数据初始化 =======================\n\nINSERT INTO sys_dict_data (tenant_id, tenant_code, dict_type, dict_label, dict_value, dict_sort, status, create_time, create_by, remark)\nVALUES \n-- 案件类型\n(NULL, NULL, 'case_type', '民事案件', '1', 1, 1, NOW(), 'system', '案件类型 - 民事案件'),\n(NULL, NULL, 'case_type', '刑事案件', '2', 2, 1, NOW(), 'system', '案件类型 - 刑事案件'),\n(NULL, NULL, 'case_type', '行政案件', '3', 3, 1, NOW(), 'system', '案件类型 - 行政案件'),\n(NULL, NULL, 'case_type', '仲裁案件', '4', 4, 1, NOW(), 'system', '案件类型 - 仲裁案件'),\n(NULL, NULL, 'case_type', '非诉业务', '5', 5, 1, NOW(), 'system', '案件类型 - 非诉业务'),\n\n-- 案件状态\n(NULL, NULL, 'case_status', '待受理', '1', 1, 1, NOW(), 'system', '案件状态 - 待受理'),\n(NULL, NULL, 'case_status', '进行中', '2', 2, 1, NOW(), 'system', '案件状态 - 进行中'),\n(NULL, NULL, 'case_status', '已结案', '3', 3, 1, NOW(), 'system', '案件状态 - 已结案'),\n(NULL, NULL, 'case_status', '已关闭', '4', 4, 1, NOW(), 'system', '案件状态 - 已关闭'),\n\n-- 案件阶段\n(NULL, NULL, 'case_stage', '立案', '1', 1, 1, NOW(), 'system', '案件阶段 - 立案'),\n(NULL, NULL, 'case_stage', '调查', '2', 2, 1, NOW(), 'system', '案件阶段 - 调查'),\n(NULL, NULL, 'case_stage', '开庭', '3', 3, 1, NOW(), 'system', '案件阶段 - 开庭'),\n(NULL, NULL, 'case_stage', '执行', '4', 4, 1, NOW(), 'system', '案件阶段 - 执行'),\n(NULL, NULL, 'case_stage', '结案', '5', 5, 1, NOW(), 'system', '案件阶段 - 结案'),\n\n-- 案件优先级\n(NULL, NULL, 'case_priority', '低', '1', 1, 1, NOW(), 'system', '案件优先级 - 低'),\n(NULL, NULL, 'case_priority', '中', '2', 2, 1, NOW(), 'system', '案件优先级 - 中'),\n(NULL, NULL, 'case_priority', '高', '3', 3, 1, NOW(), 'system', '案件优先级 - 高'),\n(NULL, NULL, 'case_priority', '紧急', '4', 4, 1, NOW(), 'system', '案件优先级 - 紧急'),\n\n-- 案件难度\n(NULL, NULL, 'case_difficulty', '简单', '1', 1, 1, NOW(), 'system', '案件难度 - 简单'),\n(NULL, NULL, 'case_difficulty', '一般', '2', 2, 1, NOW(), 'system', '案件难度 - 一般'),\n(NULL, NULL, 'case_difficulty', '复杂', '3', 3, 1, NOW(), 'system', '案件难度 - 复杂'),\n(NULL, NULL, 'case_difficulty', '疑难', '4', 4, 1, NOW(), 'system', '案件难度 - 疑难'),\n\n-- 案件来源\n(NULL, NULL, 'case_source', '新客户', '1', 1, 1, NOW(), 'system', '案件来源 - 新客户'),\n(NULL, NULL, 'case_source', '老客户', '2', 2, 1, NOW(), 'system', '案件来源 - 老客户'),\n(NULL, NULL, 'case_source', '转介绍', '3', 3, 1, NOW(), 'system', '案件来源 - 转介绍'),\n(NULL, NULL, 'case_source', '法律援助', '4', 4, 1, NOW(), 'system', '案件来源 - 法律援助'),\n\n-- 案件结果\n(NULL, NULL, 'case_result', '胜诉', '1', 1, 1, NOW(), 'system', '案件结果 - 胜诉'),\n(NULL, NULL, 'case_result', '败诉', '2', 2, 1, NOW(), 'system', '案件结果 - 败诉'),\n(NULL, NULL, 'case_result', '和解', '3', 3, 1, NOW(), 'system', '案件结果 - 和解'),\n(NULL, NULL, 'case_result', '调解', '4', 4, 1, NOW(), 'system', '案件结果 - 调解'),\n(NULL, NULL, 'case_result', '撤诉', '5', 5, 1, NOW(), 'system', '案件结果 - 撤诉'),\n\n-- 费用类型\n(NULL, NULL, 'case_fee_type', '律师费', '1', 1, 1, NOW(), 'system', '费用类型 - 律师费'),\n(NULL, NULL, 'case_fee_type', '诉讼费', '2', 2, 1, NOW(), 'system', '费用类型 - 诉讼费'),\n(NULL, NULL, 'case_fee_type', '差旅费', '3', 3, 1, NOW(), 'system', '费用类型 - 差旅费'),\n(NULL, NULL, 'case_fee_type', '其他费用', '4', 4, 1, NOW(), 'system', '费用类型 - 其他费用'),\n\n-- 收费方式\n(NULL, NULL, 'case_fee_category', '固定费用', '1', 1, 1, NOW(), 'system', '收费方式 - 固定费用'),\n(NULL, NULL, 'case_fee_category', '按小时', '2', 2, 1, NOW(), 'system', '收费方式 - 按小时'),\n(NULL, NULL, 'case_fee_category', '按比例', '3', 3, 1, NOW(), 'system', '收费方式 - 按比例'),\n(NULL, NULL, 'case_fee_category', '风险代理', '4', 4, 1, NOW(), 'system', '收费方式 - 风险代理'),\n\n-- 费用状态\n(NULL, NULL, 'case_fee_status', '待收', '1', 1, 1, NOW(), 'system', '费用状态 - 待收'),\n(NULL, NULL, 'case_fee_status', '部分收取', '2', 2, 1, NOW(), 'system', '费用状态 - 部分收取'),\n(NULL, NULL, 'case_fee_status', '已收取', '3', 3, 1, NOW(), 'system', '费用状态 - 已收取'),\n(NULL, NULL, 'case_fee_status', '减免', '4', 4, 1, NOW(), 'system', '费用状态 - 减免'),\n\n-- 团队角色\n(NULL, NULL, 'case_team_role', '主办律师', '1', 1, 1, NOW(), 'system', '团队角色 - 主办律师'),\n(NULL, NULL, 'case_team_role', '协办律师', '2', 2, 1, NOW(), 'system', '团队角色 - 协办律师'),\n(NULL, NULL, 'case_team_role', '律师助理', '3', 3, 1, NOW(), 'system', '团队角色 - 律师助理'),\n(NULL, NULL, 'case_team_role', '实习生', '4', 4, 1, NOW(), 'system', '团队角色 - 实习生'),\n\n-- 参与方类型\n(NULL, NULL, 'case_participant_type', '原告', '1', 1, 1, NOW(), 'system', '参与方类型 - 原告'),\n(NULL, NULL, 'case_participant_type', '被告', '2', 2, 1, NOW(), 'system', '参与方类型 - 被告'),\n(NULL, NULL, 'case_participant_type', '第三人', '3', 3, 1, NOW(), 'system', '参与方类型 - 第三人'),\n(NULL, NULL, 'case_participant_type', '证人', '4', 4, 1, NOW(), 'system', '参与方类型 - 证人'),\n(NULL, NULL, 'case_participant_type', '鉴定人', '5', 5, 1, NOW(), 'system', '参与方类型 - 鉴定人'),\n\n-- 任务类型\n(NULL, NULL, 'case_task_type', '文件准备', '1', 1, 1, NOW(), 'system', '任务类型 - 文件准备'),\n(NULL, NULL, 'case_task_type', '法律研究', '2', 2, 1, NOW(), 'system', '任务类型 - 法律研究'),\n(NULL, NULL, 'case_task_type', '客户沟通', '3', 3, 1, NOW(), 'system', '任务类型 - 客户沟通'),\n(NULL, NULL, 'case_task_type', '证据收集', '4', 4, 1, NOW(), 'system', '任务类型 - 证据收集'),\n(NULL, NULL, 'case_task_type', '出庭准备', '5', 5, 1, NOW(), 'system', '任务类型 - 出庭准备'),\n\n-- 任务状态\n(NULL, NULL, 'case_task_status', '待处理', '1', 1, 1, NOW(), 'system', '任务状态 - 待处理'),\n(NULL, NULL, 'case_task_status', '进行中', '2', 2, 1, NOW(), 'system', '任务状态 - 进行中'),\n(NULL, NULL, 'case_task_status', '已完成', '3', 3, 1, NOW(), 'system', '任务状态 - 已完成'),\n(NULL, NULL, 'case_task_status', '已取消', '4', 4, 1, NOW(), 'system', '任务状态 - 已取消'),\n\n-- 任务优先级\n(NULL, NULL, 'case_task_priority', '低', '1', 1, 1, NOW(), 'system', '任务优先级 - 低'),\n(NULL, NULL, 'case_task_priority', '中', '2', 2, 1, NOW(), 'system', '任务优先级 - 中'),\n(NULL, NULL, 'case_task_priority', '高', '3', 3, 1, NOW(), 'system', '任务优先级 - 高'),\n(NULL, NULL, 'case_task_priority', '紧急', '4', 4, 1, NOW(), 'system', '任务优先级 - 紧急'),\n\n-- 文档类型\n(NULL, NULL, 'case_document_type', '起诉书', '1', 1, 1, NOW(), 'system', '文档类型 - 起诉书'),\n(NULL, NULL, 'case_document_type', '答辩状', '2', 2, 1, NOW(), 'system', '文档类型 - 答辩状'),\n(NULL, NULL, 'case_document_type', '证据材料', '3', 3, 1, NOW(), 'system', '文档类型 - 证据材料'),\n(NULL, NULL, 'case_document_type', '判决书', '4', 4, 1, NOW(), 'system', '文档类型 - 判决书'),\n(NULL, NULL, 'case_document_type', '法律意见书', '5', 5, 1, NOW(), 'system', '文档类型 - 法律意见书'),\n\n-- 文档状态\n(NULL, NULL, 'case_document_status', '草稿', '1', 1, 1, NOW(), 'system', '文档状态 - 草稿'),\n(NULL, NULL, 'case_document_status', '待审核', '2', 2, 1, NOW(), 'system', '文档状态 - 待审核'),\n(NULL, NULL, 'case_document_status', '已发布', '3', 3, 1, NOW(), 'system', '文档状态 - 已发布'),\n(NULL, NULL, 'case_document_status', '已归档', '4', 4, 1, NOW(), 'system', '文档状态 - 已归档'),\n\n-- 事件类型\n(NULL, NULL, 'case_event_type', '开庭', '1', 1, 1, NOW(), 'system', '事件类型 - 开庭'),\n(NULL, NULL, 'case_event_type', '客户会议', '2', 2, 1, NOW(), 'system', '事件类型 - 客户会议'),\n(NULL, NULL, 'case_event_type', '团队讨论', '3', 3, 1, NOW(), 'system', '事件类型 - 团队讨论'),\n(NULL, NULL, 'case_event_type', '调解会议', '4', 4, 1, NOW(), 'system', '事件类型 - 调解会议'),\n(NULL, NULL, 'case_event_type', '证人约见', '5', 5, 1, NOW(), 'system', '事件类型 - 证人约见'),\n\n-- 事件状态\n(NULL, NULL, 'case_event_status', '计划中', '1', 1, 1, NOW(), 'system', '事件状态 - 计划中'),\n(NULL, NULL, 'case_event_status', '进行中', '2', 2, 1, NOW(), 'system', '事件状态 - 进行中'),\n(NULL, NULL, 'case_event_status', '已完成', '3', 3, 1, NOW(), 'system', '事件状态 - 已完成'),\n(NULL, NULL, 'case_event_status', '已取消', '4', 4, 1, NOW(), 'system', '事件状态 - 已取消')\nON DUPLICATE KEY UPDATE update_time = NOW(); ",
      "size": 8925
    },
    {
      "path": "law-firm-modules\\law-firm-auth\\src\\main\\resources\\META-INF\\db\\migration\\V2000__auth_module_description.sql",
      "filename": "V2000__auth_module_description.sql",
      "version": 2000,
      "module": "law-firm-modules",
      "content": "-- 认证模块说明\n-- 版本: V2000\n-- 模块: 认证模块 (V2000-V2999)\n-- 创建时间: 2023-06-01\n-- 说明: 认证功能模块架构说明\n\n/*\n=============================================================================\n                            认证模块 - 功能说明\n=============================================================================\n\n一、模块职责\n认证模块负责律师事务所的用户认证和权限管理，包括：\n- 用户账户管理\n- 角色权限管理\n- 登录认证和会话管理\n- 权限控制和访问验证\n- 用户行为审计\n- 密码策略管理\n- 多因素认证\n- 单点登录(SSO)\n\n二、版本规划 (V2000-V2999)\n- V2000: 模块说明文档\n- V2001: 表结构定义\n- V2002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 用户管理\n   - auth_user: 用户基本信息\n   - auth_login_history: 登录历史记录\n\n2. 权限管理\n   - auth_role: 角色定义\n   - auth_permission: 权限定义\n   - auth_role_permission: 角色权限关联\n   - auth_user_role: 用户角色关联\n\n3. 权限申请管理\n   - sys_permission_request: 权限申请表\n   - sys_team_permission: 团队权限关联\n\n四、数据关系\n=============================================================================\n- auth_user → auth_user_role → auth_role (用户角色关系)\n- auth_role → auth_role_permission → auth_permission (角色权限关系)\n- auth_user → auth_login_history (登录历史)\n- auth_user → sys_permission_request (权限申请)\n- auth_role → sys_team_permission (团队权限)\n\n五、业务特点\n=============================================================================\n1. 安全性优先\n   - 密码加密存储(BCrypt)\n   - 登录失败锁定机制\n   - 会话安全管理\n   - 敏感操作审计\n\n2. 灵活权限控制\n   - 基于角色的权限管理(RBAC)\n   - 细粒度权限控制\n   - 数据权限范围控制\n   - 动态权限验证\n\n3. 多租户支持\n   - 租户级别权限隔离\n   - 跨租户权限管理\n   - 租户数据安全\n\n六、权限设计\n=============================================================================\n认证模块功能权限控制：\n- 用户管理: USER_MANAGE\n- 角色管理: ROLE_MANAGE\n- 权限管理: PERMISSION_MANAGE\n- 权限申请审批: PERMISSION_APPROVE\n- 登录日志查看: LOGIN_LOG_VIEW\n- 用户权限分配: USER_PERMISSION_ASSIGN\n\n七、安全策略\n=============================================================================\n1. 密码策略\n   - 密码复杂度要求\n   - 密码定期更换\n   - 历史密码验证\n\n2. 登录策略\n   - 登录失败锁定\n   - 异地登录提醒\n   - 并发登录控制\n\n3. 会话策略\n   - 会话超时管理\n   - 强制下线功能\n   - 会话状态监控\n\n八、注意事项\n=============================================================================\n1. 用户密码严格加密，不可明文存储\n2. 权限变更需要实时生效，注意缓存同步\n3. 登录日志需要完整记录，便于安全审计\n4. 角色权限分配需要审批流程\n5. 敏感操作需要二次验证\n\n九、架构说明\n=============================================================================\n注意：由于历史原因，部分认证相关表已在API层创建：\n- auth_user, auth_role, auth_permission等核心表在API层\n- 本模块主要负责认证相关的业务逻辑和数据维护\n- 后续架构优化时考虑将表结构迁移到认证模块\n\n十、集成说明\n=============================================================================\n本模块与其他模块的集成：\n- 与API层：提供认证接口和权限验证\n- 与业务模块：提供用户身份和权限信息\n- 与审计模块：记录认证相关的操作日志\n- 与通知模块：发送登录异常、密码过期等通知\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 认证安全组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '认证模块说明文档已加载' AS message; ",
      "size": 2805
    },
    {
      "path": "law-firm-modules\\law-firm-auth\\src\\main\\resources\\META-INF\\db\\migration\\V2001__init_auth_tables.sql",
      "filename": "V2001__init_auth_tables.sql",
      "version": 2001,
      "module": "law-firm-modules",
      "content": "-- Auth模块表结构初始化\n-- 版本: V2001\n-- 模块: auth\n-- 创建时间: 2023-06-10\n-- 说明: 重新设计认证模块表结构，统一规范和约束\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 认证模块核心表 =======================\n\n-- auth_user表（用户表）\nDROP TABLE IF EXISTS auth_user;\nCREATE TABLE auth_user (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '用户ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    username VARCHAR(50) NOT NULL UNIQUE COMMENT '用户名',\n    password VARCHAR(255) NOT NULL COMMENT '密码(BCrypt加密)',\n    email VARCHAR(100) UNIQUE COMMENT '邮箱',\n    mobile VARCHAR(20) UNIQUE COMMENT '手机号',\n    real_name VARCHAR(50) COMMENT '真实姓名',\n    avatar VARCHAR(255) COMMENT '头像URL',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常,2-锁定)',\n    employee_id BIGINT COMMENT '关联员工ID',\n    last_login_time DATETIME COMMENT '最后登录时间',\n    last_login_ip VARCHAR(45) COMMENT '最后登录IP(支持IPv6)',\n    account_expire_time DATETIME COMMENT '账号过期时间',\n    password_expire_time DATETIME COMMENT '密码过期时间',\n    login_failure_count INT DEFAULT 0 COMMENT '连续登录失败次数',\n    locked_until DATETIME COMMENT '锁定到期时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_status (status),\n    INDEX idx_employee_id (employee_id),\n    INDEX idx_last_login_time (last_login_time),\n    INDEX idx_create_time (create_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='用户表';\n\n-- auth_role表（角色表）\nDROP TABLE IF EXISTS auth_role;\nCREATE TABLE auth_role (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '角色ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    code VARCHAR(50) NOT NULL COMMENT '角色编码',\n    name VARCHAR(50) NOT NULL COMMENT '角色名称',\n    description VARCHAR(255) COMMENT '角色描述',\n    data_scope TINYINT DEFAULT 1 COMMENT '数据权限范围(1-全部,2-部门,3-个人)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统角色(0-否,1-是)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_status (status),\n    INDEX idx_sort (sort)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='角色表';\n\n-- auth_permission表（权限表）\nDROP TABLE IF EXISTS auth_permission;\nCREATE TABLE auth_permission (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '权限ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    parent_id BIGINT DEFAULT 0 COMMENT '父权限ID',\n    code VARCHAR(100) NOT NULL COMMENT '权限编码',\n    name VARCHAR(50) NOT NULL COMMENT '权限名称',\n    type TINYINT DEFAULT 1 COMMENT '权限类型(1-菜单,2-按钮,3-接口)',\n    path VARCHAR(255) COMMENT '路由路径',\n    component VARCHAR(255) COMMENT '组件路径',\n    icon VARCHAR(50) COMMENT '图标',\n    method VARCHAR(10) COMMENT 'HTTP方法(GET,POST,PUT,DELETE)',\n    url VARCHAR(255) COMMENT 'API接口地址',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    visible TINYINT DEFAULT 1 COMMENT '是否显示(0-隐藏,1-显示)',\n    keep_alive TINYINT DEFAULT 0 COMMENT '是否缓存(0-否,1-是)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    level INT DEFAULT 1 COMMENT '层级深度',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_code (tenant_id, code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_type (type),\n    INDEX idx_status (status),\n    INDEX idx_sort (sort),\n    INDEX idx_level (level)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='权限表';\n\n-- auth_user_role表（用户角色关联表）\nDROP TABLE IF EXISTS auth_user_role;\nCREATE TABLE auth_user_role (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    role_id BIGINT NOT NULL COMMENT '角色ID',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    effective_time DATETIME COMMENT '生效时间',\n    expire_time DATETIME COMMENT '失效时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_user_role (tenant_id, user_id, role_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_role_id (role_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_user_role_user FOREIGN KEY (user_id) REFERENCES auth_user(id) ON DELETE CASCADE,\n    CONSTRAINT fk_user_role_role FOREIGN KEY (role_id) REFERENCES auth_role(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='用户角色关联表';\n\n-- auth_role_permission表（角色权限关联表）\nDROP TABLE IF EXISTS auth_role_permission;\nCREATE TABLE auth_role_permission (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    role_id BIGINT NOT NULL COMMENT '角色ID',\n    permission_id BIGINT NOT NULL COMMENT '权限ID',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_role_permission (tenant_id, role_id, permission_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_role_id (role_id),\n    INDEX idx_permission_id (permission_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_role_permission_role FOREIGN KEY (role_id) REFERENCES auth_role(id) ON DELETE CASCADE,\n    CONSTRAINT fk_role_permission_permission FOREIGN KEY (permission_id) REFERENCES auth_permission(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='角色权限关联表';\n\n-- auth_login_log表（登录日志表 - 统一日志记录）\nDROP TABLE IF EXISTS auth_login_log;\nCREATE TABLE auth_login_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    user_id BIGINT COMMENT '用户ID',\n    username VARCHAR(50) COMMENT '用户名',\n    login_type TINYINT DEFAULT 1 COMMENT '登录类型(1-账号密码,2-手机验证码,3-第三方)',\n    login_status TINYINT COMMENT '登录状态(0-失败,1-成功,2-登出)',\n    login_ip VARCHAR(45) COMMENT '登录IP',\n    login_location VARCHAR(100) COMMENT '登录地点',\n    user_agent TEXT COMMENT '用户代理信息',\n    browser VARCHAR(50) COMMENT '浏览器',\n    os VARCHAR(50) COMMENT '操作系统',\n    device_type VARCHAR(20) COMMENT '设备类型',\n    session_id VARCHAR(100) COMMENT '会话ID',\n    login_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '登录时间',\n    logout_time DATETIME COMMENT '登出时间',\n    online_duration INT COMMENT '在线时长(秒)',\n    failure_reason VARCHAR(255) COMMENT '失败原因',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_username (username),\n    INDEX idx_login_status (login_status),\n    INDEX idx_login_time (login_time),\n    INDEX idx_login_ip (login_ip),\n    \n    CONSTRAINT fk_login_log_user FOREIGN KEY (user_id) REFERENCES auth_user(id) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='登录日志表';\n\n-- auth_operation_log表（操作日志表 - 统一操作记录）\nDROP TABLE IF EXISTS auth_operation_log;\nCREATE TABLE auth_operation_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    user_id BIGINT COMMENT '操作用户ID',\n    username VARCHAR(50) COMMENT '操作用户名',\n    operation_type VARCHAR(20) COMMENT '操作类型(CREATE,UPDATE,DELETE,QUERY)',\n    module VARCHAR(50) COMMENT '操作模块',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    business_id VARCHAR(100) COMMENT '业务ID',\n    operation_desc VARCHAR(255) COMMENT '操作描述',\n    request_method VARCHAR(10) COMMENT '请求方法',\n    request_url VARCHAR(255) COMMENT '请求URL',\n    request_params TEXT COMMENT '请求参数',\n    response_result TEXT COMMENT '响应结果',\n    operation_status TINYINT DEFAULT 1 COMMENT '操作状态(0-失败,1-成功)',\n    error_msg TEXT COMMENT '错误信息',\n    operation_ip VARCHAR(45) COMMENT '操作IP',\n    operation_location VARCHAR(100) COMMENT '操作地点',\n    user_agent TEXT COMMENT '用户代理',\n    execution_time INT COMMENT '执行时长(毫秒)',\n    operation_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_username (username),\n    INDEX idx_operation_type (operation_type),\n    INDEX idx_module (module),\n    INDEX idx_business_type (business_type),\n    INDEX idx_operation_status (operation_status),\n    INDEX idx_operation_time (operation_time),\n    \n    CONSTRAINT fk_operation_log_user FOREIGN KEY (user_id) REFERENCES auth_user(id) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='操作日志表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 10063
    },
    {
      "path": "law-firm-modules\\law-firm-auth\\src\\main\\resources\\META-INF\\db\\migration\\V2002__init_auth_data.sql",
      "filename": "V2002__init_auth_data.sql",
      "version": 2002,
      "module": "law-firm-modules",
      "content": "-- Auth模块初始数据\n-- 版本: V2002\n-- 模块: auth\n-- 创建时间: 2023-06-15\n-- 说明: 初始化认证模块所有数据，包括用户、角色、权限等\n-- 注意：原V0002中的auth数据已移至此处\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- 创建初始管理员用户（密码：admin123）\nINSERT INTO auth_user (id, tenant_id, username, password, email, mobile, status, create_time, create_by, remark)\nSELECT 1, NULL, 'admin', '$2y$10$x5Swziktu3TehpBImdvV3uJLtt9.zlHyP4qOYY6o8n6gDUhqhTpxy', 'admin@lawfirm.com', '13800000000', 0, NOW(), 'system', '系统内置管理员'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_user WHERE username = 'admin');\n\n\n-- 创建初始角色\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 1, NULL, 'ROLE_ADMIN', '系统管理员', '系统内置角色，拥有所有权限', 0, 0, 1, 1, NOW(), 'system', '系统内置角色，拥有所有权限'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_ADMIN');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 2, NULL, 'ROLE_DIRECTOR', '主任', '律所主任，业务管理者', 0, 0, 1, 2, NOW(), 'system', '律所主任，业务管理者'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_DIRECTOR');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 3, NULL, 'ROLE_PARTNER', '合伙人', '合伙人律师，高级律师', 0, 0, 1, 3, NOW(), 'system', '合伙人律师，高级律师'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_PARTNER');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 4, NULL, 'ROLE_LAWYER', '律师', '执业律师，办理案件及客户管理', 2, 0, 1, 4, NOW(), 'system', '执业律师，办理案件及客户管理'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_LAWYER');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 5, NULL, 'ROLE_TRAINEE', '实习律师', '实习律师，权限受限', 2, 0, 1, 5, NOW(), 'system', '实习律师，权限受限'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_TRAINEE');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 6, NULL, 'ROLE_CLERK', '行政', '行政人员，负责律所行政管理', 1, 0, 1, 6, NOW(), 'system', '行政人员，负责律所行政管理'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_CLERK');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 7, NULL, 'ROLE_FINANCE', '财务', '财务人员，负责律所财务管理', 1, 0, 1, 7, NOW(), 'system', '财务人员，负责律所财务管理'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_FINANCE');\n\nINSERT INTO auth_role (id, tenant_id, code, name, description, data_scope, status, is_system, sort, create_time, create_by, remark)\nSELECT 8, NULL, 'ROLE_USER', '普通用户', '系统普通用户', 3, 0, 1, 8, NOW(), 'system', '系统普通用户'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_role WHERE code = 'ROLE_USER');\n\n-- 创建初始权限\n-- 系统管理权限\nINSERT INTO auth_permission (id, tenant_id, parent_id, code, name, type, path, icon, sort, status, create_time, create_by)\nSELECT 1, NULL, 0, 'system', '系统管理', 0, '/system', 'system', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'system');\n\n-- 用户管理权限\nINSERT INTO auth_permission (id, tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT 2, NULL, 1, 'system:user', '用户管理', 0, 'user', 'system/user/index', 'user', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'system:user');\n\n-- 角色管理权限\nINSERT INTO auth_permission (id, tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT 3, NULL, 1, 'system:role', '角色管理', 0, 'role', 'system/role/index', 'peoples', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'system:role');\n\n-- 权限管理权限\nINSERT INTO auth_permission (id, tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT 4, NULL, 1, 'system:permission', '权限管理', 0, 'permission', 'system/permission/index', 'tree-table', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'system:permission');\n\n-- 角色用户关联\nINSERT INTO auth_user_role (tenant_id, user_id, role_id, status, create_time, create_by)\nSELECT NULL, 1, 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_user_role WHERE user_id = 1 AND role_id = 1);\n\n-- 角色权限关联（系统管理员拥有所有权限）\nINSERT INTO auth_role_permission (tenant_id, role_id, permission_id, status, create_time, create_by)\nSELECT NULL, 1, permission.id, 0, NOW(), 'system'\nFROM auth_permission permission\nWHERE NOT EXISTS (SELECT 1 FROM auth_role_permission WHERE role_id = 1 AND permission_id = permission.id);\n\n-- 认证授权菜单\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, path, icon, sort, status, create_time, create_by)\nSELECT NULL, 0, 'auth', '认证授权', 0, '/auth', 'lock', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'auth');\n\n-- 用户管理菜单\nSET @auth_menu_id = (SELECT id FROM auth_permission WHERE code = 'auth');\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, @auth_menu_id, 'auth:user', '用户管理', 0, 'user', 'auth/user/index', 'user', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'auth:user');\n\n-- 用户管理详细权限\nSET @user_menu_id = (SELECT id FROM auth_permission WHERE code = 'auth:user');\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @user_menu_id, 'sys:user:read', '查看用户', 1, 'view', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:user:read');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @user_menu_id, 'sys:user:create', '新增用户', 1, 'add', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:user:create');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @user_menu_id, 'sys:user:update', '修改用户', 1, 'edit', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:user:update');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @user_menu_id, 'sys:user:delete', '删除用户', 1, 'delete', 4, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:user:delete');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @user_menu_id, 'system:user:manage', '用户管理', 1, 'setting', 5, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'system:user:manage');\n\n-- 角色管理菜单\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, @auth_menu_id, 'auth:role', '角色管理', 0, 'role', 'auth/role/index', 'peoples', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'auth:role');\n\n-- 角色管理详细权限\nSET @role_menu_id = (SELECT id FROM auth_permission WHERE code = 'auth:role');\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @role_menu_id, 'sys:role:read', '查看角色', 1, 'view', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:role:read');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @role_menu_id, 'sys:role:create', '新增角色', 1, 'add', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:role:create');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @role_menu_id, 'sys:role:update', '修改角色', 1, 'edit', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:role:update');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @role_menu_id, 'sys:role:delete', '删除角色', 1, 'delete', 4, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:role:delete');\n\n-- 权限管理菜单\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, path, component, icon, sort, status, create_time, create_by)\nSELECT NULL, @auth_menu_id, 'auth:permission', '权限管理', 0, 'permission', 'auth/permission/index', 'tree-table', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'auth:permission');\n\n-- 权限管理详细权限\nSET @permission_menu_id = (SELECT id FROM auth_permission WHERE code = 'auth:permission');\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @permission_menu_id, 'sys:permission:read', '查看权限', 1, 'view', 1, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:permission:read');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @permission_menu_id, 'sys:permission:create', '新增权限', 1, 'add', 2, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:permission:create');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @permission_menu_id, 'sys:permission:update', '修改权限', 1, 'edit', 3, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:permission:update');\n\nINSERT INTO auth_permission (tenant_id, parent_id, code, name, type, icon, sort, status, create_time, create_by)\nSELECT NULL, @permission_menu_id, 'sys:permission:delete', '删除权限', 1, 'delete', 4, 0, NOW(), 'system'\nFROM DUAL\nWHERE NOT EXISTS (SELECT 1 FROM auth_permission WHERE code = 'sys:permission:delete');\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 10542
    },
    {
      "path": "law-firm-modules\\law-firm-archive\\src\\main\\resources\\META-INF\\db\\migration\\V8000__archive_module_description.sql",
      "filename": "V8000__archive_module_description.sql",
      "version": 8000,
      "module": "law-firm-modules",
      "content": "-- 档案管理模块说明\n-- 版本: V8000\n-- 模块: 档案管理模块 (V8000-V8999)\n-- 创建时间: 2023-06-01\n-- 说明: 档案管理功能模块架构说明\n\n/*\n=============================================================================\n                            档案管理模块 - 功能说明\n=============================================================================\n\n一、模块职责\n档案管理模块负责律师事务所的档案全生命周期管理，包括：\n- 档案信息管理\n- 档案归档管理\n- 档案借阅管理\n- 档案分类管理\n- 档案存储管理\n- 档案销毁管理\n- 档案检索管理\n- 档案统计分析\n\n二、版本规划 (V8000-V8999)\n- V8000: 模块说明文档\n- V8001: 表结构定义\n- V8002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 档案基础管理\n   - archive_info: 档案基本信息\n   - archive_file: 档案文件管理\n   - archive_storage: 档案存储位置\n\n2. 档案分类标签\n   - archive_category: 档案分类\n   - archive_label: 档案标签\n   - archive_label_relation: 档案标签关联\n\n3. 档案业务关联\n   - archive_case_relation: 案件档案关联\n   - archive_contract_relation: 合同档案关联\n   - archive_document_relation: 文档档案关联\n\n4. 档案借阅管理\n   - archive_borrow: 档案借阅记录\n   - archive_borrow_approval: 借阅审批记录\n   - archive_return: 档案归还记录\n\n5. 档案操作记录\n   - archive_operation_log: 档案操作日志\n   - archive_inventory: 档案盘点记录\n   - archive_destroy: 档案销毁记录\n\n四、数据关系\n=============================================================================\n- archive_info → archive_file (档案文件)\n- archive_info → archive_storage (存储位置)\n- archive_info → archive_label_relation → archive_label (档案标签)\n- archive_info → archive_case_relation (案件关联)\n- archive_info → archive_contract_relation (合同关联)\n- archive_info → archive_document_relation (文档关联)\n- archive_info → archive_borrow (借阅记录)\n- archive_borrow → archive_borrow_approval (借阅审批)\n- archive_borrow → archive_return (归还记录)\n- archive_info → archive_operation_log (操作记录)\n- archive_info → archive_inventory (盘点记录)\n- archive_info → archive_destroy (销毁记录)\n\n五、业务特点\n=============================================================================\n1. 生命周期管理\n   - 档案从归档到销毁的完整生命周期管理\n   - 档案状态流转和追踪\n   - 档案保管期限管理\n\n2. 借阅控制\n   - 严格的档案借阅审批流程\n   - 借阅权限控制和时限管理\n   - 借阅记录跟踪和提醒\n\n3. 存储管理\n   - 物理存储位置管理\n   - 档案编号规则和检索\n   - 存储容量和统计分析\n\n4. 安全保障\n   - 档案访问权限控制\n   - 档案操作日志记录\n   - 档案防丢失和损坏管理\n\n六、权限设计\n=============================================================================\n档案管理功能权限控制：\n- 档案查看: ARCHIVE_VIEW\n- 档案管理: ARCHIVE_MANAGE\n- 档案归档: ARCHIVE_FILE\n- 档案借阅: ARCHIVE_BORROW\n- 档案审批: ARCHIVE_APPROVE\n- 档案盘点: ARCHIVE_INVENTORY\n- 档案销毁: ARCHIVE_DESTROY\n- 档案统计: ARCHIVE_STATISTICS\n\n七、注意事项\n=============================================================================\n1. 档案数据涉及机密信息，需严格权限控制\n2. 档案借阅需要完善的审批流程和追踪机制\n3. 档案存储位置需要准确记录和定期盘点\n4. 档案销毁需要符合法律法规要求\n5. 档案检索需要支持多维度快速查找\n6. 档案统计需要支持多种维度分析\n7. 档案备份和容灾需要定期检查\n\n八、存储位置编码规则\n=============================================================================\n存储位置编码格式：楼层-区域-柜号-层号-位置号\n例如：F1-A-001-03-05 表示1楼A区001号柜第3层第5个位置\n\n九、档案编号规则\n=============================================================================\n档案编号格式：DA-YYYY-类型-流水号\n- DA: 档案(Document Archive)前缀\n- YYYY: 年份\n- 类型: 01-案件档案, 02-合同档案, 03-文档档案, 04-行政档案, 05-财务档案\n- 流水号: 4位数字，从0001开始\n\n十、保管期限规则\n=============================================================================\n- 永久保存: 重要合同、重大案件、公司章程等\n- 30年保存: 一般合同、重要文件等\n- 10年保存: 财务账册、审计报告等\n- 5年保存: 一般案件材料、行政文件等\n- 3年保存: 临时文件、通知公告等\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 档案管理组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '档案管理模块说明文档已加载' AS message; ",
      "size": 3454
    },
    {
      "path": "law-firm-modules\\law-firm-archive\\src\\main\\resources\\META-INF\\db\\migration\\V8001__init_archive_tables.sql",
      "filename": "V8001__init_archive_tables.sql",
      "version": 8001,
      "module": "law-firm-modules",
      "content": "-- 档案管理模块表结构\n-- 版本: V8001\n-- 模块: 档案管理模块 (V8000-V8999)\n-- 创建时间: 2023-06-01\n-- 说明: 档案管理功能的完整表结构定义\n-- 包括：档案基础信息、文件管理、分类标签、业务关联、借阅管理、操作记录\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 档案基础信息表 =======================\n\n-- archive_info表（档案基本信息表）\nDROP TABLE IF EXISTS archive_info;\nCREATE TABLE archive_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '档案ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_number VARCHAR(50) NOT NULL COMMENT '档案编号',\n    archive_title VARCHAR(200) NOT NULL COMMENT '档案标题',\n    archive_description TEXT COMMENT '档案描述',\n    archive_type TINYINT DEFAULT 1 COMMENT '档案类型(1-案件档案,2-合同档案,3-文档档案,4-行政档案,5-财务档案)',\n    category_id BIGINT COMMENT '档案分类ID',\n    archive_level TINYINT DEFAULT 1 COMMENT '档案密级(1-普通,2-内部,3-机密,4-绝密)',\n    retention_period TINYINT DEFAULT 1 COMMENT '保管期限(1-3年,2-5年,3-10年,4-30年,5-永久)',\n    storage_id BIGINT COMMENT '存储位置ID',\n    storage_location VARCHAR(100) COMMENT '存储位置编码',\n    archive_status TINYINT DEFAULT 1 COMMENT '档案状态(1-在库,2-借出,3-遗失,4-损坏,5-已销毁)',\n    creator_id BIGINT COMMENT '创建人ID',\n    creator_name VARCHAR(50) COMMENT '创建人姓名',\n    archiver_id BIGINT COMMENT '归档人ID',\n    archiver_name VARCHAR(50) COMMENT '归档人姓名',\n    archive_time DATETIME COMMENT '归档时间',\n    department_id BIGINT COMMENT '所属部门ID',\n    department_name VARCHAR(100) COMMENT '所属部门名称',\n    keywords VARCHAR(500) COMMENT '关键词',\n    file_count INT DEFAULT 0 COMMENT '文件数量',\n    total_pages INT DEFAULT 0 COMMENT '总页数',\n    total_size BIGINT DEFAULT 0 COMMENT '总大小(字节)',\n    last_check_time DATETIME COMMENT '最后检查时间',\n    last_borrow_time DATETIME COMMENT '最后借阅时间',\n    borrow_count INT DEFAULT 0 COMMENT '借阅次数',\n    is_borrowable TINYINT DEFAULT 1 COMMENT '是否可借阅(0-否,1-是)',\n    is_destroyed TINYINT DEFAULT 0 COMMENT '是否已销毁(0-否,1-是)',\n    destroy_time DATETIME COMMENT '销毁时间',\n    destroy_reason VARCHAR(500) COMMENT '销毁原因',\n    expire_time DATETIME COMMENT '过期时间',\n    custom_fields JSON COMMENT '自定义字段(JSON格式)',\n    tags JSON COMMENT '档案标签(JSON格式)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_archive_number (tenant_id, archive_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_title (archive_title),\n    INDEX idx_archive_type (archive_type),\n    INDEX idx_category_id (category_id),\n    INDEX idx_archive_status (archive_status),\n    INDEX idx_storage_id (storage_id),\n    INDEX idx_storage_location (storage_location),\n    INDEX idx_archiver_id (archiver_id),\n    INDEX idx_department_id (department_id),\n    INDEX idx_archive_time (archive_time),\n    INDEX idx_expire_time (expire_time),\n    INDEX idx_retention_period (retention_period),\n    INDEX idx_is_destroyed (is_destroyed),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案基本信息表';\n\n-- archive_file表（档案文件表）\nDROP TABLE IF EXISTS archive_file;\nCREATE TABLE archive_file (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    file_name VARCHAR(200) NOT NULL COMMENT '文件名称',\n    file_type TINYINT DEFAULT 1 COMMENT '文件类型(1-原件,2-复印件,3-扫描件,4-电子件)',\n    file_format VARCHAR(50) COMMENT '文件格式',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_size BIGINT COMMENT '文件大小(字节)',\n    file_pages INT DEFAULT 0 COMMENT '文件页数',\n    file_md5 VARCHAR(32) COMMENT '文件MD5',\n    is_original TINYINT DEFAULT 0 COMMENT '是否原件(0-否,1-是)',\n    is_encrypted TINYINT DEFAULT 0 COMMENT '是否加密(0-否,1-是)',\n    encryption_type VARCHAR(20) COMMENT '加密方式',\n    scan_resolution VARCHAR(20) COMMENT '扫描分辨率',\n    scan_time DATETIME COMMENT '扫描时间',\n    scanner_id BIGINT COMMENT '扫描人ID',\n    scanner_name VARCHAR(50) COMMENT '扫描人姓名',\n    file_condition TINYINT DEFAULT 1 COMMENT '文件状态(1-完好,2-轻微损坏,3-严重损坏,4-无法使用)',\n    storage_position VARCHAR(100) COMMENT '存储位置',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    description VARCHAR(500) COMMENT '文件描述',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_file_name (file_name),\n    INDEX idx_file_type (file_type),\n    INDEX idx_is_original (is_original),\n    INDEX idx_file_condition (file_condition),\n    INDEX idx_scan_time (scan_time),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_archive_file_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案文件表';\n\n-- archive_storage表（档案存储位置表）\nDROP TABLE IF EXISTS archive_storage;\nCREATE TABLE archive_storage (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '存储位置ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    location_code VARCHAR(50) NOT NULL COMMENT '位置编码',\n    location_name VARCHAR(100) NOT NULL COMMENT '位置名称',\n    parent_id BIGINT DEFAULT 0 COMMENT '父级位置ID',\n    level TINYINT DEFAULT 1 COMMENT '层级',\n    location_path VARCHAR(500) COMMENT '位置路径',\n    location_type TINYINT DEFAULT 1 COMMENT '位置类型(1-楼层,2-区域,3-档案柜,4-层板,5-位置)',\n    floor_number VARCHAR(10) COMMENT '楼层号',\n    area_code VARCHAR(10) COMMENT '区域编码',\n    cabinet_number VARCHAR(10) COMMENT '档案柜号',\n    shelf_number VARCHAR(10) COMMENT '层板号',\n    position_number VARCHAR(10) COMMENT '位置号',\n    capacity INT DEFAULT 0 COMMENT '存储容量',\n    used_capacity INT DEFAULT 0 COMMENT '已用容量',\n    max_weight DECIMAL(10,2) COMMENT '最大承重(公斤)',\n    current_weight DECIMAL(10,2) DEFAULT 0 COMMENT '当前重量(公斤)',\n    temperature_range VARCHAR(50) COMMENT '温度范围',\n    humidity_range VARCHAR(50) COMMENT '湿度范围',\n    security_level TINYINT DEFAULT 1 COMMENT '安全级别(1-普通,2-重要,3-机密)',\n    access_control TINYINT DEFAULT 0 COMMENT '门禁控制(0-无,1-有)',\n    manager_id BIGINT COMMENT '管理员ID',\n    manager_name VARCHAR(50) COMMENT '管理员姓名',\n    description VARCHAR(500) COMMENT '位置描述',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_location_code (tenant_id, location_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_location_name (location_name),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_location_type (location_type),\n    INDEX idx_manager_id (manager_id),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案存储位置表';\n\n-- ======================= 档案分类标签表 =======================\n\n-- archive_category表（档案分类表）\nDROP TABLE IF EXISTS archive_category;\nCREATE TABLE archive_category (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '分类ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    category_name VARCHAR(100) NOT NULL COMMENT '分类名称',\n    category_code VARCHAR(50) NOT NULL COMMENT '分类编码',\n    parent_id BIGINT DEFAULT 0 COMMENT '父分类ID',\n    level TINYINT DEFAULT 1 COMMENT '分类层级',\n    category_path VARCHAR(500) COMMENT '分类路径',\n    description VARCHAR(500) COMMENT '分类描述',\n    archive_count INT DEFAULT 0 COMMENT '档案数量',\n    retention_period TINYINT COMMENT '默认保管期限',\n    access_level TINYINT COMMENT '默认访问级别',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统分类(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_category_code (tenant_id, category_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_category_name (category_name),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案分类表';\n\n-- archive_label表（档案标签表）\nDROP TABLE IF EXISTS archive_label;\nCREATE TABLE archive_label (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '标签ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    label_name VARCHAR(50) NOT NULL COMMENT '标签名称',\n    label_code VARCHAR(50) NOT NULL COMMENT '标签编码',\n    label_type TINYINT DEFAULT 1 COMMENT '标签类型(1-业务标签,2-状态标签,3-优先级标签,4-自定义标签)',\n    label_category VARCHAR(50) COMMENT '标签分类',\n    color VARCHAR(20) COMMENT '标签颜色',\n    icon VARCHAR(100) COMMENT '标签图标',\n    description VARCHAR(200) COMMENT '标签描述',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统标签(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    creator_id BIGINT COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_label_code (tenant_id, label_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_label_name (label_name),\n    INDEX idx_label_type (label_type),\n    INDEX idx_label_category (label_category),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_is_enabled (is_enabled),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案标签表';\n\n-- archive_label_relation表（档案标签关联表）\nDROP TABLE IF EXISTS archive_label_relation;\nCREATE TABLE archive_label_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    label_id BIGINT NOT NULL COMMENT '标签ID',\n    label_value VARCHAR(200) COMMENT '标签值',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_archive_label (archive_id, label_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_label_id (label_id),\n    \n    CONSTRAINT fk_archive_label_relation_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE,\n    CONSTRAINT fk_archive_label_relation_label FOREIGN KEY (label_id) REFERENCES archive_label(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案标签关联表';\n\n-- ======================= 档案业务关联表 =======================\n\n-- archive_case_relation表（案件档案关联表）\nDROP TABLE IF EXISTS archive_case_relation;\nCREATE TABLE archive_case_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    case_number VARCHAR(50) COMMENT '案件编号',\n    case_title VARCHAR(200) COMMENT '案件标题',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-案件材料,2-法律文书,3-证据材料,4-庭审记录,5-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_archive TINYINT DEFAULT 0 COMMENT '是否关键档案(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_archive_case (archive_id, case_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_archive (is_key_archive),\n    \n    CONSTRAINT fk_archive_case_relation_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件档案关联表';\n\n-- archive_contract_relation表（合同档案关联表）\nDROP TABLE IF EXISTS archive_contract_relation;\nCREATE TABLE archive_contract_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    contract_number VARCHAR(50) COMMENT '合同编号',\n    contract_title VARCHAR(200) COMMENT '合同标题',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-合同正文,2-补充协议,3-变更协议,4-履行记录,5-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_archive TINYINT DEFAULT 0 COMMENT '是否关键档案(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_archive_contract (archive_id, contract_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_archive (is_key_archive),\n    \n    CONSTRAINT fk_archive_contract_relation_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同档案关联表';\n\n-- archive_document_relation表（文档档案关联表）\nDROP TABLE IF EXISTS archive_document_relation;\nCREATE TABLE archive_document_relation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '关联ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    document_id BIGINT NOT NULL COMMENT '文档ID',\n    document_title VARCHAR(200) COMMENT '文档标题',\n    relation_type TINYINT DEFAULT 1 COMMENT '关联类型(1-原始文档,2-衍生文档,3-相关文档,4-其他)',\n    relation_desc VARCHAR(200) COMMENT '关联描述',\n    is_key_archive TINYINT DEFAULT 0 COMMENT '是否关键档案(0-否,1-是)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    add_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '添加时间',\n    add_by VARCHAR(50) COMMENT '添加人',\n    \n    UNIQUE KEY uk_archive_document (archive_id, document_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_document_id (document_id),\n    INDEX idx_relation_type (relation_type),\n    INDEX idx_is_key_archive (is_key_archive),\n    \n    CONSTRAINT fk_archive_document_relation_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文档档案关联表';\n\n-- ======================= 档案借阅管理表 =======================\n\n-- archive_borrow表（档案借阅记录表）\nDROP TABLE IF EXISTS archive_borrow;\nCREATE TABLE archive_borrow (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '借阅ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    borrow_number VARCHAR(50) NOT NULL COMMENT '借阅编号',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    archive_title VARCHAR(200) COMMENT '档案标题',\n    borrower_id BIGINT NOT NULL COMMENT '借阅人ID',\n    borrower_name VARCHAR(50) COMMENT '借阅人姓名',\n    borrower_department VARCHAR(100) COMMENT '借阅人部门',\n    borrow_purpose TINYINT DEFAULT 1 COMMENT '借阅目的(1-业务办理,2-研究学习,3-审计检查,4-其他)',\n    purpose_desc VARCHAR(500) COMMENT '借阅目的说明',\n    borrow_type TINYINT DEFAULT 1 COMMENT '借阅类型(1-普通借阅,2-紧急借阅,3-外借)',\n    borrow_status TINYINT DEFAULT 1 COMMENT '借阅状态(1-申请中,2-已批准,3-已借出,4-已归还,5-已拒绝,6-已超期)',\n    apply_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '申请时间',\n    planned_return_time DATETIME COMMENT '计划归还时间',\n    actual_borrow_time DATETIME COMMENT '实际借出时间',\n    actual_return_time DATETIME COMMENT '实际归还时间',\n    borrow_days INT DEFAULT 0 COMMENT '借阅天数',\n    overdue_days INT DEFAULT 0 COMMENT '超期天数',\n    approver_id BIGINT COMMENT '审批人ID',\n    approver_name VARCHAR(50) COMMENT '审批人姓名',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_opinion TEXT COMMENT '审批意见',\n    handler_id BIGINT COMMENT '经办人ID',\n    handler_name VARCHAR(50) COMMENT '经办人姓名',\n    borrow_reason VARCHAR(500) COMMENT '借阅理由',\n    return_condition TINYINT COMMENT '归还状态(1-完好,2-轻微损坏,3-严重损坏)',\n    return_desc VARCHAR(500) COMMENT '归还说明',\n    reminder_count INT DEFAULT 0 COMMENT '提醒次数',\n    last_reminder_time DATETIME COMMENT '最后提醒时间',\n    extension_count INT DEFAULT 0 COMMENT '续借次数',\n    extension_days INT DEFAULT 0 COMMENT '续借天数',\n    is_returned TINYINT DEFAULT 0 COMMENT '是否已归还(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_borrow_number (tenant_id, borrow_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_borrower_id (borrower_id),\n    INDEX idx_borrow_status (borrow_status),\n    INDEX idx_borrow_type (borrow_type),\n    INDEX idx_apply_time (apply_time),\n    INDEX idx_planned_return_time (planned_return_time),\n    INDEX idx_actual_return_time (actual_return_time),\n    INDEX idx_approver_id (approver_id),\n    INDEX idx_is_returned (is_returned),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_archive_borrow_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案借阅记录表';\n\n-- archive_borrow_approval表（借阅审批记录表）\nDROP TABLE IF EXISTS archive_borrow_approval;\nCREATE TABLE archive_borrow_approval (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审批ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    borrow_id BIGINT NOT NULL COMMENT '借阅ID',\n    approval_step TINYINT DEFAULT 1 COMMENT '审批步骤',\n    approver_id BIGINT NOT NULL COMMENT '审批人ID',\n    approver_name VARCHAR(50) COMMENT '审批人姓名',\n    approval_result TINYINT DEFAULT 1 COMMENT '审批结果(1-待审批,2-同意,3-拒绝)',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_opinion TEXT COMMENT '审批意见',\n    approval_conditions VARCHAR(500) COMMENT '审批条件',\n    next_approver_id BIGINT COMMENT '下一审批人ID',\n    process_instance_id VARCHAR(64) COMMENT '流程实例ID',\n    task_id VARCHAR(64) COMMENT '任务ID',\n    is_final TINYINT DEFAULT 0 COMMENT '是否最终审批(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_borrow_id (borrow_id),\n    INDEX idx_approver_id (approver_id),\n    INDEX idx_approval_result (approval_result),\n    INDEX idx_approval_time (approval_time),\n    INDEX idx_next_approver_id (next_approver_id),\n    INDEX idx_is_final (is_final),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_archive_borrow_approval_borrow FOREIGN KEY (borrow_id) REFERENCES archive_borrow(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='借阅审批记录表';\n\n-- archive_return表（档案归还记录表）\nDROP TABLE IF EXISTS archive_return;\nCREATE TABLE archive_return (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '归还ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    borrow_id BIGINT NOT NULL COMMENT '借阅ID',\n    return_number VARCHAR(50) NOT NULL COMMENT '归还编号',\n    returner_id BIGINT NOT NULL COMMENT '归还人ID',\n    returner_name VARCHAR(50) COMMENT '归还人姓名',\n    return_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '归还时间',\n    receiver_id BIGINT COMMENT '接收人ID',\n    receiver_name VARCHAR(50) COMMENT '接收人姓名',\n    archive_condition TINYINT DEFAULT 1 COMMENT '档案状态(1-完好,2-轻微损坏,3-严重损坏,4-遗失)',\n    condition_desc VARCHAR(500) COMMENT '状态说明',\n    return_desc VARCHAR(500) COMMENT '归还说明',\n    is_overdue TINYINT DEFAULT 0 COMMENT '是否超期(0-否,1-是)',\n    overdue_days INT DEFAULT 0 COMMENT '超期天数',\n    penalty_amount DECIMAL(10,2) DEFAULT 0 COMMENT '罚款金额',\n    penalty_reason VARCHAR(200) COMMENT '罚款原因',\n    is_penalty_paid TINYINT DEFAULT 0 COMMENT '是否已缴纳罚款(0-否,1-是)',\n    check_result TINYINT DEFAULT 1 COMMENT '检查结果(1-通过,2-不通过)',\n    check_opinion VARCHAR(500) COMMENT '检查意见',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_return_number (tenant_id, return_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_borrow_id (borrow_id),\n    INDEX idx_returner_id (returner_id),\n    INDEX idx_return_time (return_time),\n    INDEX idx_receiver_id (receiver_id),\n    INDEX idx_archive_condition (archive_condition),\n    INDEX idx_is_overdue (is_overdue),\n    INDEX idx_check_result (check_result),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_archive_return_borrow FOREIGN KEY (borrow_id) REFERENCES archive_borrow(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案归还记录表';\n\n-- ======================= 档案操作记录表 =======================\n\n-- archive_operation_log表（档案操作日志表）\nDROP TABLE IF EXISTS archive_operation_log;\nCREATE TABLE archive_operation_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    archive_id BIGINT COMMENT '档案ID',\n    operation_type TINYINT NOT NULL COMMENT '操作类型(1-创建,2-查看,3-编辑,4-删除,5-借阅,6-归还,7-盘点,8-销毁)',\n    operation_desc VARCHAR(200) COMMENT '操作描述',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(50) COMMENT '操作人姓名',\n    operator_ip VARCHAR(50) COMMENT '操作IP',\n    operation_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间',\n    operation_result TINYINT DEFAULT 1 COMMENT '操作结果(1-成功,2-失败)',\n    error_message VARCHAR(500) COMMENT '错误信息',\n    operation_details JSON COMMENT '操作详情(JSON格式)',\n    before_data JSON COMMENT '操作前数据(JSON格式)',\n    after_data JSON COMMENT '操作后数据(JSON格式)',\n    business_id VARCHAR(64) COMMENT '业务ID',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    trace_id VARCHAR(64) COMMENT '链路追踪ID',\n    session_id VARCHAR(64) COMMENT '会话ID',\n    user_agent VARCHAR(500) COMMENT '用户代理',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_operation_type (operation_type),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_operation_time (operation_time),\n    INDEX idx_operation_result (operation_result),\n    INDEX idx_business_id (business_id),\n    INDEX idx_trace_id (trace_id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案操作日志表';\n\n-- archive_inventory表（档案盘点记录表）\nDROP TABLE IF EXISTS archive_inventory;\nCREATE TABLE archive_inventory (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '盘点ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    inventory_number VARCHAR(50) NOT NULL COMMENT '盘点编号',\n    inventory_name VARCHAR(200) NOT NULL COMMENT '盘点名称',\n    inventory_type TINYINT DEFAULT 1 COMMENT '盘点类型(1-全面盘点,2-抽样盘点,3-专项盘点)',\n    inventory_scope VARCHAR(500) COMMENT '盘点范围',\n    inventory_status TINYINT DEFAULT 1 COMMENT '盘点状态(1-进行中,2-已完成,3-已暂停)',\n    start_time DATETIME COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    total_count INT DEFAULT 0 COMMENT '应盘数量',\n    actual_count INT DEFAULT 0 COMMENT '实盘数量',\n    match_count INT DEFAULT 0 COMMENT '盘点相符数量',\n    missing_count INT DEFAULT 0 COMMENT '盘亏数量',\n    surplus_count INT DEFAULT 0 COMMENT '盘盈数量',\n    damage_count INT DEFAULT 0 COMMENT '损坏数量',\n    inventory_result TINYINT COMMENT '盘点结果(1-正常,2-异常)',\n    organizer_id BIGINT COMMENT '组织者ID',\n    organizer_name VARCHAR(50) COMMENT '组织者姓名',\n    participants JSON COMMENT '参与人员(JSON格式)',\n    inventory_report TEXT COMMENT '盘点报告',\n    summary TEXT COMMENT '盘点总结',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_inventory_number (tenant_id, inventory_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_inventory_type (inventory_type),\n    INDEX idx_inventory_status (inventory_status),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_organizer_id (organizer_id),\n    INDEX idx_inventory_result (inventory_result),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案盘点记录表';\n\n-- archive_destroy表（档案销毁记录表）\nDROP TABLE IF EXISTS archive_destroy;\nCREATE TABLE archive_destroy (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '销毁ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    destroy_number VARCHAR(50) NOT NULL COMMENT '销毁编号',\n    destroy_batch VARCHAR(50) COMMENT '销毁批次',\n    archive_id BIGINT NOT NULL COMMENT '档案ID',\n    archive_title VARCHAR(200) COMMENT '档案标题',\n    destroy_reason TINYINT DEFAULT 1 COMMENT '销毁原因(1-超期,2-损坏,3-法定要求,4-其他)',\n    reason_desc VARCHAR(500) COMMENT '销毁原因说明',\n    destroy_method TINYINT DEFAULT 1 COMMENT '销毁方式(1-粉碎,2-焚烧,3-其他)',\n    destroy_status TINYINT DEFAULT 1 COMMENT '销毁状态(1-申请中,2-已批准,3-已销毁,4-已拒绝)',\n    apply_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '申请时间',\n    applicant_id BIGINT COMMENT '申请人ID',\n    applicant_name VARCHAR(50) COMMENT '申请人姓名',\n    approver_id BIGINT COMMENT '审批人ID',\n    approver_name VARCHAR(50) COMMENT '审批人姓名',\n    approval_time DATETIME COMMENT '审批时间',\n    approval_opinion TEXT COMMENT '审批意见',\n    destroy_time DATETIME COMMENT '销毁时间',\n    destroyer_id BIGINT COMMENT '销毁人ID',\n    destroyer_name VARCHAR(50) COMMENT '销毁人姓名',\n    witness_id BIGINT COMMENT '见证人ID',\n    witness_name VARCHAR(50) COMMENT '见证人姓名',\n    destroy_location VARCHAR(200) COMMENT '销毁地点',\n    destroy_desc TEXT COMMENT '销毁描述',\n    destroy_photos JSON COMMENT '销毁照片(JSON格式)',\n    destroy_video VARCHAR(500) COMMENT '销毁视频',\n    certificate_number VARCHAR(50) COMMENT '销毁证明编号',\n    is_completed TINYINT DEFAULT 0 COMMENT '是否完成(0-否,1-是)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_destroy_number (tenant_id, destroy_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_archive_id (archive_id),\n    INDEX idx_destroy_status (destroy_status),\n    INDEX idx_destroy_reason (destroy_reason),\n    INDEX idx_apply_time (apply_time),\n    INDEX idx_destroy_time (destroy_time),\n    INDEX idx_applicant_id (applicant_id),\n    INDEX idx_approver_id (approver_id),\n    INDEX idx_is_completed (is_completed),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_archive_destroy_archive FOREIGN KEY (archive_id) REFERENCES archive_info(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='档案销毁记录表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 29092
    },
    {
      "path": "law-firm-modules\\law-firm-archive\\src\\main\\resources\\META-INF\\db\\migration\\V8002__init_archive_data.sql",
      "filename": "V8002__init_archive_data.sql",
      "version": 8002,
      "module": "law-firm-modules",
      "content": "-- 档案管理模块基础数据\n-- 版本: V8002\n-- 模块: 档案管理模块 (V8000-V8999)\n-- 创建时间: 2023-06-01\n-- 说明: 档案管理功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 档案相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('档案类型', 'archive_type', 1, 'system', NOW(), '档案类型字典'),\n('档案状态', 'archive_status', 1, 'system', NOW(), '档案状态字典'),\n('档案密级', 'archive_level', 1, 'system', NOW(), '档案密级字典'),\n('保管期限', 'retention_period', 1, 'system', NOW(), '档案保管期限字典'),\n('存储位置类型', 'location_type', 1, 'system', NOW(), '存储位置类型字典'),\n('文件类型', 'file_type', 1, 'system', NOW(), '档案文件类型字典'),\n('文件状态', 'file_condition', 1, 'system', NOW(), '档案文件状态字典'),\n('标签类型', 'label_type', 1, 'system', NOW(), '档案标签类型字典'),\n('借阅目的', 'borrow_purpose', 1, 'system', NOW(), '档案借阅目的字典'),\n('借阅类型', 'borrow_type', 1, 'system', NOW(), '档案借阅类型字典'),\n('借阅状态', 'borrow_status', 1, 'system', NOW(), '档案借阅状态字典'),\n('审批结果', 'approval_result', 1, 'system', NOW(), '审批结果字典'),\n('归还状态', 'archive_condition', 1, 'system', NOW(), '档案归还状态字典'),\n('操作类型', 'archive_operation_type', 1, 'system', NOW(), '档案操作类型字典'),\n('盘点类型', 'inventory_type', 1, 'system', NOW(), '档案盘点类型字典'),\n('盘点状态', 'inventory_status', 1, 'system', NOW(), '档案盘点状态字典'),\n('销毁原因', 'destroy_reason', 1, 'system', NOW(), '档案销毁原因字典'),\n('销毁方式', 'destroy_method', 1, 'system', NOW(), '档案销毁方式字典'),\n('销毁状态', 'destroy_status', 1, 'system', NOW(), '档案销毁状态字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 档案类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '案件档案', '1', 'archive_type', '', 'primary', 'Y', 1, 'system', NOW(), '案件相关档案'),\n(2, '合同档案', '2', 'archive_type', '', 'success', 'N', 1, 'system', NOW(), '合同相关档案'),\n(3, '文档档案', '3', 'archive_type', '', 'info', 'N', 1, 'system', NOW(), '普通文档档案'),\n(4, '行政档案', '4', 'archive_type', '', 'warning', 'N', 1, 'system', NOW(), '行政相关档案'),\n(5, '财务档案', '5', 'archive_type', '', 'danger', 'N', 1, 'system', NOW(), '财务相关档案');\n\n-- 档案状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '在库', '1', 'archive_status', '', 'success', 'Y', 1, 'system', NOW(), '档案在库状态'),\n(2, '借出', '2', 'archive_status', '', 'warning', 'N', 1, 'system', NOW(), '档案借出状态'),\n(3, '遗失', '3', 'archive_status', '', 'danger', 'N', 1, 'system', NOW(), '档案遗失状态'),\n(4, '损坏', '4', 'archive_status', '', 'danger', 'N', 1, 'system', NOW(), '档案损坏状态'),\n(5, '已销毁', '5', 'archive_status', '', 'info', 'N', 1, 'system', NOW(), '档案已销毁状态');\n\n-- 档案密级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '普通', '1', 'archive_level', '', 'info', 'Y', 1, 'system', NOW(), '普通密级'),\n(2, '内部', '2', 'archive_level', '', 'primary', 'N', 1, 'system', NOW(), '内部密级'),\n(3, '机密', '3', 'archive_level', '', 'warning', 'N', 1, 'system', NOW(), '机密密级'),\n(4, '绝密', '4', 'archive_level', '', 'danger', 'N', 1, 'system', NOW(), '绝密密级');\n\n-- 保管期限\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '3年', '1', 'retention_period', '', 'info', 'N', 1, 'system', NOW(), '保管3年'),\n(2, '5年', '2', 'retention_period', '', 'primary', 'Y', 1, 'system', NOW(), '保管5年'),\n(3, '10年', '3', 'retention_period', '', 'success', 'N', 1, 'system', NOW(), '保管10年'),\n(4, '30年', '4', 'retention_period', '', 'warning', 'N', 1, 'system', NOW(), '保管30年'),\n(5, '永久', '5', 'retention_period', '', 'danger', 'N', 1, 'system', NOW(), '永久保管');\n\n-- 存储位置类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '楼层', '1', 'location_type', '', 'primary', 'N', 1, 'system', NOW(), '楼层位置'),\n(2, '区域', '2', 'location_type', '', 'success', 'N', 1, 'system', NOW(), '区域位置'),\n(3, '档案柜', '3', 'location_type', '', 'info', 'Y', 1, 'system', NOW(), '档案柜位置'),\n(4, '层板', '4', 'location_type', '', 'warning', 'N', 1, 'system', NOW(), '层板位置'),\n(5, '位置', '5', 'location_type', '', 'dark', 'N', 1, 'system', NOW(), '具体位置');\n\n-- 文件类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '原件', '1', 'file_type', '', 'danger', 'Y', 1, 'system', NOW(), '原始文件'),\n(2, '复印件', '2', 'file_type', '', 'warning', 'N', 1, 'system', NOW(), '复印文件'),\n(3, '扫描件', '3', 'file_type', '', 'info', 'N', 1, 'system', NOW(), '扫描文件'),\n(4, '电子件', '4', 'file_type', '', 'success', 'N', 1, 'system', NOW(), '电子文件');\n\n-- 文件状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '完好', '1', 'file_condition', '', 'success', 'Y', 1, 'system', NOW(), '文件完好'),\n(2, '轻微损坏', '2', 'file_condition', '', 'warning', 'N', 1, 'system', NOW(), '文件轻微损坏'),\n(3, '严重损坏', '3', 'file_condition', '', 'danger', 'N', 1, 'system', NOW(), '文件严重损坏'),\n(4, '无法使用', '4', 'file_condition', '', 'dark', 'N', 1, 'system', NOW(), '文件无法使用');\n\n-- 标签类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '业务标签', '1', 'label_type', '', 'primary', 'Y', 1, 'system', NOW(), '业务相关标签'),\n(2, '状态标签', '2', 'label_type', '', 'info', 'N', 1, 'system', NOW(), '状态相关标签'),\n(3, '优先级标签', '3', 'label_type', '', 'warning', 'N', 1, 'system', NOW(), '优先级标签'),\n(4, '自定义标签', '4', 'label_type', '', 'success', 'N', 1, 'system', NOW(), '自定义标签');\n\n-- 借阅目的\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '业务办理', '1', 'borrow_purpose', '', 'primary', 'Y', 1, 'system', NOW(), '业务办理目的'),\n(2, '研究学习', '2', 'borrow_purpose', '', 'success', 'N', 1, 'system', NOW(), '研究学习目的'),\n(3, '审计检查', '3', 'borrow_purpose', '', 'warning', 'N', 1, 'system', NOW(), '审计检查目的'),\n(4, '其他', '4', 'borrow_purpose', '', 'info', 'N', 1, 'system', NOW(), '其他目的');\n\n-- 借阅类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '普通借阅', '1', 'borrow_type', '', 'primary', 'Y', 1, 'system', NOW(), '普通借阅'),\n(2, '紧急借阅', '2', 'borrow_type', '', 'danger', 'N', 1, 'system', NOW(), '紧急借阅'),\n(3, '外借', '3', 'borrow_type', '', 'warning', 'N', 1, 'system', NOW(), '外借档案');\n\n-- 借阅状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '申请中', '1', 'borrow_status', '', 'info', 'Y', 1, 'system', NOW(), '借阅申请中'),\n(2, '已批准', '2', 'borrow_status', '', 'success', 'N', 1, 'system', NOW(), '借阅已批准'),\n(3, '已借出', '3', 'borrow_status', '', 'primary', 'N', 1, 'system', NOW(), '档案已借出'),\n(4, '已归还', '4', 'borrow_status', '', 'default', 'N', 1, 'system', NOW(), '档案已归还'),\n(5, '已拒绝', '5', 'borrow_status', '', 'danger', 'N', 1, 'system', NOW(), '借阅已拒绝'),\n(6, '已超期', '6', 'borrow_status', '', 'warning', 'N', 1, 'system', NOW(), '借阅已超期');\n\n-- 审批结果\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待审批', '1', 'approval_result', '', 'warning', 'Y', 1, 'system', NOW(), '待审批'),\n(2, '同意', '2', 'approval_result', '', 'success', 'N', 1, 'system', NOW(), '同意审批'),\n(3, '拒绝', '3', 'approval_result', '', 'danger', 'N', 1, 'system', NOW(), '拒绝审批');\n\n-- 归还状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '完好', '1', 'archive_condition', '', 'success', 'Y', 1, 'system', NOW(), '档案完好'),\n(2, '轻微损坏', '2', 'archive_condition', '', 'warning', 'N', 1, 'system', NOW(), '档案轻微损坏'),\n(3, '严重损坏', '3', 'archive_condition', '', 'danger', 'N', 1, 'system', NOW(), '档案严重损坏'),\n(4, '遗失', '4', 'archive_condition', '', 'dark', 'N', 1, 'system', NOW(), '档案遗失');\n\n-- 操作类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '创建', '1', 'archive_operation_type', '', 'success', 'Y', 1, 'system', NOW(), '创建档案'),\n(2, '查看', '2', 'archive_operation_type', '', 'info', 'N', 1, 'system', NOW(), '查看档案'),\n(3, '编辑', '3', 'archive_operation_type', '', 'warning', 'N', 1, 'system', NOW(), '编辑档案'),\n(4, '删除', '4', 'archive_operation_type', '', 'danger', 'N', 1, 'system', NOW(), '删除档案'),\n(5, '借阅', '5', 'archive_operation_type', '', 'primary', 'N', 1, 'system', NOW(), '借阅档案'),\n(6, '归还', '6', 'archive_operation_type', '', 'default', 'N', 1, 'system', NOW(), '归还档案'),\n(7, '盘点', '7', 'archive_operation_type', '', 'dark', 'N', 1, 'system', NOW(), '盘点档案'),\n(8, '销毁', '8', 'archive_operation_type', '', 'secondary', 'N', 1, 'system', NOW(), '销毁档案');\n\n-- 盘点类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '全面盘点', '1', 'inventory_type', '', 'primary', 'Y', 1, 'system', NOW(), '全面盘点'),\n(2, '抽样盘点', '2', 'inventory_type', '', 'info', 'N', 1, 'system', NOW(), '抽样盘点'),\n(3, '专项盘点', '3', 'inventory_type', '', 'warning', 'N', 1, 'system', NOW(), '专项盘点');\n\n-- 盘点状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '进行中', '1', 'inventory_status', '', 'warning', 'Y', 1, 'system', NOW(), '盘点进行中'),\n(2, '已完成', '2', 'inventory_status', '', 'success', 'N', 1, 'system', NOW(), '盘点已完成'),\n(3, '已暂停', '3', 'inventory_status', '', 'info', 'N', 1, 'system', NOW(), '盘点已暂停');\n\n-- 销毁原因\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '超期', '1', 'destroy_reason', '', 'warning', 'Y', 1, 'system', NOW(), '保管期超期'),\n(2, '损坏', '2', 'destroy_reason', '', 'danger', 'N', 1, 'system', NOW(), '档案损坏'),\n(3, '法定要求', '3', 'destroy_reason', '', 'primary', 'N', 1, 'system', NOW(), '法定要求销毁'),\n(4, '其他', '4', 'destroy_reason', '', 'info', 'N', 1, 'system', NOW(), '其他原因');\n\n-- 销毁方式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '粉碎', '1', 'destroy_method', '', 'primary', 'Y', 1, 'system', NOW(), '粉碎销毁'),\n(2, '焚烧', '2', 'destroy_method', '', 'danger', 'N', 1, 'system', NOW(), '焚烧销毁'),\n(3, '其他', '3', 'destroy_method', '', 'info', 'N', 1, 'system', NOW(), '其他方式');\n\n-- 销毁状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '申请中', '1', 'destroy_status', '', 'warning', 'Y', 1, 'system', NOW(), '销毁申请中'),\n(2, '已批准', '2', 'destroy_status', '', 'success', 'N', 1, 'system', NOW(), '销毁已批准'),\n(3, '已销毁', '3', 'destroy_status', '', 'info', 'N', 1, 'system', NOW(), '已销毁'),\n(4, '已拒绝', '4', 'destroy_status', '', 'danger', 'N', 1, 'system', NOW(), '销毁已拒绝');\n\n-- ======================= 档案分类初始化 =======================\n\n-- 档案分类数据\nINSERT INTO archive_category (tenant_id, category_name, category_code, parent_id, level, category_path, description, retention_period, access_level, sort_order, is_system, create_by, create_time) VALUES\n-- 一级分类\n(0, '案件档案', 'CASE_ARCHIVE', 0, 1, '/案件档案', '案件相关档案分类', 2, 2, 1, 1, 'system', NOW()),\n(0, '合同档案', 'CONTRACT_ARCHIVE', 0, 1, '/合同档案', '合同相关档案分类', 3, 2, 2, 1, 'system', NOW()),\n(0, '文档档案', 'DOCUMENT_ARCHIVE', 0, 1, '/文档档案', '普通文档档案分类', 2, 1, 3, 1, 'system', NOW()),\n(0, '行政档案', 'ADMIN_ARCHIVE', 0, 1, '/行政档案', '行政相关档案分类', 2, 2, 4, 1, 'system', NOW()),\n(0, '财务档案', 'FINANCE_ARCHIVE', 0, 1, '/财务档案', '财务相关档案分类', 3, 3, 5, 1, 'system', NOW()),\n\n-- 案件档案二级分类\n(0, '民事案件', 'CIVIL_CASE_ARCHIVE', 1, 2, '/案件档案/民事案件', '民事案件档案', 2, 2, 1, 1, 'system', NOW()),\n(0, '刑事案件', 'CRIMINAL_CASE_ARCHIVE', 1, 2, '/案件档案/刑事案件', '刑事案件档案', 3, 3, 2, 1, 'system', NOW()),\n(0, '行政案件', 'ADMIN_CASE_ARCHIVE', 1, 2, '/案件档案/行政案件', '行政案件档案', 2, 2, 3, 1, 'system', NOW()),\n\n-- 合同档案二级分类\n(0, '服务合同', 'SERVICE_CONTRACT_ARCHIVE', 2, 2, '/合同档案/服务合同', '法律服务合同档案', 4, 2, 1, 1, 'system', NOW()),\n(0, '劳动合同', 'LABOR_CONTRACT_ARCHIVE', 2, 2, '/合同档案/劳动合同', '劳动合同档案', 3, 2, 2, 1, 'system', NOW()),\n(0, '重要合同', 'IMPORTANT_CONTRACT_ARCHIVE', 2, 2, '/合同档案/重要合同', '重要合同档案', 5, 3, 3, 1, 'system', NOW()),\n\n-- 财务档案二级分类\n(0, '账册档案', 'ACCOUNT_ARCHIVE', 5, 2, '/财务档案/账册档案', '财务账册档案', 3, 3, 1, 1, 'system', NOW()),\n(0, '审计档案', 'AUDIT_ARCHIVE', 5, 2, '/财务档案/审计档案', '审计报告档案', 3, 3, 2, 1, 'system', NOW()),\n(0, '税务档案', 'TAX_ARCHIVE', 5, 2, '/财务档案/税务档案', '税务相关档案', 3, 3, 3, 1, 'system', NOW());\n\n-- ======================= 档案标签初始化 =======================\n\n-- 业务标签\nINSERT INTO archive_label (tenant_id, label_name, label_code, label_type, label_category, color, description, sort_order, is_system, create_by, create_time) VALUES\n(0, '重要', 'IMPORTANT', 1, '优先级', '#ff4d4f', '重要档案', 1, 1, 'system', NOW()),\n(0, '紧急', 'URGENT', 1, '优先级', '#ff7a45', '紧急档案', 2, 1, 'system', NOW()),\n(0, '机密', 'CONFIDENTIAL', 1, '安全', '#722ed1', '机密档案', 3, 1, 'system', NOW()),\n(0, '在库', 'IN_STOCK', 2, '状态', '#52c41a', '档案在库', 4, 1, 'system', NOW()),\n(0, '借出', 'BORROWED', 2, '状态', '#faad14', '档案借出', 5, 1, 'system', NOW()),\n(0, '已审核', 'REVIEWED', 2, '状态', '#1890ff', '已审核档案', 6, 1, 'system', NOW()),\n(0, '待整理', 'PENDING_ORGANIZE', 2, '状态', '#d9d9d9', '待整理档案', 7, 1, 'system', NOW()),\n(0, '原件', 'ORIGINAL', 1, '类型', '#13c2c2', '原件档案', 8, 1, 'system', NOW()),\n(0, '电子档案', 'ELECTRONIC', 1, '类型', '#52c41a', '电子档案', 9, 1, 'system', NOW()),\n(0, '可外借', 'BORROWABLE', 1, '权限', '#1890ff', '可外借档案', 10, 1, 'system', NOW());\n\n-- ======================= 存储位置初始化 =======================\n\n-- 基础存储位置\nINSERT INTO archive_storage (tenant_id, location_code, location_name, parent_id, level, location_path, location_type, floor_number, description, capacity, manager_name, create_by, create_time) VALUES\n-- 楼层\n(0, 'F1', '1楼', 0, 1, '/1楼', 1, '1', '档案室1楼', 1000, '档案管理员', 'system', NOW()),\n(0, 'F2', '2楼', 0, 1, '/2楼', 1, '2', '档案室2楼', 1000, '档案管理员', 'system', NOW()),\n\n-- 区域\n(0, 'F1-A', '1楼A区', 1, 2, '/1楼/A区', 2, '1', 'A区存放合同档案', 200, '档案管理员', 'system', NOW()),\n(0, 'F1-B', '1楼B区', 1, 2, '/1楼/B区', 2, '1', 'B区存放案件档案', 200, '档案管理员', 'system', NOW()),\n(0, 'F2-A', '2楼A区', 2, 2, '/2楼/A区', 2, '2', 'A区存放财务档案', 200, '档案管理员', 'system', NOW()),\n\n-- 档案柜\n(0, 'F1-A-001', '1楼A区001号柜', 3, 3, '/1楼/A区/001号柜', 3, '1', '合同档案柜001', 50, '档案管理员', 'system', NOW()),\n(0, 'F1-A-002', '1楼A区002号柜', 3, 3, '/1楼/A区/002号柜', 3, '1', '合同档案柜002', 50, '档案管理员', 'system', NOW()),\n(0, 'F1-B-001', '1楼B区001号柜', 4, 3, '/1楼/B区/001号柜', 3, '1', '案件档案柜001', 50, '档案管理员', 'system', NOW()),\n(0, 'F2-A-001', '2楼A区001号柜', 5, 3, '/2楼/A区/001号柜', 3, '2', '财务档案柜001', 50, '档案管理员', 'system', NOW());\n\n-- 初始化完成提示\nSELECT '档案管理模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建档案分类：', COUNT(*), '个') AS category_count FROM archive_category WHERE is_system = 1;\nSELECT CONCAT('已创建档案标签：', COUNT(*), '个') AS label_count FROM archive_label WHERE is_system = 1;\nSELECT CONCAT('已创建存储位置：', COUNT(*), '个') AS storage_count FROM archive_storage; ",
      "size": 15393
    },
    {
      "path": "law-firm-modules\\law-firm-analysis\\src\\main\\resources\\META-INF\\db\\migration\\V14000__analysis_module_description.sql",
      "filename": "V14000__analysis_module_description.sql",
      "version": 14000,
      "module": "law-firm-modules",
      "content": "-- 数据分析模块说明\n-- 版本: V14000\n-- 模块: 数据分析模块 (V14000-V14999)\n-- 创建时间: 2023-06-01\n-- 说明: 数据分析功能模块架构说明\n\n/*\n=============================================================================\n                            数据分析模块 - 功能说明\n=============================================================================\n\n一、模块职责\n数据分析模块负责律师事务所的数据挖掘、统计分析、报表生成和决策支持，包括：\n- 业务数据统计分析\n- 财务数据分析\n- 客户行为分析\n- 案件效率分析\n- 绩效评估分析\n- 趋势预测分析\n- 可视化报表展示\n- 智能决策支持\n- 数据挖掘与洞察\n\n二、版本规划 (V14000-V14999)\n- V14000: 模块说明文档\n- V14001: 表结构定义\n- V14002: 基础数据初始化\n\n三、核心功能表\n=============================================================================\n1. 分析任务管理\n   - analysis_task: 分析任务主表\n   - analysis_schedule: 分析调度配置\n   - analysis_result: 分析结果存储\n\n2. 指标体系管理\n   - analysis_indicator: 分析指标定义\n   - analysis_dimension: 分析维度配置\n   - analysis_formula: 计算公式管理\n\n3. 报表管理\n   - analysis_report: 报表配置\n   - analysis_chart: 图表配置\n   - analysis_dashboard: 仪表盘配置\n\n4. 数据源管理\n   - analysis_datasource: 数据源配置\n   - analysis_dataset: 数据集定义\n   - analysis_cache: 分析缓存\n\n5. 模板管理\n   - analysis_template: 分析模板\n   - analysis_theme: 图表主题\n   - analysis_style: 样式配置\n\n6. 权限控制\n   - analysis_permission: 分析权限\n   - analysis_role: 分析角色\n   - analysis_resource: 资源权限\n\n7. 历史记录\n   - analysis_history: 分析历史\n   - analysis_log: 操作日志\n   - analysis_audit: 审计记录\n\n四、数据关系\n=============================================================================\n- analysis_task → analysis_result (任务结果)\n- analysis_task → analysis_history (历史记录)\n- analysis_indicator → analysis_formula (计算公式)\n- analysis_report → analysis_chart (报表图表)\n- analysis_dashboard → analysis_chart (仪表盘图表)\n- analysis_datasource → analysis_dataset (数据集)\n- analysis_template → analysis_task (模板实例化)\n\n五、业务特点\n=============================================================================\n1. 多维度分析\n   - 按时间维度分析\n   - 按组织维度分析\n   - 按业务维度分析\n   - 按地域维度分析\n\n2. 实时计算\n   - 实时数据采集\n   - 增量计算处理\n   - 缓存优化机制\n   - 异步任务处理\n\n3. 可视化展示\n   - 多种图表类型\n   - 交互式报表\n   - 动态仪表盘\n   - 移动端适配\n\n4. 智能分析\n   - 趋势识别\n   - 异常检测\n   - 关联分析\n   - 预测建模\n\n5. 权限控制\n   - 数据访问控制\n   - 功能权限管理\n   - 行级数据过滤\n   - 敏感信息脱敏\n\n六、权限设计\n=============================================================================\n数据分析功能权限控制：\n- 分析查看: ANALYSIS_VIEW\n- 分析管理: ANALYSIS_MANAGE\n- 报表创建: REPORT_CREATE\n- 报表编辑: REPORT_EDIT\n- 报表删除: REPORT_DELETE\n- 仪表盘管理: DASHBOARD_MANAGE\n- 数据源配置: DATASOURCE_CONFIG\n- 指标管理: INDICATOR_MANAGE\n- 模板管理: TEMPLATE_MANAGE\n- 权限配置: PERMISSION_CONFIG\n- 系统配置: ANALYSIS_CONFIG\n- 数据导出: DATA_EXPORT\n\n七、注意事项\n=============================================================================\n1. 大数据量查询要做好性能优化\n2. 敏感数据要做好权限控制和脱敏处理\n3. 定时任务要做好监控和异常处理\n4. 缓存机制要考虑数据一致性\n5. 报表生成要控制资源消耗\n6. 数据备份要定期检查完整性\n7. 系统负载要实时监控预警\n\n八、分析任务编号规则\n=============================================================================\n分析任务编号格式：ANL-类型-YYYY-流水号\n- ANL: 分析(Analysis)前缀\n- 类型: BUS-业务, FIN-财务, CLI-客户, CAS-案件, PER-绩效\n- YYYY: 年份\n- 流水号: 4位数字，从0001开始\n\n示例：ANL-BUS-2023-0001（2023年第1个业务分析任务）\n\n九、分析类型管理\n=============================================================================\n分析类型分类：\n1. 业务分析(BUSINESS)\n   - 案件数量统计\n   - 业务量趋势分析\n   - 服务类型分布\n   - 业务效率分析\n\n2. 财务分析(FINANCE)\n   - 收入统计分析\n   - 成本结构分析\n   - 利润趋势分析\n   - 预算执行分析\n\n3. 客户分析(CLIENT)\n   - 客户结构分析\n   - 客户价值分析\n   - 客户满意度分析\n   - 客户流失分析\n\n4. 案件分析(CASE)\n   - 案件类型分析\n   - 案件周期分析\n   - 案件成功率分析\n   - 案件风险分析\n\n5. 绩效分析(PERFORMANCE)\n   - 员工绩效分析\n   - 团队效率分析\n   - 工作负荷分析\n   - 能力评估分析\n\n十、指标体系设计\n=============================================================================\n核心指标分类：\n1. 数量指标\n   - 案件数量\n   - 客户数量\n   - 合同数量\n   - 文档数量\n\n2. 质量指标\n   - 案件胜率\n   - 客户满意度\n   - 文档质量评分\n   - 服务质量评分\n\n3. 效率指标\n   - 案件处理周期\n   - 任务完成率\n   - 响应时间\n   - 资源利用率\n\n4. 财务指标\n   - 收入增长率\n   - 利润率\n   - 成本控制率\n   - 资金周转率\n\n5. 风险指标\n   - 案件风险等级\n   - 客户信用风险\n   - 财务风险指标\n   - 合规风险指标\n\n十一、报表体系\n=============================================================================\n报表类型分类：\n1. 定期报表\n   - 日报表\n   - 周报表\n   - 月报表\n   - 季报表\n   - 年报表\n\n2. 专题报表\n   - 业务分析报表\n   - 财务分析报表\n   - 客户分析报表\n   - 绩效分析报表\n\n3. 实时报表\n   - 实时监控大屏\n   - 关键指标仪表盘\n   - 异常预警报表\n   - 趋势分析报表\n\n4. 自定义报表\n   - 用户自定义查询\n   - 临时分析报表\n   - 对比分析报表\n   - 钻取分析报表\n\n十二、数据源管理\n=============================================================================\n数据源类型：\n1. 内部数据源\n   - 业务系统数据库\n   - 日志文件数据\n   - 缓存数据\n   - 配置数据\n\n2. 外部数据源\n   - 第三方API\n   - 外部数据库\n   - 文件数据源\n   - 云服务数据\n\n3. 实时数据源\n   - 消息队列数据\n   - 流式数据\n   - 传感器数据\n   - 用户行为数据\n\n数据处理方式：\n- 批量处理\n- 流式处理\n- 实时处理\n- 混合处理\n\n十三、缓存策略\n=============================================================================\n缓存层级：\n1. 查询结果缓存\n   - 复杂查询结果\n   - 聚合计算结果\n   - 报表数据缓存\n   - 图表数据缓存\n\n2. 中间结果缓存\n   - 计算过程缓存\n   - 临时表缓存\n   - 索引缓存\n   - 元数据缓存\n\n3. 配置缓存\n   - 权限配置缓存\n   - 模板配置缓存\n   - 主题配置缓存\n   - 公式配置缓存\n\n缓存策略：\n- LRU淘汰策略\n- 定时刷新机制\n- 版本控制机制\n- 分布式缓存\n\n十四、任务调度\n=============================================================================\n调度类型：\n1. 定时调度\n   - 固定时间执行\n   - 周期性执行\n   - 条件触发执行\n   - 依赖任务执行\n\n2. 手动调度\n   - 即时执行\n   - 批量执行\n   - 参数化执行\n   - 调试执行\n\n3. 自动调度\n   - 数据变化触发\n   - 阈值触发\n   - 事件触发\n   - 智能调度\n\n调度管理：\n- 任务监控\n- 失败重试\n- 并发控制\n- 资源管理\n\n十五、可视化组件\n=============================================================================\n图表类型：\n1. 基础图表\n   - 柱状图\n   - 折线图\n   - 饼图\n   - 散点图\n\n2. 高级图表\n   - 热力图\n   - 雷达图\n   - 桑基图\n   - 树形图\n\n3. 地理图表\n   - 地图分布\n   - 区域热力\n   - 轨迹图\n   - 3D地图\n\n4. 实时图表\n   - 实时折线图\n   - 实时仪表盘\n   - 动态效果图\n   - 流式数据图\n\n交互功能：\n- 钻取分析\n- 筛选过滤\n- 缩放平移\n- 数据刷选\n\n十六、数据安全\n=============================================================================\n安全措施：\n1. 访问控制\n   - 身份认证\n   - 权限授权\n   - 行级安全\n   - 列级安全\n\n2. 数据脱敏\n   - 敏感信息脱敏\n   - 动态脱敏\n   - 静态脱敏\n   - 格式保持脱敏\n\n3. 审计监控\n   - 访问日志记录\n   - 操作轨迹追踪\n   - 异常行为检测\n   - 合规性检查\n\n4. 数据加密\n   - 传输加密\n   - 存储加密\n   - 字段加密\n   - 密钥管理\n\n十七、性能优化\n=============================================================================\n优化策略：\n1. 查询优化\n   - SQL优化\n   - 索引优化\n   - 分区分表\n   - 读写分离\n\n2. 计算优化\n   - 并行计算\n   - 分布式计算\n   - 增量计算\n   - 预计算\n\n3. 存储优化\n   - 数据压缩\n   - 列式存储\n   - 内存计算\n   - SSD加速\n\n4. 网络优化\n   - 数据压缩传输\n   - CDN加速\n   - 负载均衡\n   - 连接池优化\n\n十八、监控预警\n=============================================================================\n监控指标：\n1. 系统指标\n   - CPU使用率\n   - 内存使用率\n   - 磁盘IO\n   - 网络带宽\n\n2. 业务指标\n   - 任务执行时间\n   - 查询响应时间\n   - 数据准确性\n   - 用户访问量\n\n3. 质量指标\n   - 数据完整性\n   - 数据一致性\n   - 报表及时性\n   - 系统可用性\n\n预警机制：\n- 阈值预警\n- 趋势预警\n- 异常检测\n- 自动恢复\n\n=============================================================================\n                              模块版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护团队: 数据分析组\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '数据分析模块说明文档已加载' AS message; ",
      "size": 6394
    },
    {
      "path": "law-firm-modules\\law-firm-analysis\\src\\main\\resources\\META-INF\\db\\migration\\V14001__init_analysis_tables.sql",
      "filename": "V14001__init_analysis_tables.sql",
      "version": 14001,
      "module": "law-firm-modules",
      "content": "-- 数据分析模块表结构\n-- 版本: V14001\n-- 模块: 数据分析模块 (V14000-V14999)\n-- 创建时间: 2023-06-01\n-- 说明: 数据分析功能的完整表结构定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 分析任务管理表 =======================\n\n-- analysis_task表（分析任务主表）\nDROP TABLE IF EXISTS analysis_task;\nCREATE TABLE analysis_task (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '任务ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_number VARCHAR(50) NOT NULL COMMENT '任务编号',\n    task_name VARCHAR(200) NOT NULL COMMENT '任务名称',\n    description TEXT COMMENT '任务描述',\n    task_type TINYINT DEFAULT 1 COMMENT '任务类型(1-业务分析,2-财务分析,3-客户分析,4-案件分析,5-绩效分析)',\n    analysis_category TINYINT DEFAULT 1 COMMENT '分析类别(1-统计分析,2-趋势分析,3-对比分析,4-预测分析)',\n    task_status TINYINT DEFAULT 1 COMMENT '任务状态(1-待执行,2-执行中,3-已完成,4-失败,5-已暂停,6-已取消)',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高,4-紧急)',\n    creator_id BIGINT NOT NULL COMMENT '创建者ID',\n    creator_name VARCHAR(50) COMMENT '创建者姓名',\n    executor_id BIGINT COMMENT '执行者ID',\n    executor_name VARCHAR(50) COMMENT '执行者姓名',\n    template_id BIGINT COMMENT '使用模板ID',\n    datasource_id BIGINT COMMENT '数据源ID',\n    schedule_id BIGINT COMMENT '调度配置ID',\n    start_time DATETIME COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    planned_start_time DATETIME COMMENT '计划开始时间',\n    planned_end_time DATETIME COMMENT '计划结束时间',\n    execution_duration BIGINT DEFAULT 0 COMMENT '执行时长(秒)',\n    data_range_start DATETIME COMMENT '数据范围开始时间',\n    data_range_end DATETIME COMMENT '数据范围结束时间',\n    parameters JSON COMMENT '任务参数(JSON格式)',\n    config JSON COMMENT '配置信息(JSON格式)',\n    progress_percentage DECIMAL(5,2) DEFAULT 0 COMMENT '完成进度(0-100)',\n    result_count BIGINT DEFAULT 0 COMMENT '结果记录数',\n    error_message TEXT COMMENT '错误信息',\n    retry_count INT DEFAULT 0 COMMENT '重试次数',\n    max_retry_count INT DEFAULT 3 COMMENT '最大重试次数',\n    is_scheduled TINYINT DEFAULT 0 COMMENT '是否定时任务(0-否,1-是)',\n    is_enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-禁用,1-启用)',\n    notification_config JSON COMMENT '通知配置(JSON格式)',\n    tags JSON COMMENT '标签信息(JSON格式)',\n    cost DECIMAL(12,2) DEFAULT 0.00 COMMENT '执行成本',\n    quality_score DECIMAL(3,1) DEFAULT 0 COMMENT '质量评分(0-10)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_task_number (tenant_id, task_number),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_type (task_type),\n    INDEX idx_task_status (task_status),\n    INDEX idx_priority (priority),\n    INDEX idx_creator_id (creator_id),\n    INDEX idx_executor_id (executor_id),\n    INDEX idx_template_id (template_id),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_is_scheduled (is_scheduled),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析任务主表';\n\n-- analysis_schedule表（分析调度配置表）\nDROP TABLE IF EXISTS analysis_schedule;\nCREATE TABLE analysis_schedule (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '调度ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    schedule_name VARCHAR(100) NOT NULL COMMENT '调度名称',\n    schedule_type TINYINT DEFAULT 1 COMMENT '调度类型(1-定时,2-周期,3-条件触发)',\n    cron_expression VARCHAR(100) COMMENT 'Cron表达式',\n    start_date DATE COMMENT '开始日期',\n    end_date DATE COMMENT '结束日期',\n    trigger_condition TEXT COMMENT '触发条件',\n    repeat_interval INT DEFAULT 0 COMMENT '重复间隔(分钟)',\n    max_execution_count INT DEFAULT 0 COMMENT '最大执行次数(0-不限制)',\n    current_execution_count INT DEFAULT 0 COMMENT '当前执行次数',\n    last_execution_time DATETIME COMMENT '最后执行时间',\n    next_execution_time DATETIME COMMENT '下次执行时间',\n    is_active TINYINT DEFAULT 1 COMMENT '是否激活(0-否,1-是)',\n    config JSON COMMENT '调度配置(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_schedule_type (schedule_type),\n    INDEX idx_next_execution_time (next_execution_time),\n    INDEX idx_is_active (is_active),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析调度配置表';\n\n-- analysis_result表（分析结果存储表）\nDROP TABLE IF EXISTS analysis_result;\nCREATE TABLE analysis_result (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '结果ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    result_type TINYINT DEFAULT 1 COMMENT '结果类型(1-统计数据,2-图表数据,3-报表数据,4-原始数据)',\n    result_format TINYINT DEFAULT 1 COMMENT '结果格式(1-JSON,2-XML,3-CSV,4-Excel)',\n    result_title VARCHAR(200) COMMENT '结果标题',\n    result_summary TEXT COMMENT '结果摘要',\n    result_data LONGTEXT COMMENT '结果数据',\n    metadata JSON COMMENT '元数据(JSON格式)',\n    file_path VARCHAR(500) COMMENT '文件路径',\n    file_size BIGINT DEFAULT 0 COMMENT '文件大小(字节)',\n    row_count BIGINT DEFAULT 0 COMMENT '行数',\n    column_count INT DEFAULT 0 COMMENT '列数',\n    chart_config JSON COMMENT '图表配置(JSON格式)',\n    export_formats JSON COMMENT '支持导出格式(JSON格式)',\n    cache_key VARCHAR(200) COMMENT '缓存键',\n    cache_expire_time DATETIME COMMENT '缓存过期时间',\n    is_cached TINYINT DEFAULT 0 COMMENT '是否已缓存(0-否,1-是)',\n    access_count INT DEFAULT 0 COMMENT '访问次数',\n    last_access_time DATETIME COMMENT '最后访问时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_result_type (result_type),\n    INDEX idx_cache_key (cache_key),\n    INDEX idx_cache_expire_time (cache_expire_time),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_analysis_result_task FOREIGN KEY (task_id) REFERENCES analysis_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析结果存储表';\n\n-- ======================= 指标体系管理表 =======================\n\n-- analysis_indicator表（分析指标定义表）\nDROP TABLE IF EXISTS analysis_indicator;\nCREATE TABLE analysis_indicator (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '指标ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    indicator_code VARCHAR(50) NOT NULL COMMENT '指标编码',\n    indicator_name VARCHAR(200) NOT NULL COMMENT '指标名称',\n    indicator_type TINYINT DEFAULT 1 COMMENT '指标类型(1-数量,2-质量,3-效率,4-财务,5-风险)',\n    data_type TINYINT DEFAULT 1 COMMENT '数据类型(1-整数,2-小数,3-百分比,4-金额,5-文本)',\n    unit VARCHAR(20) COMMENT '单位',\n    description TEXT COMMENT '指标描述',\n    formula_id BIGINT COMMENT '计算公式ID',\n    dimension_ids JSON COMMENT '维度ID列表(JSON格式)',\n    datasource_id BIGINT COMMENT '数据源ID',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统内置(0-否,1-是)',\n    is_key_indicator TINYINT DEFAULT 0 COMMENT '是否关键指标(0-否,1-是)',\n    category VARCHAR(50) COMMENT '指标分类',\n    group_name VARCHAR(100) COMMENT '指标分组',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    threshold_config JSON COMMENT '阈值配置(JSON格式)',\n    format_config JSON COMMENT '格式配置(JSON格式)',\n    aggregation_type TINYINT DEFAULT 1 COMMENT '聚合类型(1-求和,2-平均,3-最大,4-最小,5-计数)',\n    time_granularity TINYINT DEFAULT 1 COMMENT '时间粒度(1-天,2-周,3-月,4-季度,5-年)',\n    refresh_frequency INT DEFAULT 3600 COMMENT '刷新频率(秒)',\n    last_calculated_time DATETIME COMMENT '最后计算时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_indicator_code (tenant_id, indicator_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_indicator_type (indicator_type),\n    INDEX idx_category (category),\n    INDEX idx_group_name (group_name),\n    INDEX idx_is_key_indicator (is_key_indicator),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析指标定义表';\n\n-- analysis_dimension表（分析维度配置表）\nDROP TABLE IF EXISTS analysis_dimension;\nCREATE TABLE analysis_dimension (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '维度ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    dimension_code VARCHAR(50) NOT NULL COMMENT '维度编码',\n    dimension_name VARCHAR(100) NOT NULL COMMENT '维度名称',\n    dimension_type TINYINT DEFAULT 1 COMMENT '维度类型(1-时间,2-组织,3-业务,4-地域,5-客户)',\n    parent_id BIGINT DEFAULT 0 COMMENT '父维度ID',\n    level TINYINT DEFAULT 1 COMMENT '层级',\n    path VARCHAR(500) COMMENT '层级路径',\n    table_name VARCHAR(100) COMMENT '关联表名',\n    column_name VARCHAR(50) COMMENT '关联字段名',\n    value_type TINYINT DEFAULT 1 COMMENT '值类型(1-字符串,2-数字,3-日期)',\n    default_value VARCHAR(200) COMMENT '默认值',\n    value_range JSON COMMENT '值范围(JSON格式)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    is_filterable TINYINT DEFAULT 1 COMMENT '是否可筛选(0-否,1-是)',\n    is_groupable TINYINT DEFAULT 1 COMMENT '是否可分组(0-否,1-是)',\n    config JSON COMMENT '配置信息(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_dimension_code (tenant_id, dimension_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_dimension_type (dimension_type),\n    INDEX idx_parent_id (parent_id),\n    INDEX idx_level (level),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析维度配置表';\n\n-- analysis_formula表（计算公式管理表）\nDROP TABLE IF EXISTS analysis_formula;\nCREATE TABLE analysis_formula (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '公式ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    formula_name VARCHAR(100) NOT NULL COMMENT '公式名称',\n    formula_code VARCHAR(50) COMMENT '公式编码',\n    formula_type TINYINT DEFAULT 1 COMMENT '公式类型(1-数学公式,2-SQL查询,3-脚本函数)',\n    formula_expression TEXT NOT NULL COMMENT '公式表达式',\n    variables JSON COMMENT '变量定义(JSON格式)',\n    parameters JSON COMMENT '参数配置(JSON格式)',\n    description TEXT COMMENT '公式描述',\n    example_usage TEXT COMMENT '使用示例',\n    validation_rules JSON COMMENT '验证规则(JSON格式)',\n    is_builtin TINYINT DEFAULT 0 COMMENT '是否内置(0-否,1-是)',\n    category VARCHAR(50) COMMENT '公式分类',\n    complexity_level TINYINT DEFAULT 1 COMMENT '复杂度级别(1-简单,2-中等,3-复杂)',\n    execution_time_avg DECIMAL(10,3) DEFAULT 0 COMMENT '平均执行时间(毫秒)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    last_used_time DATETIME COMMENT '最后使用时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_formula_code (tenant_id, formula_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_formula_type (formula_type),\n    INDEX idx_category (category),\n    INDEX idx_complexity_level (complexity_level),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='计算公式管理表';\n\n-- ======================= 报表管理表 =======================\n\n-- analysis_report表（报表配置表）\nDROP TABLE IF EXISTS analysis_report;\nCREATE TABLE analysis_report (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '报表ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    report_code VARCHAR(50) NOT NULL COMMENT '报表编码',\n    report_name VARCHAR(200) NOT NULL COMMENT '报表名称',\n    report_type TINYINT DEFAULT 1 COMMENT '报表类型(1-定期报表,2-专题报表,3-实时报表,4-自定义报表)',\n    category VARCHAR(50) COMMENT '报表分类',\n    description TEXT COMMENT '报表描述',\n    datasource_id BIGINT COMMENT '数据源ID',\n    template_id BIGINT COMMENT '模板ID',\n    layout_config JSON COMMENT '布局配置(JSON格式)',\n    style_config JSON COMMENT '样式配置(JSON格式)',\n    parameter_config JSON COMMENT '参数配置(JSON格式)',\n    filter_config JSON COMMENT '筛选配置(JSON格式)',\n    chart_ids JSON COMMENT '图表ID列表(JSON格式)',\n    indicator_ids JSON COMMENT '指标ID列表(JSON格式)',\n    dimension_ids JSON COMMENT '维度ID列表(JSON格式)',\n    refresh_frequency INT DEFAULT 3600 COMMENT '刷新频率(秒)',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    is_scheduled TINYINT DEFAULT 0 COMMENT '是否定时生成(0-否,1-是)',\n    schedule_config JSON COMMENT '调度配置(JSON格式)',\n    export_formats JSON COMMENT '导出格式(JSON格式)',\n    owner_id BIGINT NOT NULL COMMENT '拥有者ID',\n    owner_name VARCHAR(50) COMMENT '拥有者姓名',\n    view_count INT DEFAULT 0 COMMENT '查看次数',\n    last_generated_time DATETIME COMMENT '最后生成时间',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_report_code (tenant_id, report_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_report_type (report_type),\n    INDEX idx_category (category),\n    INDEX idx_owner_id (owner_id),\n    INDEX idx_is_public (is_public),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='报表配置表';\n\n-- analysis_chart表（图表配置表）\nDROP TABLE IF EXISTS analysis_chart;\nCREATE TABLE analysis_chart (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '图表ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    chart_name VARCHAR(100) NOT NULL COMMENT '图表名称',\n    chart_type TINYINT DEFAULT 1 COMMENT '图表类型(1-柱状图,2-折线图,3-饼图,4-散点图,5-热力图,6-雷达图)',\n    chart_library TINYINT DEFAULT 1 COMMENT '图表库(1-ECharts,2-D3,3-Highcharts,4-Chart.js)',\n    data_config JSON COMMENT '数据配置(JSON格式)',\n    style_config JSON COMMENT '样式配置(JSON格式)',\n    interaction_config JSON COMMENT '交互配置(JSON格式)',\n    animation_config JSON COMMENT '动画配置(JSON格式)',\n    responsive_config JSON COMMENT '响应式配置(JSON格式)',\n    indicator_ids JSON COMMENT '关联指标ID(JSON格式)',\n    dimension_ids JSON COMMENT '关联维度ID(JSON格式)',\n    datasource_id BIGINT COMMENT '数据源ID',\n    query_config JSON COMMENT '查询配置(JSON格式)',\n    cache_config JSON COMMENT '缓存配置(JSON格式)',\n    width INT DEFAULT 400 COMMENT '宽度(像素)',\n    height INT DEFAULT 300 COMMENT '高度(像素)',\n    is_drillable TINYINT DEFAULT 0 COMMENT '是否支持钻取(0-否,1-是)',\n    drill_config JSON COMMENT '钻取配置(JSON格式)',\n    is_exportable TINYINT DEFAULT 1 COMMENT '是否可导出(0-否,1-是)',\n    export_formats JSON COMMENT '导出格式(JSON格式)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_chart_type (chart_type),\n    INDEX idx_chart_library (chart_library),\n    INDEX idx_datasource_id (datasource_id),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='图表配置表';\n\n-- analysis_dashboard表（仪表盘配置表）\nDROP TABLE IF EXISTS analysis_dashboard;\nCREATE TABLE analysis_dashboard (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '仪表盘ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    dashboard_name VARCHAR(100) NOT NULL COMMENT '仪表盘名称',\n    dashboard_code VARCHAR(50) COMMENT '仪表盘编码',\n    description TEXT COMMENT '描述',\n    layout_type TINYINT DEFAULT 1 COMMENT '布局类型(1-网格,2-自由,3-模板)',\n    layout_config JSON COMMENT '布局配置(JSON格式)',\n    theme_config JSON COMMENT '主题配置(JSON格式)',\n    chart_configs JSON COMMENT '图表配置列表(JSON格式)',\n    filter_config JSON COMMENT '全局筛选配置(JSON格式)',\n    refresh_config JSON COMMENT '刷新配置(JSON格式)',\n    permission_config JSON COMMENT '权限配置(JSON格式)',\n    auto_refresh_interval INT DEFAULT 300 COMMENT '自动刷新间隔(秒)',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认(0-否,1-是)',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    owner_id BIGINT NOT NULL COMMENT '拥有者ID',\n    owner_name VARCHAR(50) COMMENT '拥有者姓名',\n    view_count INT DEFAULT 0 COMMENT '查看次数',\n    last_viewed_time DATETIME COMMENT '最后查看时间',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_dashboard_code (tenant_id, dashboard_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_layout_type (layout_type),\n    INDEX idx_owner_id (owner_id),\n    INDEX idx_is_default (is_default),\n    INDEX idx_is_public (is_public),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='仪表盘配置表';\n\n-- ======================= 数据源管理表 =======================\n\n-- analysis_datasource表（数据源配置表）\nDROP TABLE IF EXISTS analysis_datasource;\nCREATE TABLE analysis_datasource (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '数据源ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    datasource_name VARCHAR(100) NOT NULL COMMENT '数据源名称',\n    datasource_code VARCHAR(50) COMMENT '数据源编码',\n    datasource_type TINYINT DEFAULT 1 COMMENT '数据源类型(1-MySQL,2-PostgreSQL,3-Redis,4-Elasticsearch,5-API,6-文件)',\n    connection_config JSON COMMENT '连接配置(JSON格式)',\n    auth_config JSON COMMENT '认证配置(JSON格式)',\n    pool_config JSON COMMENT '连接池配置(JSON格式)',\n    description TEXT COMMENT '描述',\n    is_encrypted TINYINT DEFAULT 1 COMMENT '是否加密存储(0-否,1-是)',\n    connection_status TINYINT DEFAULT 0 COMMENT '连接状态(0-未测试,1-正常,2-异常)',\n    last_test_time DATETIME COMMENT '最后测试时间',\n    last_test_result TEXT COMMENT '最后测试结果',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    health_check_interval INT DEFAULT 300 COMMENT '健康检查间隔(秒)',\n    timeout_seconds INT DEFAULT 30 COMMENT '超时时间(秒)',\n    retry_count INT DEFAULT 3 COMMENT '重试次数',\n    is_readonly TINYINT DEFAULT 1 COMMENT '是否只读(0-否,1-是)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_datasource_code (tenant_id, datasource_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_datasource_type (datasource_type),\n    INDEX idx_connection_status (connection_status),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='数据源配置表';\n\n-- analysis_dataset表（数据集定义表）\nDROP TABLE IF EXISTS analysis_dataset;\nCREATE TABLE analysis_dataset (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '数据集ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    dataset_name VARCHAR(100) NOT NULL COMMENT '数据集名称',\n    dataset_code VARCHAR(50) COMMENT '数据集编码',\n    dataset_type TINYINT DEFAULT 1 COMMENT '数据集类型(1-表,2-视图,3-查询,4-API,5-文件)',\n    datasource_id BIGINT NOT NULL COMMENT '数据源ID',\n    source_config JSON COMMENT '数据源配置(JSON格式)',\n    query_config JSON COMMENT '查询配置(JSON格式)',\n    field_config JSON COMMENT '字段配置(JSON格式)',\n    filter_config JSON COMMENT '过滤配置(JSON格式)',\n    cache_config JSON COMMENT '缓存配置(JSON格式)',\n    description TEXT COMMENT '描述',\n    refresh_mode TINYINT DEFAULT 1 COMMENT '刷新模式(1-实时,2-定时,3-手动)',\n    refresh_interval INT DEFAULT 3600 COMMENT '刷新间隔(秒)',\n    last_refresh_time DATETIME COMMENT '最后刷新时间',\n    row_count BIGINT DEFAULT 0 COMMENT '行数',\n    column_count INT DEFAULT 0 COMMENT '列数',\n    data_size BIGINT DEFAULT 0 COMMENT '数据大小(字节)',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    owner_id BIGINT NOT NULL COMMENT '拥有者ID',\n    owner_name VARCHAR(50) COMMENT '拥有者姓名',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_dataset_code (tenant_id, dataset_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_dataset_type (dataset_type),\n    INDEX idx_datasource_id (datasource_id),\n    INDEX idx_refresh_mode (refresh_mode),\n    INDEX idx_owner_id (owner_id),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_analysis_dataset_datasource FOREIGN KEY (datasource_id) REFERENCES analysis_datasource(id) ON DELETE RESTRICT\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='数据集定义表';\n\n-- analysis_cache表（分析缓存表）\nDROP TABLE IF EXISTS analysis_cache;\nCREATE TABLE analysis_cache (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '缓存ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    cache_key VARCHAR(200) NOT NULL COMMENT '缓存键',\n    cache_type TINYINT DEFAULT 1 COMMENT '缓存类型(1-查询结果,2-图表数据,3-报表数据,4-计算结果)',\n    cache_data LONGTEXT COMMENT '缓存数据',\n    metadata JSON COMMENT '元数据(JSON格式)',\n    data_size BIGINT DEFAULT 0 COMMENT '数据大小(字节)',\n    hit_count INT DEFAULT 0 COMMENT '命中次数',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    expire_time DATETIME NOT NULL COMMENT '过期时间',\n    last_access_time DATETIME COMMENT '最后访问时间',\n    access_count INT DEFAULT 0 COMMENT '访问次数',\n    source_info JSON COMMENT '来源信息(JSON格式)',\n    compression_type TINYINT DEFAULT 0 COMMENT '压缩类型(0-无,1-GZIP,2-LZ4)',\n    is_compressed TINYINT DEFAULT 0 COMMENT '是否压缩(0-否,1-是)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    \n    UNIQUE KEY uk_tenant_cache_key (tenant_id, cache_key),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_cache_type (cache_type),\n    INDEX idx_expire_time (expire_time),\n    INDEX idx_hit_count (hit_count),\n    INDEX idx_last_access_time (last_access_time),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析缓存表';\n\n-- ======================= 模板管理表 =======================\n\n-- analysis_template表（分析模板表）\nDROP TABLE IF EXISTS analysis_template;\nCREATE TABLE analysis_template (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '模板ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    template_name VARCHAR(100) NOT NULL COMMENT '模板名称',\n    template_code VARCHAR(50) COMMENT '模板编码',\n    template_type TINYINT DEFAULT 1 COMMENT '模板类型(1-任务模板,2-报表模板,3-图表模板,4-仪表盘模板)',\n    category VARCHAR(50) COMMENT '模板分类',\n    description TEXT COMMENT '模板描述',\n    preview_image VARCHAR(500) COMMENT '预览图片',\n    config_template JSON COMMENT '配置模板(JSON格式)',\n    default_config JSON COMMENT '默认配置(JSON格式)',\n    parameter_schema JSON COMMENT '参数模式(JSON格式)',\n    is_builtin TINYINT DEFAULT 0 COMMENT '是否内置(0-否,1-是)',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    usage_count INT DEFAULT 0 COMMENT '使用次数',\n    rating DECIMAL(3,1) DEFAULT 0 COMMENT '评分(0-10)',\n    rating_count INT DEFAULT 0 COMMENT '评分人数',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    author_id BIGINT NOT NULL COMMENT '作者ID',\n    author_name VARCHAR(50) COMMENT '作者姓名',\n    tags JSON COMMENT '标签(JSON格式)',\n    sort_order INT DEFAULT 0 COMMENT '排序序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_template_code (tenant_id, template_code),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_template_type (template_type),\n    INDEX idx_category (category),\n    INDEX idx_author_id (author_id),\n    INDEX idx_usage_count (usage_count),\n    INDEX idx_rating (rating),\n    INDEX idx_sort_order (sort_order),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析模板表';\n\n-- ======================= 历史记录表 =======================\n\n-- analysis_history表（分析历史表）\nDROP TABLE IF EXISTS analysis_history;\nCREATE TABLE analysis_history (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '历史ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    task_id BIGINT NOT NULL COMMENT '任务ID',\n    execution_id VARCHAR(50) COMMENT '执行ID',\n    execution_status TINYINT DEFAULT 1 COMMENT '执行状态(1-成功,2-失败,3-超时,4-取消)',\n    start_time DATETIME NOT NULL COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    execution_duration BIGINT DEFAULT 0 COMMENT '执行时长(毫秒)',\n    result_summary TEXT COMMENT '结果摘要',\n    error_message TEXT COMMENT '错误信息',\n    result_count BIGINT DEFAULT 0 COMMENT '结果记录数',\n    data_processed BIGINT DEFAULT 0 COMMENT '处理数据量',\n    memory_used BIGINT DEFAULT 0 COMMENT '内存使用量(字节)',\n    cpu_time BIGINT DEFAULT 0 COMMENT 'CPU时间(毫秒)',\n    executor_info JSON COMMENT '执行器信息(JSON格式)',\n    parameters JSON COMMENT '执行参数(JSON格式)',\n    performance_metrics JSON COMMENT '性能指标(JSON格式)',\n    retry_count INT DEFAULT 0 COMMENT '重试次数',\n    parent_execution_id VARCHAR(50) COMMENT '父执行ID',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_task_id (task_id),\n    INDEX idx_execution_id (execution_id),\n    INDEX idx_execution_status (execution_status),\n    INDEX idx_start_time (start_time),\n    INDEX idx_end_time (end_time),\n    INDEX idx_parent_execution_id (parent_execution_id),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_analysis_history_task FOREIGN KEY (task_id) REFERENCES analysis_task(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='分析历史表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 28541
    },
    {
      "path": "law-firm-modules\\law-firm-analysis\\src\\main\\resources\\META-INF\\db\\migration\\V14002__init_analysis_data.sql",
      "filename": "V14002__init_analysis_data.sql",
      "version": 14002,
      "module": "law-firm-modules",
      "content": "-- 数据分析模块基础数据\n-- 版本: V14002\n-- 模块: 数据分析模块 (V14000-V14999)\n-- 创建时间: 2023-06-01\n-- 说明: 数据分析功能的基础字典数据和初始化数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统字典类型 =======================\n\n-- 数据分析相关字典类型\nINSERT INTO sys_dict_type (dict_name, dict_type, status, create_by, create_time, remark) VALUES\n('分析任务类型', 'analysis_task_type', 1, 'system', NOW(), '分析任务类型字典'),\n('分析类别', 'analysis_category', 1, 'system', NOW(), '分析类别字典'),\n('任务状态', 'analysis_task_status', 1, 'system', NOW(), '分析任务状态字典'),\n('任务优先级', 'analysis_priority', 1, 'system', NOW(), '分析任务优先级字典'),\n('调度类型', 'schedule_type', 1, 'system', NOW(), '调度类型字典'),\n('结果类型', 'result_type', 1, 'system', NOW(), '分析结果类型字典'),\n('结果格式', 'result_format', 1, 'system', NOW(), '分析结果格式字典'),\n('指标类型', 'indicator_type', 1, 'system', NOW(), '分析指标类型字典'),\n('数据类型', 'data_type', 1, 'system', NOW(), '数据类型字典'),\n('聚合类型', 'aggregation_type', 1, 'system', NOW(), '聚合类型字典'),\n('时间粒度', 'time_granularity', 1, 'system', NOW(), '时间粒度字典'),\n('维度类型', 'dimension_type', 1, 'system', NOW(), '分析维度类型字典'),\n('公式类型', 'formula_type', 1, 'system', NOW(), '计算公式类型字典'),\n('复杂度级别', 'complexity_level', 1, 'system', NOW(), '复杂度级别字典'),\n('报表类型', 'report_type', 1, 'system', NOW(), '报表类型字典'),\n('图表类型', 'chart_type', 1, 'system', NOW(), '图表类型字典'),\n('图表库', 'chart_library', 1, 'system', NOW(), '图表库字典'),\n('布局类型', 'layout_type', 1, 'system', NOW(), '布局类型字典'),\n('数据源类型', 'datasource_type', 1, 'system', NOW(), '数据源类型字典'),\n('连接状态', 'connection_status', 1, 'system', NOW(), '连接状态字典'),\n('数据集类型', 'dataset_type', 1, 'system', NOW(), '数据集类型字典'),\n('刷新模式', 'refresh_mode', 1, 'system', NOW(), '刷新模式字典'),\n('缓存类型', 'cache_type', 1, 'system', NOW(), '缓存类型字典'),\n('压缩类型', 'compression_type', 1, 'system', NOW(), '压缩类型字典'),\n('模板类型', 'template_type', 1, 'system', NOW(), '模板类型字典'),\n('执行状态', 'execution_status', 1, 'system', NOW(), '执行状态字典');\n\n-- ======================= 系统字典数据 =======================\n\n-- 分析任务类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '业务分析', '1', 'analysis_task_type', '', 'primary', 'Y', 1, 'system', NOW(), '业务数据分析'),\n(2, '财务分析', '2', 'analysis_task_type', '', 'success', 'N', 1, 'system', NOW(), '财务数据分析'),\n(3, '客户分析', '3', 'analysis_task_type', '', 'info', 'N', 1, 'system', NOW(), '客户行为分析'),\n(4, '案件分析', '4', 'analysis_task_type', '', 'warning', 'N', 1, 'system', NOW(), '案件效率分析'),\n(5, '绩效分析', '5', 'analysis_task_type', '', 'danger', 'N', 1, 'system', NOW(), '绩效评估分析');\n\n-- 分析类别\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '统计分析', '1', 'analysis_category', '', 'primary', 'Y', 1, 'system', NOW(), '基础统计分析'),\n(2, '趋势分析', '2', 'analysis_category', '', 'success', 'N', 1, 'system', NOW(), '趋势变化分析'),\n(3, '对比分析', '3', 'analysis_category', '', 'info', 'N', 1, 'system', NOW(), '对比分析'),\n(4, '预测分析', '4', 'analysis_category', '', 'warning', 'N', 1, 'system', NOW(), '预测性分析');\n\n-- 任务状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '待执行', '1', 'analysis_task_status', '', 'secondary', 'Y', 1, 'system', NOW(), '等待执行'),\n(2, '执行中', '2', 'analysis_task_status', '', 'primary', 'N', 1, 'system', NOW(), '正在执行'),\n(3, '已完成', '3', 'analysis_task_status', '', 'success', 'N', 1, 'system', NOW(), '执行完成'),\n(4, '失败', '4', 'analysis_task_status', '', 'danger', 'N', 1, 'system', NOW(), '执行失败'),\n(5, '已暂停', '5', 'analysis_task_status', '', 'warning', 'N', 1, 'system', NOW(), '暂停执行'),\n(6, '已取消', '6', 'analysis_task_status', '', 'dark', 'N', 1, 'system', NOW(), '取消执行');\n\n-- 任务优先级\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '低', '1', 'analysis_priority', '', 'success', 'N', 1, 'system', NOW(), '低优先级'),\n(2, '中', '2', 'analysis_priority', '', 'primary', 'Y', 1, 'system', NOW(), '中等优先级'),\n(3, '高', '3', 'analysis_priority', '', 'warning', 'N', 1, 'system', NOW(), '高优先级'),\n(4, '紧急', '4', 'analysis_priority', '', 'danger', 'N', 1, 'system', NOW(), '紧急优先级');\n\n-- 调度类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '定时调度', '1', 'schedule_type', '', 'primary', 'Y', 1, 'system', NOW(), '定时执行'),\n(2, '周期调度', '2', 'schedule_type', '', 'success', 'N', 1, 'system', NOW(), '周期性执行'),\n(3, '条件触发', '3', 'schedule_type', '', 'info', 'N', 1, 'system', NOW(), '条件触发执行');\n\n-- 结果类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '统计数据', '1', 'result_type', '', 'primary', 'Y', 1, 'system', NOW(), '统计汇总数据'),\n(2, '图表数据', '2', 'result_type', '', 'success', 'N', 1, 'system', NOW(), '图表展示数据'),\n(3, '报表数据', '3', 'result_type', '', 'info', 'N', 1, 'system', NOW(), '报表格式数据'),\n(4, '原始数据', '4', 'result_type', '', 'warning', 'N', 1, 'system', NOW(), '原始明细数据');\n\n-- 结果格式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, 'JSON', '1', 'result_format', '', 'primary', 'Y', 1, 'system', NOW(), 'JSON格式'),\n(2, 'XML', '2', 'result_format', '', 'success', 'N', 1, 'system', NOW(), 'XML格式'),\n(3, 'CSV', '3', 'result_format', '', 'info', 'N', 1, 'system', NOW(), 'CSV格式'),\n(4, 'Excel', '4', 'result_format', '', 'warning', 'N', 1, 'system', NOW(), 'Excel格式');\n\n-- 指标类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '数量指标', '1', 'indicator_type', '', 'primary', 'Y', 1, 'system', NOW(), '数量统计指标'),\n(2, '质量指标', '2', 'indicator_type', '', 'success', 'N', 1, 'system', NOW(), '质量评价指标'),\n(3, '效率指标', '3', 'indicator_type', '', 'info', 'N', 1, 'system', NOW(), '效率评估指标'),\n(4, '财务指标', '4', 'indicator_type', '', 'warning', 'N', 1, 'system', NOW(), '财务分析指标'),\n(5, '风险指标', '5', 'indicator_type', '', 'danger', 'N', 1, 'system', NOW(), '风险评估指标');\n\n-- 数据类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '整数', '1', 'data_type', '', 'primary', 'Y', 1, 'system', NOW(), '整数类型'),\n(2, '小数', '2', 'data_type', '', 'success', 'N', 1, 'system', NOW(), '小数类型'),\n(3, '百分比', '3', 'data_type', '', 'info', 'N', 1, 'system', NOW(), '百分比类型'),\n(4, '金额', '4', 'data_type', '', 'warning', 'N', 1, 'system', NOW(), '金额类型'),\n(5, '文本', '5', 'data_type', '', 'secondary', 'N', 1, 'system', NOW(), '文本类型');\n\n-- 聚合类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '求和', '1', 'aggregation_type', '', 'primary', 'Y', 1, 'system', NOW(), '求和聚合'),\n(2, '平均', '2', 'aggregation_type', '', 'success', 'N', 1, 'system', NOW(), '平均值聚合'),\n(3, '最大值', '3', 'aggregation_type', '', 'info', 'N', 1, 'system', NOW(), '最大值聚合'),\n(4, '最小值', '4', 'aggregation_type', '', 'warning', 'N', 1, 'system', NOW(), '最小值聚合'),\n(5, '计数', '5', 'aggregation_type', '', 'secondary', 'N', 1, 'system', NOW(), '计数聚合');\n\n-- 时间粒度\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '天', '1', 'time_granularity', '', 'primary', 'Y', 1, 'system', NOW(), '按天统计'),\n(2, '周', '2', 'time_granularity', '', 'success', 'N', 1, 'system', NOW(), '按周统计'),\n(3, '月', '3', 'time_granularity', '', 'info', 'N', 1, 'system', NOW(), '按月统计'),\n(4, '季度', '4', 'time_granularity', '', 'warning', 'N', 1, 'system', NOW(), '按季度统计'),\n(5, '年', '5', 'time_granularity', '', 'secondary', 'N', 1, 'system', NOW(), '按年统计');\n\n-- 维度类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '时间维度', '1', 'dimension_type', '', 'primary', 'Y', 1, 'system', NOW(), '时间相关维度'),\n(2, '组织维度', '2', 'dimension_type', '', 'success', 'N', 1, 'system', NOW(), '组织结构维度'),\n(3, '业务维度', '3', 'dimension_type', '', 'info', 'N', 1, 'system', NOW(), '业务类型维度'),\n(4, '地域维度', '4', 'dimension_type', '', 'warning', 'N', 1, 'system', NOW(), '地理位置维度'),\n(5, '客户维度', '5', 'dimension_type', '', 'secondary', 'N', 1, 'system', NOW(), '客户分类维度');\n\n-- 公式类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '数学公式', '1', 'formula_type', '', 'primary', 'Y', 1, 'system', NOW(), '数学计算公式'),\n(2, 'SQL查询', '2', 'formula_type', '', 'success', 'N', 1, 'system', NOW(), 'SQL查询语句'),\n(3, '脚本函数', '3', 'formula_type', '', 'info', 'N', 1, 'system', NOW(), '脚本函数');\n\n-- 复杂度级别\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '简单', '1', 'complexity_level', '', 'success', 'Y', 1, 'system', NOW(), '简单级别'),\n(2, '中等', '2', 'complexity_level', '', 'primary', 'N', 1, 'system', NOW(), '中等级别'),\n(3, '复杂', '3', 'complexity_level', '', 'warning', 'N', 1, 'system', NOW(), '复杂级别');\n\n-- 报表类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '定期报表', '1', 'report_type', '', 'primary', 'Y', 1, 'system', NOW(), '定期生成报表'),\n(2, '专题报表', '2', 'report_type', '', 'success', 'N', 1, 'system', NOW(), '专题分析报表'),\n(3, '实时报表', '3', 'report_type', '', 'info', 'N', 1, 'system', NOW(), '实时监控报表'),\n(4, '自定义报表', '4', 'report_type', '', 'warning', 'N', 1, 'system', NOW(), '自定义报表');\n\n-- 图表类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '柱状图', '1', 'chart_type', '', 'primary', 'Y', 1, 'system', NOW(), '柱状图表'),\n(2, '折线图', '2', 'chart_type', '', 'success', 'N', 1, 'system', NOW(), '折线图表'),\n(3, '饼图', '3', 'chart_type', '', 'info', 'N', 1, 'system', NOW(), '饼图表'),\n(4, '散点图', '4', 'chart_type', '', 'warning', 'N', 1, 'system', NOW(), '散点图表'),\n(5, '热力图', '5', 'chart_type', '', 'danger', 'N', 1, 'system', NOW(), '热力图表'),\n(6, '雷达图', '6', 'chart_type', '', 'secondary', 'N', 1, 'system', NOW(), '雷达图表');\n\n-- 图表库\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, 'ECharts', '1', 'chart_library', '', 'primary', 'Y', 1, 'system', NOW(), 'ECharts图表库'),\n(2, 'D3', '2', 'chart_library', '', 'success', 'N', 1, 'system', NOW(), 'D3图表库'),\n(3, 'Highcharts', '3', 'chart_library', '', 'info', 'N', 1, 'system', NOW(), 'Highcharts图表库'),\n(4, 'Chart.js', '4', 'chart_library', '', 'warning', 'N', 1, 'system', NOW(), 'Chart.js图表库');\n\n-- 布局类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '网格布局', '1', 'layout_type', '', 'primary', 'Y', 1, 'system', NOW(), '网格式布局'),\n(2, '自由布局', '2', 'layout_type', '', 'success', 'N', 1, 'system', NOW(), '自由拖拽布局'),\n(3, '模板布局', '3', 'layout_type', '', 'info', 'N', 1, 'system', NOW(), '预定义模板布局');\n\n-- 数据源类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, 'MySQL', '1', 'datasource_type', '', 'primary', 'Y', 1, 'system', NOW(), 'MySQL数据库'),\n(2, 'PostgreSQL', '2', 'datasource_type', '', 'success', 'N', 1, 'system', NOW(), 'PostgreSQL数据库'),\n(3, 'Redis', '3', 'datasource_type', '', 'info', 'N', 1, 'system', NOW(), 'Redis缓存'),\n(4, 'Elasticsearch', '4', 'datasource_type', '', 'warning', 'N', 1, 'system', NOW(), 'Elasticsearch搜索'),\n(5, 'API', '5', 'datasource_type', '', 'danger', 'N', 1, 'system', NOW(), 'API接口'),\n(6, '文件', '6', 'datasource_type', '', 'secondary', 'N', 1, 'system', NOW(), '文件数据源');\n\n-- 连接状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(0, '未测试', '0', 'connection_status', '', 'secondary', 'Y', 1, 'system', NOW(), '未进行连接测试'),\n(1, '正常', '1', 'connection_status', '', 'success', 'N', 1, 'system', NOW(), '连接正常'),\n(2, '异常', '2', 'connection_status', '', 'danger', 'N', 1, 'system', NOW(), '连接异常');\n\n-- 数据集类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '数据表', '1', 'dataset_type', '', 'primary', 'Y', 1, 'system', NOW(), '数据库表'),\n(2, '视图', '2', 'dataset_type', '', 'success', 'N', 1, 'system', NOW(), '数据库视图'),\n(3, '查询', '3', 'dataset_type', '', 'info', 'N', 1, 'system', NOW(), 'SQL查询'),\n(4, 'API', '4', 'dataset_type', '', 'warning', 'N', 1, 'system', NOW(), 'API接口'),\n(5, '文件', '5', 'dataset_type', '', 'secondary', 'N', 1, 'system', NOW(), '文件数据');\n\n-- 刷新模式\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '实时', '1', 'refresh_mode', '', 'success', 'Y', 1, 'system', NOW(), '实时刷新'),\n(2, '定时', '2', 'refresh_mode', '', 'primary', 'N', 1, 'system', NOW(), '定时刷新'),\n(3, '手动', '3', 'refresh_mode', '', 'warning', 'N', 1, 'system', NOW(), '手动刷新');\n\n-- 缓存类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '查询结果', '1', 'cache_type', '', 'primary', 'Y', 1, 'system', NOW(), '查询结果缓存'),\n(2, '图表数据', '2', 'cache_type', '', 'success', 'N', 1, 'system', NOW(), '图表数据缓存'),\n(3, '报表数据', '3', 'cache_type', '', 'info', 'N', 1, 'system', NOW(), '报表数据缓存'),\n(4, '计算结果', '4', 'cache_type', '', 'warning', 'N', 1, 'system', NOW(), '计算结果缓存');\n\n-- 压缩类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(0, '无压缩', '0', 'compression_type', '', 'secondary', 'Y', 1, 'system', NOW(), '不压缩'),\n(1, 'GZIP', '1', 'compression_type', '', 'primary', 'N', 1, 'system', NOW(), 'GZIP压缩'),\n(2, 'LZ4', '2', 'compression_type', '', 'success', 'N', 1, 'system', NOW(), 'LZ4压缩');\n\n-- 模板类型\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '任务模板', '1', 'template_type', '', 'primary', 'Y', 1, 'system', NOW(), '分析任务模板'),\n(2, '报表模板', '2', 'template_type', '', 'success', 'N', 1, 'system', NOW(), '报表配置模板'),\n(3, '图表模板', '3', 'template_type', '', 'info', 'N', 1, 'system', NOW(), '图表配置模板'),\n(4, '仪表盘模板', '4', 'template_type', '', 'warning', 'N', 1, 'system', NOW(), '仪表盘配置模板');\n\n-- 执行状态\nINSERT INTO sys_dict_data (dict_sort, dict_label, dict_value, dict_type, css_class, list_class, is_default, status, create_by, create_time, remark) VALUES\n(1, '成功', '1', 'execution_status', '', 'success', 'Y', 1, 'system', NOW(), '执行成功'),\n(2, '失败', '2', 'execution_status', '', 'danger', 'N', 1, 'system', NOW(), '执行失败'),\n(3, '超时', '3', 'execution_status', '', 'warning', 'N', 1, 'system', NOW(), '执行超时'),\n(4, '取消', '4', 'execution_status', '', 'secondary', 'N', 1, 'system', NOW(), '执行取消');\n\n-- ======================= 分析维度数据 =======================\n\n-- 时间维度\nINSERT INTO analysis_dimension (tenant_id, dimension_code, dimension_name, dimension_type, parent_id, level, path, table_name, column_name, value_type, sort_order, create_by, create_time, status) VALUES\n(0, 'TIME_YEAR', '年', 1, 0, 1, '/TIME_YEAR', '', 'YEAR', 2, 1, 'system', NOW(), 1),\n(0, 'TIME_QUARTER', '季度', 1, 0, 1, '/TIME_QUARTER', '', 'QUARTER', 2, 2, 'system', NOW(), 1),\n(0, 'TIME_MONTH', '月', 1, 0, 1, '/TIME_MONTH', '', 'MONTH', 2, 3, 'system', NOW(), 1),\n(0, 'TIME_WEEK', '周', 1, 0, 1, '/TIME_WEEK', '', 'WEEK', 2, 4, 'system', NOW(), 1),\n(0, 'TIME_DAY', '日', 1, 0, 1, '/TIME_DAY', '', 'DAY', 2, 5, 'system', NOW(), 1);\n\n-- 组织维度\nINSERT INTO analysis_dimension (tenant_id, dimension_code, dimension_name, dimension_type, parent_id, level, path, table_name, column_name, value_type, sort_order, create_by, create_time, status) VALUES\n(0, 'ORG_DEPT', '部门', 2, 0, 1, '/ORG_DEPT', 'sys_dept', 'dept_name', 1, 1, 'system', NOW(), 1),\n(0, 'ORG_USER', '用户', 2, 0, 1, '/ORG_USER', 'sys_user', 'user_name', 1, 2, 'system', NOW(), 1),\n(0, 'ORG_ROLE', '角色', 2, 0, 1, '/ORG_ROLE', 'sys_role', 'role_name', 1, 3, 'system', NOW(), 1);\n\n-- 业务维度\nINSERT INTO analysis_dimension (tenant_id, dimension_code, dimension_name, dimension_type, parent_id, level, path, table_name, column_name, value_type, sort_order, create_by, create_time, status) VALUES\n(0, 'BUS_CASE_TYPE', '案件类型', 3, 0, 1, '/BUS_CASE_TYPE', 'case_case', 'case_type', 1, 1, 'system', NOW(), 1),\n(0, 'BUS_CASE_STATUS', '案件状态', 3, 0, 1, '/BUS_CASE_STATUS', 'case_case', 'case_status', 1, 2, 'system', NOW(), 1),\n(0, 'BUS_CLIENT_TYPE', '客户类型', 3, 0, 1, '/BUS_CLIENT_TYPE', 'client_client', 'client_type', 1, 3, 'system', NOW(), 1),\n(0, 'BUS_CONTRACT_TYPE', '合同类型', 3, 0, 1, '/BUS_CONTRACT_TYPE', 'contract_contract', 'contract_type', 1, 4, 'system', NOW(), 1);\n\n-- ======================= 分析指标数据 =======================\n\n-- 案件相关指标\nINSERT INTO analysis_indicator (tenant_id, indicator_code, indicator_name, indicator_type, data_type, unit, description, category, group_name, aggregation_type, time_granularity, sort_order, create_by, create_time, status) VALUES\n(0, 'CASE_COUNT', '案件总数', 1, 1, '件', '案件总数量统计', '案件管理', '基础指标', 5, 3, 1, 'system', NOW(), 1),\n(0, 'CASE_NEW_COUNT', '新增案件数', 1, 1, '件', '新增案件数量统计', '案件管理', '基础指标', 5, 3, 2, 'system', NOW(), 1),\n(0, 'CASE_CLOSE_COUNT', '结案数量', 1, 1, '件', '结案数量统计', '案件管理', '基础指标', 5, 3, 3, 'system', NOW(), 1),\n(0, 'CASE_SUCCESS_RATE', '胜诉率', 2, 3, '%', '案件胜诉率统计', '案件管理', '质量指标', 2, 3, 4, 'system', NOW(), 1),\n(0, 'CASE_CYCLE_AVG', '平均审理周期', 3, 2, '天', '案件平均审理周期', '案件管理', '效率指标', 2, 3, 5, 'system', NOW(), 1);\n\n-- 客户相关指标\nINSERT INTO analysis_indicator (tenant_id, indicator_code, indicator_name, indicator_type, data_type, unit, description, category, group_name, aggregation_type, time_granularity, sort_order, create_by, create_time, status) VALUES\n(0, 'CLIENT_COUNT', '客户总数', 1, 1, '个', '客户总数量统计', '客户管理', '基础指标', 5, 3, 1, 'system', NOW(), 1),\n(0, 'CLIENT_NEW_COUNT', '新增客户数', 1, 1, '个', '新增客户数量统计', '客户管理', '基础指标', 5, 3, 2, 'system', NOW(), 1),\n(0, 'CLIENT_ACTIVE_COUNT', '活跃客户数', 1, 1, '个', '活跃客户数量统计', '客户管理', '基础指标', 5, 3, 3, 'system', NOW(), 1),\n(0, 'CLIENT_SATISFACTION', '客户满意度', 2, 3, '%', '客户满意度评分', '客户管理', '质量指标', 2, 3, 4, 'system', NOW(), 1),\n(0, 'CLIENT_VALUE_AVG', '客户平均价值', 4, 4, '元', '客户平均价值统计', '客户管理', '财务指标', 2, 3, 5, 'system', NOW(), 1);\n\n-- 财务相关指标\nINSERT INTO analysis_indicator (tenant_id, indicator_code, indicator_name, indicator_type, data_type, unit, description, category, group_name, aggregation_type, time_granularity, sort_order, create_by, create_time, status) VALUES\n(0, 'REVENUE_TOTAL', '总收入', 4, 4, '元', '总收入统计', '财务管理', '财务指标', 1, 3, 1, 'system', NOW(), 1),\n(0, 'REVENUE_GROWTH', '收入增长率', 4, 3, '%', '收入增长率统计', '财务管理', '财务指标', 2, 3, 2, 'system', NOW(), 1),\n(0, 'COST_TOTAL', '总成本', 4, 4, '元', '总成本统计', '财务管理', '财务指标', 1, 3, 3, 'system', NOW(), 1),\n(0, 'PROFIT_TOTAL', '总利润', 4, 4, '元', '总利润统计', '财务管理', '财务指标', 1, 3, 4, 'system', NOW(), 1),\n(0, 'PROFIT_MARGIN', '利润率', 4, 3, '%', '利润率统计', '财务管理', '财务指标', 2, 3, 5, 'system', NOW(), 1);\n\n-- ======================= 分析公式数据 =======================\n\n-- 基础计算公式\nINSERT INTO analysis_formula (tenant_id, formula_name, formula_code, formula_type, formula_expression, description, is_builtin, category, complexity_level, create_by, create_time, status) VALUES\n(0, '胜诉率计算', 'WIN_RATE', 1, '(胜诉案件数 / 总案件数) * 100', '计算案件胜诉率', 1, '业务分析', 1, 'system', NOW(), 1),\n(0, '收入增长率', 'REVENUE_GROWTH', 1, '((当期收入 - 上期收入) / 上期收入) * 100', '计算收入增长率', 1, '财务分析', 1, 'system', NOW(), 1),\n(0, '利润率计算', 'PROFIT_MARGIN', 1, '(利润 / 收入) * 100', '计算利润率', 1, '财务分析', 1, 'system', NOW(), 1),\n(0, '客户满意度', 'CLIENT_SATISFACTION', 1, 'SUM(满意度评分) / COUNT(客户数)', '计算客户满意度平均分', 1, '客户分析', 1, 'system', NOW(), 1),\n(0, '案件平均周期', 'CASE_AVG_CYCLE', 1, 'AVG(DATEDIFF(结案日期, 立案日期))', '计算案件平均审理周期', 1, '业务分析', 2, 'system', NOW(), 1);\n\n-- ======================= 分析模板数据 =======================\n\n-- 业务分析模板\nINSERT INTO analysis_template (tenant_id, template_name, template_code, template_type, category, description, is_builtin, is_public, author_id, author_name, sort_order, create_by, create_time, status) VALUES\n(0, '案件统计分析模板', 'CASE_ANALYSIS_TEMPLATE', 1, '业务分析', '案件数量、类型、状态等统计分析模板', 1, 1, 1, 'system', 1, 'system', NOW(), 1),\n(0, '客户行为分析模板', 'CLIENT_BEHAVIOR_TEMPLATE', 1, '客户分析', '客户行为模式、价值分析模板', 1, 1, 1, 'system', 2, 'system', NOW(), 1),\n(0, '财务收入分析模板', 'FINANCE_REVENUE_TEMPLATE', 1, '财务分析', '收入构成、趋势分析模板', 1, 1, 1, 'system', 3, 'system', NOW(), 1),\n(0, '绩效评估分析模板', 'PERFORMANCE_TEMPLATE', 1, '绩效分析', '员工及团队绩效评估模板', 1, 1, 1, 'system', 4, 'system', NOW(), 1);\n\n-- 报表模板\nINSERT INTO analysis_template (tenant_id, template_name, template_code, template_type, category, description, is_builtin, is_public, author_id, author_name, sort_order, create_by, create_time, status) VALUES\n(0, '综合业务报表模板', 'BUSINESS_REPORT_TEMPLATE', 2, '业务报表', '综合业务数据报表模板', 1, 1, 1, 'system', 1, 'system', NOW(), 1),\n(0, '财务月报模板', 'FINANCE_MONTHLY_TEMPLATE', 2, '财务报表', '财务月度报表模板', 1, 1, 1, 'system', 2, 'system', NOW(), 1),\n(0, '客户分析报表模板', 'CLIENT_REPORT_TEMPLATE', 2, '客户报表', '客户分析专题报表模板', 1, 1, 1, 'system', 3, 'system', NOW(), 1);\n\n-- 图表模板\nINSERT INTO analysis_template (tenant_id, template_name, template_code, template_type, category, description, is_builtin, is_public, author_id, author_name, sort_order, create_by, create_time, status) VALUES\n(0, '趋势分析图表模板', 'TREND_CHART_TEMPLATE', 3, '趋势图表', '时间序列趋势分析图表模板', 1, 1, 1, 'system', 1, 'system', NOW(), 1),\n(0, '对比分析图表模板', 'COMPARE_CHART_TEMPLATE', 3, '对比图表', '多维度对比分析图表模板', 1, 1, 1, 'system', 2, 'system', NOW(), 1),\n(0, '分布分析图表模板', 'DISTRIBUTION_CHART_TEMPLATE', 3, '分布图表', '数据分布情况图表模板', 1, 1, 1, 'system', 3, 'system', NOW(), 1);\n\n-- 仪表盘模板\nINSERT INTO analysis_template (tenant_id, template_name, template_code, template_type, category, description, is_builtin, is_public, author_id, author_name, sort_order, create_by, create_time, status) VALUES\n(0, '执行监控仪表盘', 'EXECUTIVE_DASHBOARD_TEMPLATE', 4, '管理仪表盘', '管理层综合监控仪表盘模板', 1, 1, 1, 'system', 1, 'system', NOW(), 1),\n(0, '业务运营仪表盘', 'OPERATION_DASHBOARD_TEMPLATE', 4, '运营仪表盘', '日常业务运营监控仪表盘模板', 1, 1, 1, 'system', 2, 'system', NOW(), 1),\n(0, '财务监控仪表盘', 'FINANCE_DASHBOARD_TEMPLATE', 4, '财务仪表盘', '财务数据监控仪表盘模板', 1, 1, 1, 'system', 3, 'system', NOW(), 1);\n\n-- 初始化完成提示\nSELECT '数据分析模块基础数据初始化完成' AS result;\nSELECT CONCAT('已创建字典类型：', COUNT(*), '个') AS dict_type_count FROM sys_dict_type WHERE dict_type LIKE 'analysis_%' OR dict_type LIKE '%_type' OR dict_type LIKE '%_mode' OR dict_type LIKE '%_status';\nSELECT CONCAT('已创建字典数据：', COUNT(*), '个') AS dict_data_count FROM sys_dict_data WHERE dict_type LIKE 'analysis_%' OR dict_type LIKE '%_type' OR dict_type LIKE '%_mode' OR dict_type LIKE '%_status';\nSELECT CONCAT('已创建分析维度：', COUNT(*), '个') AS dimension_count FROM analysis_dimension WHERE tenant_id = 0;\nSELECT CONCAT('已创建分析指标：', COUNT(*), '个') AS indicator_count FROM analysis_indicator WHERE tenant_id = 0;\nSELECT CONCAT('已创建分析公式：', COUNT(*), '个') AS formula_count FROM analysis_formula WHERE tenant_id = 0;\nSELECT CONCAT('已创建分析模板：', COUNT(*), '个') AS template_count FROM analysis_template WHERE tenant_id = 0; ",
      "size": 23645
    },
    {
      "path": "law-firm-core\\core-workflow\\src\\main\\resources\\META-INF\\db\\migration\\V0075__init_workflow_tables.sql",
      "filename": "V0075__init_workflow_tables.sql",
      "version": 75,
      "module": "law-firm-core",
      "content": "-- Core-Workflow模块表结构初始化\n-- 版本: V0075\n-- 模块: 工作流模块 (V0070-V0079)\n-- 创建时间: 2023-07-01\n-- 说明: 工作流功能模块的完整表结构定义，基于workflow-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 工作流模块核心表 =======================\n\n-- workflow_process_template表（流程模板表）\nDROP TABLE IF EXISTS workflow_process_template;\nCREATE TABLE workflow_process_template (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程模板ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    template_key VARCHAR(100) NOT NULL COMMENT '流程模板标识',\n    template_name VARCHAR(100) NOT NULL COMMENT '流程模板名称',\n    template_category VARCHAR(50) COMMENT '流程模板分类',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    template_version VARCHAR(20) COMMENT '模板版本号',\n    process_definition_id VARCHAR(100) COMMENT '流程定义ID',\n    deployment_id VARCHAR(100) COMMENT '流程部署ID',\n    description VARCHAR(255) COMMENT '流程模板描述',\n    suspended TINYINT DEFAULT 0 COMMENT '是否挂起(0-否,1-是)',\n    creator_name VARCHAR(100) COMMENT '创建人名称',\n    updater_name VARCHAR(100) COMMENT '更新人名称',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_template_key_version (template_key, template_version),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_business_type (business_type),\n    INDEX idx_template_category (template_category),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程模板表';\n\n-- workflow_process表（流程实例表）\nDROP TABLE IF EXISTS workflow_process;\nCREATE TABLE workflow_process (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程实例ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    process_no VARCHAR(50) NOT NULL COMMENT '流程编号',\n    process_name VARCHAR(100) NOT NULL COMMENT '流程名称',\n    process_type TINYINT NOT NULL COMMENT '流程类型',\n    status TINYINT DEFAULT 0 COMMENT '流程状态',\n    description VARCHAR(255) COMMENT '流程描述',\n    business_id BIGINT COMMENT '业务ID',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    initiator_id BIGINT COMMENT '发起人ID',\n    initiator_name VARCHAR(100) COMMENT '发起人名称',\n    start_time DATETIME COMMENT '发起时间',\n    end_time DATETIME COMMENT '结束时间',\n    current_handler_id BIGINT COMMENT '当前处理人ID',\n    current_handler_name VARCHAR(100) COMMENT '当前处理人名称',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    allow_revoke TINYINT DEFAULT 1 COMMENT '是否允许撤回(0-不允许,1-允许)',\n    allow_transfer TINYINT DEFAULT 1 COMMENT '是否允许转办(0-不允许,1-允许)',\n    process_config TEXT COMMENT '流程配置(JSON格式)',\n    process_instance_id VARCHAR(100) COMMENT 'Flowable流程实例ID',\n    process_definition_id VARCHAR(100) COMMENT '流程定义ID',\n    process_definition_key VARCHAR(100) COMMENT '流程定义Key',\n    process_definition_name VARCHAR(100) COMMENT '流程定义名称',\n    process_definition_version INT COMMENT '流程定义版本',\n    deployment_id VARCHAR(100) COMMENT '部署ID',\n    business_key VARCHAR(100) COMMENT '业务键',\n    category VARCHAR(50) COMMENT '流程分类',\n    tags VARCHAR(255) COMMENT '流程标签',\n    template_id BIGINT COMMENT '流程模板ID',\n    template_version VARCHAR(20) COMMENT '流程模板版本',\n    variables TEXT COMMENT '流程变量(JSON格式)',\n    form_data TEXT COMMENT '流程表单(JSON格式)',\n    attachment_ids VARCHAR(255) COMMENT '流程附件IDs',\n    notes TEXT COMMENT '流程备注',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_process_no (process_no),\n    UNIQUE KEY uk_process_instance_id (process_instance_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_business_id_type (business_id, business_type),\n    INDEX idx_initiator_id (initiator_id),\n    INDEX idx_current_handler_id (current_handler_id),\n    INDEX idx_status (status),\n    INDEX idx_start_time (start_time),\n    INDEX idx_template_id (template_id),\n    \n    CONSTRAINT fk_workflow_process_template FOREIGN KEY (template_id) REFERENCES workflow_process_template(id) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程实例表';\n\n-- workflow_task表（流程任务表）\nDROP TABLE IF EXISTS workflow_task;\nCREATE TABLE workflow_task (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程任务ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    task_no VARCHAR(50) NOT NULL COMMENT '任务编号',\n    task_name VARCHAR(100) NOT NULL COMMENT '任务名称',\n    task_type TINYINT NOT NULL COMMENT '任务类型',\n    process_id BIGINT NOT NULL COMMENT '流程ID',\n    process_no VARCHAR(50) NOT NULL COMMENT '流程实例编号',\n    description VARCHAR(255) COMMENT '任务描述',\n    handler_id BIGINT COMMENT '处理人ID',\n    handler_name VARCHAR(100) COMMENT '处理人名称',\n    handler_type TINYINT DEFAULT 1 COMMENT '处理人类型(1-用户,2-角色,3-部门)',\n    start_time DATETIME COMMENT '开始时间',\n    end_time DATETIME COMMENT '结束时间',\n    due_time DATETIME COMMENT '截止时间',\n    status TINYINT DEFAULT 0 COMMENT '任务状态(0-未开始,1-进行中,2-已完成,3-已取消)',\n    result VARCHAR(100) COMMENT '任务结果',\n    comment TEXT COMMENT '任务评论',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    prev_task_ids VARCHAR(255) COMMENT '前置任务IDs',\n    next_task_ids VARCHAR(255) COMMENT '后续任务IDs',\n    task_config TEXT COMMENT '任务配置(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_task_no (task_no),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_process_id (process_id),\n    INDEX idx_process_no (process_no),\n    INDEX idx_handler_id (handler_id),\n    INDEX idx_status (status),\n    INDEX idx_start_time (start_time),\n    INDEX idx_due_time (due_time),\n    \n    CONSTRAINT fk_workflow_task_process FOREIGN KEY (process_id) REFERENCES workflow_process(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程任务表';\n\n-- workflow_permission表（流程权限表）\nDROP TABLE IF EXISTS workflow_permission;\nCREATE TABLE workflow_permission (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程权限ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    process_definition_key VARCHAR(100) NOT NULL COMMENT '流程定义ID或流程定义键',\n    permission_type TINYINT NOT NULL COMMENT '权限类型(1-流程定义权限,2-流程实例权限)',\n    operation_type TINYINT NOT NULL COMMENT '操作类型(1-启动,2-查看,3-处理,4-取消,5-挂起,6-激活)',\n    target_type TINYINT NOT NULL COMMENT '权限目标类型(1-角色,2-用户,3-部门)',\n    target_id BIGINT NOT NULL COMMENT '权限目标ID(角色ID、用户ID或部门ID)',\n    permission_policy TINYINT DEFAULT 1 COMMENT '权限策略(1-允许,2-拒绝)',\n    sort_order INT DEFAULT 0 COMMENT '排序号',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_process_target (process_definition_key, permission_type, operation_type, target_type, target_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_target_id_type (target_id, target_type),\n    INDEX idx_process_definition_key (process_definition_key)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程权限表';\n\n-- workflow_history表（流程历史表）\nDROP TABLE IF EXISTS workflow_history;\nCREATE TABLE workflow_history (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程历史ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    process_id BIGINT NOT NULL COMMENT '流程ID',\n    process_no VARCHAR(50) NOT NULL COMMENT '流程编号',\n    task_id BIGINT COMMENT '任务ID',\n    task_name VARCHAR(100) COMMENT '任务名称',\n    handler_id BIGINT COMMENT '处理人ID',\n    handler_name VARCHAR(100) COMMENT '处理人名称',\n    action_type TINYINT NOT NULL COMMENT '操作类型(1-启动,2-处理,3-转办,4-撤回,5-取消)',\n    action_time DATETIME NOT NULL COMMENT '操作时间',\n    action_result VARCHAR(100) COMMENT '操作结果',\n    comment TEXT COMMENT '操作意见',\n    duration BIGINT COMMENT '处理时长(秒)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_process_id (process_id),\n    INDEX idx_process_no (process_no),\n    INDEX idx_task_id (task_id),\n    INDEX idx_handler_id (handler_id),\n    INDEX idx_action_time (action_time),\n    \n    CONSTRAINT fk_workflow_history_process FOREIGN KEY (process_id) REFERENCES workflow_process(id) ON DELETE CASCADE,\n    CONSTRAINT fk_workflow_history_task FOREIGN KEY (task_id) REFERENCES workflow_task(id) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程历史表';\n\n-- workflow_form表（流程表单表）\nDROP TABLE IF EXISTS workflow_form;\nCREATE TABLE workflow_form (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '流程表单ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    form_key VARCHAR(100) NOT NULL COMMENT '表单标识',\n    form_name VARCHAR(100) NOT NULL COMMENT '表单名称',\n    form_type TINYINT DEFAULT 1 COMMENT '表单类型(1-启动表单,2-任务表单)',\n    process_definition_key VARCHAR(100) COMMENT '流程定义Key',\n    task_definition_key VARCHAR(100) COMMENT '任务定义Key',\n    form_config TEXT COMMENT '表单配置(JSON格式)',\n    form_fields TEXT COMMENT '表单字段定义(JSON格式)',\n    validation_rules TEXT COMMENT '验证规则(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_form_key (form_key),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_process_definition_key (process_definition_key),\n    INDEX idx_task_definition_key (task_definition_key),\n    INDEX idx_form_type (form_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='流程表单表';\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 11563
    },
    {
      "path": "law-firm-core\\core-storage\\src\\main\\resources\\META-INF\\db\\migration\\V0055__init_storage_tables.sql",
      "filename": "V0055__init_storage_tables.sql",
      "version": 55,
      "module": "law-firm-core",
      "content": "-- Core-Storage模块表结构初始化\n-- 版本: V0055\n-- 模块: 存储模块 (V0055-V0059)\n-- 创建时间: 2023-07-01\n-- 说明: 存储功能模块的完整表结构定义，基于storage-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 存储模块核心表 =======================\n\n-- storage_bucket表（存储桶表）\nDROP TABLE IF EXISTS storage_bucket;\nCREATE TABLE storage_bucket (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '存储桶ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    bucket_name VARCHAR(100) NOT NULL COMMENT '桶名称',\n    bucket_type VARCHAR(20) NOT NULL COMMENT '桶类型',\n    domain VARCHAR(255) COMMENT '访问域名',\n    access_key VARCHAR(100) COMMENT '访问密钥',\n    secret_key VARCHAR(255) COMMENT '密钥密文',\n    config TEXT COMMENT '桶配置JSON',\n    max_size BIGINT COMMENT '最大空间',\n    used_size BIGINT DEFAULT 0 COMMENT '已用空间',\n    file_count BIGINT DEFAULT 0 COMMENT '文件数量',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_bucket_name (bucket_name),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_bucket_type (bucket_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='存储桶表';\n\n-- storage_file表（存储文件表）\nDROP TABLE IF EXISTS storage_file;\nCREATE TABLE storage_file (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '存储文件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    file_name VARCHAR(255) NOT NULL COMMENT '文件名',\n    file_type VARCHAR(20) COMMENT '文件类型',\n    extension VARCHAR(20) COMMENT '文件扩展名',\n    md5 VARCHAR(32) COMMENT '文件MD5',\n    bucket_id BIGINT NOT NULL COMMENT '存储桶ID',\n    storage_path VARCHAR(255) COMMENT '存储路径',\n    storage_size BIGINT DEFAULT 0 COMMENT '存储大小(字节)',\n    uuid VARCHAR(36) NOT NULL COMMENT 'UUID标识符',\n    upload_time BIGINT COMMENT '上传时间',\n    content_type VARCHAR(100) COMMENT '内容类型',\n    metadata TEXT COMMENT '元数据信息(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_uuid (uuid),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_bucket_id (bucket_id),\n    INDEX idx_md5 (md5),\n    INDEX idx_file_type (file_type),\n    \n    CONSTRAINT fk_storage_file_bucket FOREIGN KEY (bucket_id) REFERENCES storage_bucket(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='存储文件表';\n\n-- storage_file_info表（文件详细信息表）\nDROP TABLE IF EXISTS storage_file_info;\nCREATE TABLE storage_file_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文件详细信息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    file_id BIGINT NOT NULL COMMENT '文件ID',\n    description TEXT COMMENT '文件描述',\n    tags VARCHAR(255) COMMENT '标签(逗号分隔)',\n    metadata TEXT COMMENT '文件元数据(JSON格式)',\n    access_count BIGINT DEFAULT 0 COMMENT '访问次数',\n    download_count BIGINT DEFAULT 0 COMMENT '下载次数',\n    last_access_time BIGINT COMMENT '最后访问时间',\n    last_download_time BIGINT COMMENT '最后下载时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_file_id (file_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_access_count (access_count),\n    INDEX idx_download_count (download_count),\n    \n    CONSTRAINT fk_storage_file_info_file FOREIGN KEY (file_id) REFERENCES storage_file(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文件详细信息表';\n\n-- storage_chunk_info表（文件分片信息表）\nDROP TABLE IF EXISTS storage_chunk_info;\nCREATE TABLE storage_chunk_info (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文件分片信息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    file_id VARCHAR(100) COMMENT '文件唯一标识',\n    filename VARCHAR(255) COMMENT '文件名',\n    chunk_index INT NOT NULL COMMENT '分片索引，从0开始',\n    total_chunks INT NOT NULL COMMENT '总分片数',\n    chunk_size BIGINT NOT NULL COMMENT '分片大小(字节)',\n    chunk_path VARCHAR(255) COMMENT '分片文件存储路径',\n    md5 VARCHAR(32) COMMENT '分片MD5校验码',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_file_chunk (file_id, chunk_index),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_filename (filename),\n    INDEX idx_file_id (file_id)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文件分片信息表';\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 5805
    },
    {
      "path": "law-firm-core\\core-search\\src\\main\\resources\\META-INF\\db\\migration\\V0060__init_search_tables.sql",
      "filename": "V0060__init_search_tables.sql",
      "version": 60,
      "module": "law-firm-core",
      "content": "-- Core-Search模块表结构初始化\n-- 版本: V0060\n-- 模块: 搜索模块 (V0060-V0064)\n-- 创建时间: 2023-07-01\n-- 说明: 搜索功能模块的完整表结构定义，基于search-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 搜索模块核心表 =======================\n\n-- search_index表（搜索索引表）\nDROP TABLE IF EXISTS search_index;\nCREATE TABLE search_index (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '搜索索引ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    index_name VARCHAR(100) NOT NULL COMMENT '索引名称',\n    index_type VARCHAR(20) NOT NULL COMMENT '索引类型',\n    number_of_shards INT DEFAULT 1 COMMENT '分片数',\n    number_of_replicas INT DEFAULT 1 COMMENT '副本数',\n    refresh_interval INT DEFAULT 1 COMMENT '刷新间隔',\n    alias VARCHAR(100) COMMENT '索引别名',\n    description VARCHAR(255) COMMENT '索引描述',\n    enabled TINYINT DEFAULT 1 COMMENT '是否启用(0-否,1-是)',\n    settings TEXT COMMENT '索引设置(JSON格式)',\n    mappings TEXT COMMENT '索引映射(JSON格式)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_index_name (index_name),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_index_type (index_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='搜索索引表';\n\n-- search_field表（搜索字段表）\nDROP TABLE IF EXISTS search_field;\nCREATE TABLE search_field (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '搜索字段ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    index_id BIGINT NOT NULL COMMENT '索引ID',\n    field_name VARCHAR(100) NOT NULL COMMENT '字段名称',\n    field_type VARCHAR(20) NOT NULL COMMENT '字段类型',\n    analyzer VARCHAR(50) COMMENT '分析器',\n    search_analyzer VARCHAR(50) COMMENT '搜索分析器',\n    boost FLOAT DEFAULT 1.0 COMMENT '权重',\n    index_option VARCHAR(20) DEFAULT 'docs' COMMENT '索引选项',\n    enable_term_vectors TINYINT DEFAULT 0 COMMENT '是否启用词向量(0-否,1-是)',\n    ignore_above INT DEFAULT 256 COMMENT '忽略超过长度的字符',\n    norms TINYINT DEFAULT 1 COMMENT '是否启用norms(0-否,1-是)',\n    store TINYINT DEFAULT 0 COMMENT '是否存储(0-否,1-是)',\n    doc_values TINYINT DEFAULT 1 COMMENT '是否使用doc_values(0-否,1-是)',\n    null_value VARCHAR(50) COMMENT '空值',\n    copy_to VARCHAR(255) COMMENT '复制到字段(逗号分隔)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_index_field (index_id, field_name),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_index_id (index_id),\n    INDEX idx_field_type (field_type),\n    \n    CONSTRAINT fk_search_field_index FOREIGN KEY (index_id) REFERENCES search_index(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='搜索字段表';\n\n-- search_document表（搜索文档表）\nDROP TABLE IF EXISTS search_document;\nCREATE TABLE search_document (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '搜索文档ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    index_id BIGINT NOT NULL COMMENT '索引ID',\n    doc_id VARCHAR(100) NOT NULL COMMENT '文档ID',\n    biz_id VARCHAR(100) COMMENT '业务ID',\n    biz_type VARCHAR(50) COMMENT '业务类型',\n    content TEXT COMMENT '内容',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-待索引,1-索引成功,2-索引失败)',\n    error_msg TEXT COMMENT '错误信息',\n    retry_count INT DEFAULT 0 COMMENT '重试次数',\n    last_retry_time BIGINT COMMENT '最后重试时间',\n    index_time BIGINT COMMENT '索引时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_index_doc (index_id, doc_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_index_id (index_id),\n    INDEX idx_status (status),\n    INDEX idx_biz_id (biz_id),\n    INDEX idx_biz_type (biz_type),\n    \n    CONSTRAINT fk_search_document_index FOREIGN KEY (index_id) REFERENCES search_index(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='搜索文档表';\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 5017
    },
    {
      "path": "law-firm-core\\core-message\\src\\main\\resources\\META-INF\\db\\migration\\V0070__init_message_tables.sql",
      "filename": "V0070__init_message_tables.sql",
      "version": 70,
      "module": "law-firm-core",
      "content": "-- Core-Message模块表结构初始化\n-- 版本: V0070\n-- 模块: 消息模块 (V0070-V0074)\n-- 创建时间: 2023-07-01\n-- 说明: 消息功能模块的完整表结构定义，基于message-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 消息模块核心表 =======================\n\n-- message_base表（基础消息表）\nDROP TABLE IF EXISTS message_base;\nCREATE TABLE message_base (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '基础消息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_no VARCHAR(50) NOT NULL COMMENT '消息编号',\n    title VARCHAR(200) COMMENT '消息标题',\n    content TEXT COMMENT '消息内容',\n    message_type VARCHAR(20) NOT NULL COMMENT '消息类型',\n    status VARCHAR(20) NOT NULL COMMENT '消息状态',\n    sender_id BIGINT COMMENT '发送者ID',\n    sender_name VARCHAR(100) COMMENT '发送者名称',\n    sender_type TINYINT DEFAULT 1 COMMENT '发送者类型(1-系统,2-用户)',\n    receiver_id BIGINT COMMENT '接收者ID',\n    receiver_name VARCHAR(100) COMMENT '接收者名称',\n    receiver_type TINYINT DEFAULT 1 COMMENT '接收者类型(1-用户,2-角色,3-部门,4-全部)',\n    send_time DATETIME COMMENT '发送时间',\n    read_time DATETIME COMMENT '阅读时间',\n    process_time DATETIME COMMENT '处理时间',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    need_confirm TINYINT DEFAULT 0 COMMENT '是否需要确认(0-否,1-是)',\n    confirm_time DATETIME COMMENT '确认时间',\n    message_config TEXT COMMENT '消息配置(JSON格式)',\n    business_id BIGINT COMMENT '关联业务ID',\n    business_type VARCHAR(50) COMMENT '关联业务类型',\n    contains_sensitive_data TINYINT DEFAULT 0 COMMENT '是否包含敏感数据(0-否,1-是)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_message_no (message_no),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_sender_id (sender_id),\n    INDEX idx_receiver_id (receiver_id),\n    INDEX idx_send_time (send_time),\n    INDEX idx_status (status),\n    INDEX idx_message_type (message_type),\n    INDEX idx_business_id (business_id),\n    INDEX idx_business_type (business_type)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='基础消息表';\n\n-- message_system表（系统消息表）\nDROP TABLE IF EXISTS message_system;\nCREATE TABLE message_system (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '系统消息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_id BIGINT NOT NULL COMMENT '关联消息ID',\n    level TINYINT DEFAULT 1 COMMENT '消息级别(1-提示,2-警告,3-错误)',\n    source VARCHAR(100) COMMENT '消息来源',\n    module VARCHAR(50) COMMENT '消息模块',\n    is_broadcast TINYINT DEFAULT 0 COMMENT '是否广播(0-否,1-是)',\n    is_persistent TINYINT DEFAULT 1 COMMENT '是否持久化(0-否,1-是)',\n    category VARCHAR(50) COMMENT '消息分类',\n    tags VARCHAR(255) COMMENT '消息标签',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_message_id (message_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_level (level),\n    INDEX idx_module (module),\n    INDEX idx_category (category),\n    \n    CONSTRAINT fk_message_system_base FOREIGN KEY (message_id) REFERENCES message_base(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统消息表';\n\n-- message_receiver表（消息接收者表）\nDROP TABLE IF EXISTS message_receiver;\nCREATE TABLE message_receiver (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '消息接收者ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_id BIGINT NOT NULL COMMENT '关联消息ID',\n    receiver_id BIGINT NOT NULL COMMENT '接收者ID',\n    receiver_type TINYINT DEFAULT 1 COMMENT '接收者类型(1-用户,2-角色,3-部门,4-全部)',\n    read_status TINYINT DEFAULT 0 COMMENT '阅读状态(0-未读,1-已读)',\n    read_time DATETIME COMMENT '阅读时间',\n    confirm_status TINYINT DEFAULT 0 COMMENT '确认状态(0-未确认,1-已确认)',\n    confirm_time DATETIME COMMENT '确认时间',\n    process_status TINYINT DEFAULT 0 COMMENT '处理状态(0-未处理,1-已处理)',\n    process_time DATETIME COMMENT '处理时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    \n    UNIQUE KEY uk_message_receiver (message_id, receiver_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_receiver_id (receiver_id),\n    INDEX idx_read_status (read_status),\n    INDEX idx_process_status (process_status),\n    \n    CONSTRAINT fk_message_receiver_base FOREIGN KEY (message_id) REFERENCES message_base(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='消息接收者表';\n\n-- message_case表（案件消息表）\nDROP TABLE IF EXISTS message_case;\nCREATE TABLE message_case (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '案件消息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_id BIGINT NOT NULL COMMENT '关联消息ID',\n    case_id BIGINT NOT NULL COMMENT '案件ID',\n    case_code VARCHAR(50) COMMENT '案件编号',\n    case_title VARCHAR(255) COMMENT '案件标题',\n    milestone VARCHAR(50) COMMENT '案件里程碑',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    due_date DATETIME COMMENT '截止日期',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_message_id (message_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_case_id (case_id),\n    INDEX idx_case_code (case_code),\n    INDEX idx_due_date (due_date),\n    \n    CONSTRAINT fk_message_case_base FOREIGN KEY (message_id) REFERENCES message_base(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='案件消息表';\n\n-- message_contract表（合同消息表）\nDROP TABLE IF EXISTS message_contract;\nCREATE TABLE message_contract (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '合同消息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_id BIGINT NOT NULL COMMENT '关联消息ID',\n    contract_id BIGINT NOT NULL COMMENT '合同ID',\n    contract_code VARCHAR(50) COMMENT '合同编号',\n    contract_title VARCHAR(255) COMMENT '合同标题',\n    contract_stage VARCHAR(50) COMMENT '合同阶段',\n    party_name VARCHAR(100) COMMENT '相对方名称',\n    amount DECIMAL(20,2) COMMENT '合同金额',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    due_date DATETIME COMMENT '截止日期',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_message_id (message_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_contract_id (contract_id),\n    INDEX idx_contract_code (contract_code),\n    INDEX idx_due_date (due_date),\n    \n    CONSTRAINT fk_message_contract_base FOREIGN KEY (message_id) REFERENCES message_base(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='合同消息表';\n\n-- message_notification表（通知表）\nDROP TABLE IF EXISTS message_notification;\nCREATE TABLE message_notification (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '通知ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    notify_id VARCHAR(36) NOT NULL COMMENT '通知ID',\n    user_id BIGINT NOT NULL COMMENT '用户ID',\n    title VARCHAR(200) COMMENT '通知标题',\n    content TEXT COMMENT '通知内容',\n    notify_type VARCHAR(20) NOT NULL COMMENT '通知类型',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    business_id BIGINT COMMENT '业务ID',\n    is_read TINYINT DEFAULT 0 COMMENT '是否已读(0-未读,1-已读)',\n    read_time DATETIME COMMENT '阅读时间',\n    priority TINYINT DEFAULT 2 COMMENT '优先级(1-低,2-中,3-高)',\n    icon VARCHAR(100) COMMENT '图标',\n    link VARCHAR(255) COMMENT '链接',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    \n    UNIQUE KEY uk_notify_id (notify_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_is_read (is_read),\n    INDEX idx_business_id (business_id),\n    INDEX idx_business_type (business_type),\n    INDEX idx_create_time (create_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='通知表';\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 9292
    },
    {
      "path": "law-firm-core\\core-audit\\src\\main\\resources\\META-INF\\db\\migration\\V0050__init_audit_tables.sql",
      "filename": "V0050__init_audit_tables.sql",
      "version": 50,
      "module": "law-firm-core",
      "content": "-- Core-Audit模块表结构初始化\n-- 版本: V0050\n-- 模块: 审计模块 (V0050-V0059)\n-- 创建时间: 2023-07-01\n-- 说明: 审计功能模块的完整表结构定义，基于log-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 审计模块核心表 =======================\n\n-- audit_log表（审计日志表）\nDROP TABLE IF EXISTS audit_log;\nCREATE TABLE audit_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审计日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(100) COMMENT '操作人名称',\n    operator_ip VARCHAR(45) COMMENT '操作人IP(支持IPv6)',\n    operate_type VARCHAR(20) COMMENT '操作类型',\n    business_type VARCHAR(20) COMMENT '业务类型',\n    module VARCHAR(50) COMMENT '操作模块',\n    description VARCHAR(255) COMMENT '操作描述',\n    status TINYINT DEFAULT 0 COMMENT '操作状态(0-正常,1-异常)',\n    error_msg TEXT COMMENT '错误消息',\n    operation_time DATETIME COMMENT '操作时间',\n    before_data TEXT COMMENT '操作前数据',\n    after_data TEXT COMMENT '操作后数据',\n    changed_fields TEXT COMMENT '变更项',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_operation_time (operation_time),\n    INDEX idx_module (module),\n    INDEX idx_operate_type (operate_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='审计日志表';\n\n-- audit_record表（审计记录表）\nDROP TABLE IF EXISTS audit_record;\nCREATE TABLE audit_record (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '审计记录ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    audit_log_id BIGINT NOT NULL COMMENT '审计日志ID',\n    auditor_id BIGINT NOT NULL COMMENT '审计人ID',\n    auditor_name VARCHAR(100) COMMENT '审计人名称',\n    audit_action VARCHAR(50) NOT NULL COMMENT '审计动作(如：提交、审核、驳回等)',\n    audit_result TINYINT DEFAULT 0 COMMENT '审计结果(0-通过,1-不通过)',\n    audit_opinion TEXT COMMENT '审计意见',\n    audit_time DATETIME NOT NULL COMMENT '审计时间',\n    audit_node VARCHAR(50) COMMENT '审计节点',\n    next_node VARCHAR(50) COMMENT '下一个审计节点',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_audit_log_id (audit_log_id),\n    INDEX idx_auditor_id (auditor_id),\n    INDEX idx_audit_time (audit_time),\n    INDEX idx_audit_result (audit_result),\n    \n    CONSTRAINT fk_audit_record_log FOREIGN KEY (audit_log_id) REFERENCES audit_log(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='审计记录表';\n\n-- sys_login_log表（登录日志表）\nDROP TABLE IF EXISTS sys_login_log;\nCREATE TABLE sys_login_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '登录日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(100) COMMENT '操作人名称',\n    operate_type VARCHAR(20) COMMENT '操作类型',\n    business_type VARCHAR(20) COMMENT '业务类型',\n    module VARCHAR(50) COMMENT '操作模块',\n    description VARCHAR(255) COMMENT '操作描述',\n    status TINYINT DEFAULT 0 COMMENT '操作状态(0-正常,1-异常)',\n    error_msg TEXT COMMENT '错误消息',\n    username VARCHAR(100) COMMENT '登录账号',\n    login_status TINYINT DEFAULT 0 COMMENT '登录状态(0-成功,1-失败)',\n    login_msg VARCHAR(255) COMMENT '登录信息',\n    login_time DATETIME COMMENT '登录时间',\n    logout_time DATETIME COMMENT '退出时间',\n    online_time BIGINT COMMENT '在线时长(分钟)',\n    session_id VARCHAR(100) COMMENT '会话ID',\n    login_type VARCHAR(20) COMMENT '登录类型(如：账号密码、手机验证码、微信等)',\n    login_ip VARCHAR(45) COMMENT '登录IP(支持IPv6)',\n    login_location VARCHAR(100) COMMENT '登录地点',\n    browser VARCHAR(50) COMMENT '浏览器类型',\n    os VARCHAR(50) COMMENT '操作系统',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_username (username),\n    INDEX idx_login_time (login_time),\n    INDEX idx_login_status (login_status),\n    INDEX idx_login_ip (login_ip)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='登录日志表';\n\n-- sys_system_log表（系统日志表）\nDROP TABLE IF EXISTS sys_system_log;\nCREATE TABLE sys_system_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '系统日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(100) COMMENT '操作人名称',\n    operate_type VARCHAR(20) COMMENT '操作类型',\n    business_type VARCHAR(20) COMMENT '业务类型',\n    module VARCHAR(50) COMMENT '操作模块',\n    description VARCHAR(255) COMMENT '操作描述',\n    status TINYINT DEFAULT 0 COMMENT '操作状态(0-正常,1-异常)',\n    error_msg TEXT COMMENT '错误消息',\n    system_module VARCHAR(50) COMMENT '系统模块',\n    function_name VARCHAR(100) COMMENT '功能名称',\n    method_name VARCHAR(100) COMMENT '方法名称',\n    request_method VARCHAR(10) COMMENT '请求方式',\n    request_url VARCHAR(255) COMMENT '请求URL',\n    request_params TEXT COMMENT '请求参数',\n    response_params TEXT COMMENT '返回参数',\n    execution_time BIGINT COMMENT '执行时间(毫秒)',\n    exception_info TEXT COMMENT '异常信息',\n    operator_ip VARCHAR(45) COMMENT '操作人IP(支持IPv6)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_system_module (system_module),\n    INDEX idx_function_name (function_name),\n    INDEX idx_status (status),\n    INDEX idx_create_time (create_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统日志表';\n\n-- sys_operation_log表（操作日志表）\nDROP TABLE IF EXISTS sys_operation_log;\nCREATE TABLE sys_operation_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '操作日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(100) COMMENT '操作人名称',\n    operate_type VARCHAR(20) COMMENT '操作类型',\n    business_type VARCHAR(20) COMMENT '业务类型',\n    module VARCHAR(50) COMMENT '操作模块',\n    description VARCHAR(255) COMMENT '操作描述',\n    status TINYINT DEFAULT 0 COMMENT '操作状态(0-正常,1-异常)',\n    error_msg TEXT COMMENT '错误消息',\n    target_id BIGINT COMMENT '操作对象ID',\n    target_type VARCHAR(50) COMMENT '操作对象类型',\n    target_name VARCHAR(100) COMMENT '操作对象名称',\n    method VARCHAR(100) COMMENT '操作方法',\n    params TEXT COMMENT '操作参数',\n    result TEXT COMMENT '操作结果',\n    cost_time BIGINT COMMENT '操作耗时(毫秒)',\n    source VARCHAR(50) COMMENT '操作来源(如：PC端、移动端等)',\n    operator_ip VARCHAR(45) COMMENT '操作人IP(支持IPv6)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_target_id (target_id),\n    INDEX idx_target_type (target_type),\n    INDEX idx_operate_type (operate_type),\n    INDEX idx_create_time (create_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='操作日志表';\n\n-- sys_business_log表（业务日志表）\nDROP TABLE IF EXISTS sys_business_log;\nCREATE TABLE sys_business_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '业务日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    operator_id BIGINT COMMENT '操作人ID',\n    operator_name VARCHAR(100) COMMENT '操作人名称',\n    operate_type VARCHAR(20) COMMENT '操作类型',\n    business_type VARCHAR(20) COMMENT '业务类型',\n    module VARCHAR(50) COMMENT '操作模块',\n    description VARCHAR(255) COMMENT '操作描述',\n    status TINYINT DEFAULT 0 COMMENT '操作状态(0-正常,1-异常)',\n    error_msg TEXT COMMENT '错误消息',\n    business_id VARCHAR(50) COMMENT '业务ID',\n    business_module VARCHAR(50) COMMENT '业务模块',\n    business_operation VARCHAR(50) COMMENT '业务操作',\n    business_data TEXT COMMENT '业务数据',\n    operator_ip VARCHAR(45) COMMENT '操作人IP(支持IPv6)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_operator_id (operator_id),\n    INDEX idx_business_id (business_id),\n    INDEX idx_business_module (business_module),\n    INDEX idx_create_time (create_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='业务日志表';\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 9849
    },
    {
      "path": "law-firm-core\\core-ai\\src\\main\\resources\\META-INF\\db\\migration\\V0065__init_ai_tables.sql",
      "filename": "V0065__init_ai_tables.sql",
      "version": 65,
      "module": "law-firm-core",
      "content": "-- Core-AI模块表结构初始化\n-- 版本: V0065\n-- 模块: AI智能模块 (V0060-V0069)\n-- 创建时间: 2023-07-01\n-- 说明: AI智能功能模块的完整表结构定义，基于ai-model模块中的实体类定义\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= AI智能模块核心表 =======================\n\n-- ai_model_config表（AI模型配置表）\nDROP TABLE IF EXISTS ai_model_config;\nCREATE TABLE ai_model_config (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'AI模型配置ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    model_id VARCHAR(50) NOT NULL COMMENT '模型ID',\n    model_name VARCHAR(100) NOT NULL COMMENT '模型名称',\n    provider VARCHAR(50) NOT NULL COMMENT '服务提供商(如OpenAI、百度等)',\n    model_type VARCHAR(30) NOT NULL COMMENT '模型类型',\n    api_version VARCHAR(20) COMMENT 'API版本',\n    model_version VARCHAR(20) COMMENT '模型版本',\n    endpoint VARCHAR(255) COMMENT '服务端点URL',\n    api_key VARCHAR(255) COMMENT 'API密钥(加密存储)',\n    max_tokens INT DEFAULT 2048 COMMENT '最大Token数',\n    temperature DOUBLE DEFAULT 0.7 COMMENT '温度参数(控制创造性，0-2)',\n    top_p DOUBLE DEFAULT 1.0 COMMENT 'Top P参数',\n    prompt_template TEXT COMMENT '提示词模板(系统提示词)',\n    last_used_time DATETIME COMMENT '最后使用时间',\n    config_json TEXT COMMENT '额外配置(JSON格式)',\n    description VARCHAR(255) COMMENT '描述',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_model_id (model_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_provider (provider),\n    INDEX idx_model_type (model_type),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='AI模型配置表';\n\n-- ai_conversation表（AI对话会话表）\nDROP TABLE IF EXISTS ai_conversation;\nCREATE TABLE ai_conversation (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'AI对话会话ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    conversation_id VARCHAR(36) NOT NULL COMMENT '会话ID(UUID)',\n    user_id VARCHAR(50) NOT NULL COMMENT '用户ID',\n    title VARCHAR(100) COMMENT '会话标题',\n    last_active_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '最后活动时间',\n    conversation_status TINYINT DEFAULT 0 COMMENT '会话状态(0-进行中,1-已结束,2-已归档)',\n    model_id VARCHAR(50) COMMENT '使用的AI模型ID',\n    message_count INT DEFAULT 0 COMMENT '消息数量',\n    summary TEXT COMMENT '会话摘要',\n    category VARCHAR(50) COMMENT '对话类别(如法律咨询、文档分析等)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_conversation_id (conversation_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_last_active_time (last_active_time),\n    INDEX idx_conversation_status (conversation_status),\n    INDEX idx_model_id (model_id),\n    \n    CONSTRAINT fk_ai_conversation_model FOREIGN KEY (model_id) REFERENCES ai_model_config(model_id) ON DELETE SET NULL\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='AI对话会话表';\n\n-- ai_message表（AI消息表）\nDROP TABLE IF EXISTS ai_message;\nCREATE TABLE ai_message (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'AI消息ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    message_id VARCHAR(36) NOT NULL COMMENT '消息ID(UUID)',\n    conversation_id VARCHAR(36) NOT NULL COMMENT '会话ID',\n    role VARCHAR(20) NOT NULL COMMENT '角色(user-用户,assistant-助手,system-系统)',\n    content TEXT NOT NULL COMMENT '消息内容',\n    tokens INT DEFAULT 0 COMMENT 'Token数量',\n    message_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '消息时间',\n    message_type VARCHAR(20) DEFAULT 'text' COMMENT '消息类型(text,image,file等)',\n    metadata TEXT COMMENT '元数据(JSON格式)',\n    parent_id VARCHAR(36) COMMENT '父消息ID',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_message_id (message_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_conversation_id (conversation_id),\n    INDEX idx_message_time (message_time),\n    INDEX idx_role (role),\n    INDEX idx_parent_id (parent_id),\n    \n    CONSTRAINT fk_ai_message_conversation FOREIGN KEY (conversation_id) REFERENCES ai_conversation(conversation_id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='AI消息表';\n\n-- ai_user_feedback表（AI用户反馈表）\nDROP TABLE IF EXISTS ai_user_feedback;\nCREATE TABLE ai_user_feedback (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT 'AI用户反馈ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    tenant_code VARCHAR(50) COMMENT '租户编码',\n    feedback_id VARCHAR(36) NOT NULL COMMENT '反馈ID(UUID)',\n    message_id VARCHAR(36) NOT NULL COMMENT '消息ID',\n    conversation_id VARCHAR(36) NOT NULL COMMENT '会话ID',\n    user_id VARCHAR(50) NOT NULL COMMENT '用户ID',\n    rating TINYINT COMMENT '评分(1-5)',\n    feedback_content TEXT COMMENT '反馈内容',\n    feedback_type VARCHAR(20) DEFAULT 'rating' COMMENT '反馈类型(rating,thumbs,comment)',\n    feedback_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '反馈时间',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    status TINYINT DEFAULT 0 COMMENT '状态(0-正常,1-禁用)',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    \n    UNIQUE KEY uk_feedback_id (feedback_id),\n    UNIQUE KEY uk_message_user (message_id, user_id),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_message_id (message_id),\n    INDEX idx_conversation_id (conversation_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_feedback_time (feedback_time),\n    INDEX idx_rating (rating),\n    \n    CONSTRAINT fk_ai_feedback_message FOREIGN KEY (message_id) REFERENCES ai_message(message_id) ON DELETE CASCADE,\n    CONSTRAINT fk_ai_feedback_conversation FOREIGN KEY (conversation_id) REFERENCES ai_conversation(conversation_id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='AI用户反馈表';\n\n-- 添加AI相关系统配置\n-- 使用统一的系统配置分组名称\"SYS_AI_CONFIG\"\n-- 配置按照功能分组批量插入\n\n-- 基础AI配置\nINSERT INTO sys_config (config_key, config_value, config_type, group_name, is_system, status, remark, create_by)\nVALUES \n('AI_ENABLED', 'true', 1, 'SYS_AI_CONFIG', 1, 1, 'AI功能启用状态', 'system'),\n('AI_DEFAULT_PROVIDER', 'OPENAI', 1, 'SYS_AI_CONFIG', 1, 1, '默认AI服务提供商(OPENAI/BAIDU/LOCAL等)', 'system'),\n('AI_MAX_TOKENS', '2048', 1, 'SYS_AI_CONFIG', 1, 1, 'AI最大Token数', 'system'),\n('AI_TEMPERATURE', '0.7', 1, 'SYS_AI_CONFIG', 1, 1, 'AI温度参数(0-2)', 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- OpenAI相关配置\nINSERT INTO sys_config (config_key, config_value, config_type, group_name, is_system, status, remark, create_by)\nVALUES \n('OPENAI_API_KEY', '', 1, 'SYS_AI_CONFIG', 1, 1, 'OpenAI API密钥', 'system'),\n('OPENAI_API_BASE_URL', 'https://api.openai.com/v1', 1, 'SYS_AI_CONFIG', 1, 1, 'OpenAI API基础URL', 'system'),\n('OPENAI_MODEL', 'gpt-3.5-turbo', 1, 'SYS_AI_CONFIG', 1, 1, 'OpenAI默认模型', 'system'),\n('OPENAI_TIMEOUT', '60000', 1, 'SYS_AI_CONFIG', 1, 1, 'OpenAI请求超时时间(毫秒)', 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 百度AI相关配置\nINSERT INTO sys_config (config_key, config_value, config_type, group_name, is_system, status, remark, create_by)\nVALUES \n('BAIDU_AI_API_KEY', '', 1, 'SYS_AI_CONFIG', 1, 1, '百度AI API密钥', 'system'),\n('BAIDU_AI_SECRET_KEY', '', 1, 'SYS_AI_CONFIG', 1, 1, '百度AI 密钥', 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 本地模型相关配置\nINSERT INTO sys_config (config_key, config_value, config_type, group_name, is_system, status, remark, create_by)\nVALUES \n('AI_LOCAL_EMBEDDING_MODEL', '', 1, 'SYS_AI_CONFIG', 1, 1, '本地嵌入模型路径', 'system'),\n('AI_LOCAL_LLM_MODEL', '', 1, 'SYS_AI_CONFIG', 1, 1, '本地LLM模型路径', 'system')\nON DUPLICATE KEY UPDATE update_time = NOW();\n\n-- 恢复外键检查\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 8883
    },
    {
      "path": "law-firm-api\\src\\main\\resources\\META-INF\\db\\migration\\V0001__init_base_tables.sql",
      "filename": "V0001__init_base_tables.sql",
      "version": 1,
      "module": "law-firm-api",
      "content": "-- API层基础表结构初始化\n-- 版本: V0001\n-- 模块: API (系统基础层)\n-- 创建时间: 2023-06-01\n-- 说明: 系统核心基础表，为所有业务模块提供基础支撑\n-- 包括：系统配置、数据字典、日志记录、文件存储等基础功能\n\n-- 设置字符集和数据库选项\nSET NAMES utf8mb4;\nSET FOREIGN_KEY_CHECKS = 0;\n\n-- ======================= 系统配置表 =======================\n\n-- sys_config表（系统配置表）\nDROP TABLE IF EXISTS sys_config;\nCREATE TABLE sys_config (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '配置ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    config_key VARCHAR(100) NOT NULL COMMENT '配置键',\n    config_value TEXT COMMENT '配置值',\n    config_type TINYINT DEFAULT 1 COMMENT '配置类型(1-字符串,2-数字,3-布尔,4-JSON)',\n    group_name VARCHAR(50) COMMENT '分组名称',\n    description VARCHAR(255) COMMENT '配置描述',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统配置(0-否,1-是)',\n    is_encrypted TINYINT DEFAULT 0 COMMENT '是否加密存储(0-否,1-是)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_config_key (tenant_id, config_key),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_group_name (group_name),\n    INDEX idx_is_system (is_system),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='系统配置表';\n\n-- ======================= 数据字典表 =======================\n\n-- sys_dict_type表（字典类型表）\nDROP TABLE IF EXISTS sys_dict_type;\nCREATE TABLE sys_dict_type (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '字典类型ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    dict_name VARCHAR(100) NOT NULL COMMENT '字典名称',\n    dict_type VARCHAR(100) NOT NULL COMMENT '字典类型',\n    description VARCHAR(255) COMMENT '字典描述',\n    is_system TINYINT DEFAULT 0 COMMENT '是否系统字典(0-否,1-是)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_dict_type (dict_type),\n    UNIQUE KEY uk_tenant_dict_type (tenant_id, dict_type),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_is_system (is_system),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='字典类型表';\n\n-- sys_dict_data表（字典数据表）\nDROP TABLE IF EXISTS sys_dict_data;\nCREATE TABLE sys_dict_data (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '字典数据ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    dict_type VARCHAR(100) NOT NULL COMMENT '字典类型',\n    dict_label VARCHAR(100) NOT NULL COMMENT '字典标签',\n    dict_value VARCHAR(100) NOT NULL COMMENT '字典值',\n    dict_sort INT DEFAULT 0 COMMENT '字典排序',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认(0-否,1-是)',\n    css_class VARCHAR(100) COMMENT 'CSS样式类',\n    list_class VARCHAR(100) COMMENT '表格样式类',\n    tag_type VARCHAR(20) COMMENT '标签类型',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_dict_type (dict_type),\n    INDEX idx_dict_sort (dict_sort),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_dict_data_type FOREIGN KEY (dict_type) REFERENCES sys_dict_type(dict_type) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='字典数据表';\n\n-- ======================= 系统日志表 =======================\n\n-- sys_login_log表（登录日志表）\nDROP TABLE IF EXISTS sys_login_log;\nCREATE TABLE sys_login_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    user_id BIGINT COMMENT '用户ID',\n    username VARCHAR(50) COMMENT '用户名',\n    login_type TINYINT DEFAULT 1 COMMENT '登录类型(1-账号密码,2-手机验证码,3-第三方)',\n    login_status TINYINT COMMENT '登录状态(0-失败,1-成功,2-登出)',\n    login_ip VARCHAR(45) COMMENT '登录IP(支持IPv6)',\n    login_location VARCHAR(100) COMMENT '登录地点',\n    user_agent TEXT COMMENT '用户代理信息',\n    browser VARCHAR(50) COMMENT '浏览器',\n    os VARCHAR(50) COMMENT '操作系统',\n    device_type VARCHAR(20) COMMENT '设备类型',\n    session_id VARCHAR(100) COMMENT '会话ID',\n    login_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '登录时间',\n    logout_time DATETIME COMMENT '登出时间',\n    online_duration INT COMMENT '在线时长(秒)',\n    failure_reason VARCHAR(255) COMMENT '失败原因',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_username (username),\n    INDEX idx_login_status (login_status),\n    INDEX idx_login_time (login_time),\n    INDEX idx_login_ip (login_ip)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='登录日志表';\n\n-- sys_operation_log表（操作日志表）\nDROP TABLE IF EXISTS sys_operation_log;\nCREATE TABLE sys_operation_log (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '日志ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    user_id BIGINT COMMENT '操作用户ID',\n    username VARCHAR(50) COMMENT '操作用户名',\n    operation_type VARCHAR(20) COMMENT '操作类型(CREATE,UPDATE,DELETE,QUERY)',\n    module VARCHAR(50) COMMENT '操作模块',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    business_id VARCHAR(100) COMMENT '业务ID',\n    operation_desc VARCHAR(255) COMMENT '操作描述',\n    request_method VARCHAR(10) COMMENT '请求方法',\n    request_url VARCHAR(255) COMMENT '请求URL',\n    request_params TEXT COMMENT '请求参数',\n    response_result TEXT COMMENT '响应结果',\n    operation_status TINYINT DEFAULT 1 COMMENT '操作状态(0-失败,1-成功)',\n    error_msg TEXT COMMENT '错误信息',\n    operation_ip VARCHAR(45) COMMENT '操作IP',\n    operation_location VARCHAR(100) COMMENT '操作地点',\n    user_agent TEXT COMMENT '用户代理',\n    execution_time INT COMMENT '执行时长(毫秒)',\n    operation_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_user_id (user_id),\n    INDEX idx_username (username),\n    INDEX idx_operation_type (operation_type),\n    INDEX idx_module (module),\n    INDEX idx_business_type (business_type),\n    INDEX idx_operation_status (operation_status),\n    INDEX idx_operation_time (operation_time)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='操作日志表';\n\n-- ======================= 文件存储表 =======================\n\n-- storage_bucket表（存储桶表）\nDROP TABLE IF EXISTS storage_bucket;\nCREATE TABLE storage_bucket (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '存储桶ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    bucket_name VARCHAR(100) NOT NULL COMMENT '存储桶名称',\n    storage_type TINYINT NOT NULL COMMENT '存储类型(1-本地,2-MinIO,3-阿里云OSS,4-腾讯云COS,5-AWS S3)',\n    endpoint VARCHAR(255) COMMENT '存储端点',\n    access_key VARCHAR(100) COMMENT '访问密钥',\n    secret_key VARCHAR(255) COMMENT '密钥',\n    region VARCHAR(50) COMMENT '区域',\n    bucket_policy TEXT COMMENT '存储桶策略',\n    is_default TINYINT DEFAULT 0 COMMENT '是否默认(0-否,1-是)',\n    is_public TINYINT DEFAULT 0 COMMENT '是否公开(0-否,1-是)',\n    max_file_size BIGINT DEFAULT 104857600 COMMENT '最大文件大小(字节)',\n    allowed_extensions TEXT COMMENT '允许的文件扩展名(JSON格式)',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    UNIQUE KEY uk_tenant_bucket_name (tenant_id, bucket_name),\n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_storage_type (storage_type),\n    INDEX idx_is_default (is_default),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='存储桶表';\n\n-- storage_file表（文件信息表）\nDROP TABLE IF EXISTS storage_file;\nCREATE TABLE storage_file (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '文件ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    bucket_id BIGINT NOT NULL COMMENT '存储桶ID',\n    file_name VARCHAR(255) NOT NULL COMMENT '文件名称',\n    original_name VARCHAR(255) NOT NULL COMMENT '原始文件名',\n    file_path VARCHAR(500) NOT NULL COMMENT '文件路径',\n    file_url VARCHAR(500) COMMENT '文件访问URL',\n    file_size BIGINT NOT NULL COMMENT '文件大小(字节)',\n    file_type VARCHAR(50) COMMENT '文件类型',\n    file_extension VARCHAR(20) COMMENT '文件扩展名',\n    mime_type VARCHAR(100) COMMENT 'MIME类型',\n    md5_hash VARCHAR(32) COMMENT 'MD5哈希值',\n    sha1_hash VARCHAR(40) COMMENT 'SHA1哈希值',\n    upload_user_id BIGINT COMMENT '上传用户ID',\n    upload_ip VARCHAR(45) COMMENT '上传IP',\n    business_type VARCHAR(50) COMMENT '业务类型',\n    business_id VARCHAR(100) COMMENT '业务ID',\n    is_temp TINYINT DEFAULT 0 COMMENT '是否临时文件(0-否,1-是)',\n    expire_time DATETIME COMMENT '过期时间',\n    download_count INT DEFAULT 0 COMMENT '下载次数',\n    last_access_time DATETIME COMMENT '最后访问时间',\n    status TINYINT DEFAULT 1 COMMENT '状态(0-禁用,1-正常)',\n    version INT DEFAULT 0 COMMENT '乐观锁版本号',\n    deleted TINYINT DEFAULT 0 COMMENT '删除标记(0-正常,1-删除)',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    create_by VARCHAR(50) COMMENT '创建人',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    update_by VARCHAR(50) COMMENT '更新人',\n    remark VARCHAR(255) COMMENT '备注',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_bucket_id (bucket_id),\n    INDEX idx_file_name (file_name),\n    INDEX idx_original_name (original_name),\n    INDEX idx_file_type (file_type),\n    INDEX idx_md5_hash (md5_hash),\n    INDEX idx_upload_user_id (upload_user_id),\n    INDEX idx_business_type_id (business_type, business_id),\n    INDEX idx_is_temp (is_temp),\n    INDEX idx_status (status),\n    \n    CONSTRAINT fk_storage_file_bucket FOREIGN KEY (bucket_id) REFERENCES storage_bucket(id) ON DELETE CASCADE\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='文件信息表';\n\n-- ======================= 系统监控表 =======================\n\n-- sys_server_monitor表（服务器监控表）\nDROP TABLE IF EXISTS sys_server_monitor;\nCREATE TABLE sys_server_monitor (\n    id BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '监控ID',\n    tenant_id BIGINT DEFAULT 0 COMMENT '租户ID',\n    server_name VARCHAR(100) NOT NULL COMMENT '服务器名称',\n    server_ip VARCHAR(45) NOT NULL COMMENT '服务器IP',\n    cpu_usage DECIMAL(5,2) COMMENT 'CPU使用率',\n    memory_usage DECIMAL(5,2) COMMENT '内存使用率',\n    disk_usage DECIMAL(5,2) COMMENT '磁盘使用率',\n    network_rx BIGINT COMMENT '网络入流量(字节)',\n    network_tx BIGINT COMMENT '网络出流量(字节)',\n    server_load VARCHAR(100) COMMENT '系统负载',\n    monitor_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '监控时间',\n    version INT DEFAULT 0 COMMENT '版本号',\n    status INT DEFAULT 0 COMMENT '状态',\n    sort INT DEFAULT 0 COMMENT '排序号',\n    deleted INT DEFAULT 0 COMMENT '删除标记',\n    create_time DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',\n    update_time DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',\n    \n    INDEX idx_tenant_id (tenant_id),\n    INDEX idx_server_ip (server_ip),\n    INDEX idx_monitor_time (monitor_time),\n    INDEX idx_status (status)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='服务器监控表';\n\n-- 恢复外键约束\nSET FOREIGN_KEY_CHECKS = 1; ",
      "size": 12105
    },
    {
      "path": "law-firm-api\\src\\main\\resources\\META-INF\\db\\migration\\V0002__init_base_data.sql",
      "filename": "V0002__init_base_data.sql",
      "version": 2,
      "module": "law-firm-api",
      "content": "-- API层基础数据初始化\n-- 版本: V0002\n-- 模块: API (系统基础层)\n-- 创建时间: 2023-06-01\n-- 说明: 初始化系统运行必需的基础数据\n-- 包括：系统配置、数据字典、存储桶等基础数据\n\n-- 设置字符集\nSET NAMES utf8mb4;\n\n-- ======================= 系统配置数据 =======================\n\n-- 系统基础配置\nINSERT INTO sys_config (config_key, config_value, config_type, group_name, description, is_system, sort, create_by) VALUES\n('system.name', '律师事务所管理系统', 1, 'system', '系统名称', 1, 1, 'system'),\n('system.version', '1.0.0', 1, 'system', '系统版本', 1, 2, 'system'),\n('system.copyright', '© 2023 律师事务所管理系统', 1, 'system', '版权信息', 1, 3, 'system'),\n('system.logo', '/static/images/logo.png', 1, 'system', '系统Logo', 1, 4, 'system'),\n('system.favicon', '/static/images/favicon.ico', 1, 'system', '网站图标', 1, 5, 'system'),\n\n-- 安全配置\n('security.password.min.length', '8', 2, 'security', '密码最小长度', 1, 10, 'system'),\n('security.password.max.length', '20', 2, 'security', '密码最大长度', 1, 11, 'system'),\n('security.password.require.special', 'true', 3, 'security', '密码是否需要特殊字符', 1, 12, 'system'),\n('security.login.max.attempts', '5', 2, 'security', '登录最大尝试次数', 1, 13, 'system'),\n('security.session.timeout', '1800', 2, 'security', '会话超时时间(秒)', 1, 14, 'system'),\n\n-- 文件上传配置\n('upload.max.file.size', '104857600', 2, 'upload', '最大文件大小(字节)', 1, 20, 'system'),\n('upload.allowed.extensions', '[\"jpg\",\"jpeg\",\"png\",\"gif\",\"pdf\",\"doc\",\"docx\",\"xls\",\"xlsx\",\"ppt\",\"pptx\",\"txt\",\"zip\",\"rar\"]', 4, 'upload', '允许的文件扩展名', 1, 21, 'system'),\n('upload.image.max.width', '1920', 2, 'upload', '图片最大宽度', 1, 22, 'system'),\n('upload.image.max.height', '1080', 2, 'upload', '图片最大高度', 1, 23, 'system'),\n\n-- 邮件配置\n('mail.smtp.host', 'smtp.qq.com', 1, 'mail', 'SMTP服务器', 1, 30, 'system'),\n('mail.smtp.port', '587', 2, 'mail', 'SMTP端口', 1, 31, 'system'),\n('mail.smtp.username', '', 1, 'mail', 'SMTP用户名', 1, 32, 'system'),\n('mail.smtp.password', '', 1, 'mail', 'SMTP密码', 1, 33, 'system'),\n('mail.smtp.ssl.enable', 'true', 3, 'mail', '是否启用SSL', 1, 34, 'system');\n\n-- ======================= 数据字典类型 =======================\n\nINSERT INTO sys_dict_type (dict_name, dict_type, description, is_system, sort, create_by) VALUES\n('用户状态', 'user_status', '用户账号状态', 1, 1, 'system'),\n('性别', 'gender', '性别类型', 1, 2, 'system'),\n('学历', 'education', '教育程度', 1, 3, 'system'),\n('职业类型', 'profession_type', '职业分类', 1, 4, 'system'),\n('案件状态', 'case_status', '案件处理状态', 1, 5, 'system'),\n('案件类型', 'case_type', '案件分类', 1, 6, 'system'),\n('案件优先级', 'case_priority', '案件优先级别', 1, 7, 'system'),\n('文档类型', 'document_type', '文档分类', 1, 8, 'system'),\n('通知类型', 'notice_type', '通知分类', 1, 9, 'system'),\n('操作类型', 'operation_type', '系统操作类型', 1, 10, 'system'),\n('存储类型', 'storage_type', '文件存储类型', 1, 11, 'system'),\n('登录类型', 'login_type', '登录方式', 1, 12, 'system'),\n('设备类型', 'device_type', '设备分类', 1, 13, 'system'),\n('数据状态', 'data_status', '数据记录状态', 1, 14, 'system'),\n('审核状态', 'audit_status', '审核流程状态', 1, 15, 'system');\n\n-- ======================= 数据字典数据 =======================\n\n-- 用户状态\nINSERT INTO sys_dict_data (dict_type, dict_label, dict_value, dict_sort, is_default, css_class, list_class, tag_type, create_by) VALUES\n('user_status', '正常', '1', 1, 1, '', 'success', 'success', 'system'),\n('user_status', '禁用', '0', 2, 0, '', 'danger', 'danger', 'system'),\n('user_status', '锁定', '2', 3, 0, '', 'warning', 'warning', 'system'),\n\n-- 性别\n('gender', '男', '1', 1, 0, '', 'primary', 'primary', 'system'),\n('gender', '女', '2', 2, 0, '', 'danger', 'danger', 'system'),\n('gender', '未知', '0', 3, 1, '', 'info', 'info', 'system'),\n\n-- 学历\n('education', '小学', '1', 1, 0, '', '', '', 'system'),\n('education', '初中', '2', 2, 0, '', '', '', 'system'),\n('education', '高中', '3', 3, 0, '', '', '', 'system'),\n('education', '中专', '4', 4, 0, '', '', '', 'system'),\n('education', '大专', '5', 5, 0, '', '', '', 'system'),\n('education', '本科', '6', 6, 1, '', '', '', 'system'),\n('education', '硕士', '7', 7, 0, '', '', '', 'system'),\n('education', '博士', '8', 8, 0, '', '', '', 'system'),\n\n-- 职业类型\n('profession_type', '律师', '1', 1, 1, '', 'primary', 'primary', 'system'),\n('profession_type', '律师助理', '2', 2, 0, '', 'success', 'success', 'system'),\n('profession_type', '实习律师', '3', 3, 0, '', 'warning', 'warning', 'system'),\n('profession_type', '法务专员', '4', 4, 0, '', 'info', 'info', 'system'),\n('profession_type', '行政人员', '5', 5, 0, '', 'secondary', 'secondary', 'system'),\n\n-- 案件状态\n('case_status', '待接收', '1', 1, 1, '', 'warning', 'warning', 'system'),\n('case_status', '进行中', '2', 2, 0, '', 'primary', 'primary', 'system'),\n('case_status', '已完成', '3', 3, 0, '', 'success', 'success', 'system'),\n('case_status', '已关闭', '4', 4, 0, '', 'secondary', 'secondary', 'system'),\n('case_status', '已暂停', '5', 5, 0, '', 'danger', 'danger', 'system'),\n\n-- 案件类型\n('case_type', '民事诉讼', '1', 1, 0, '', '', '', 'system'),\n('case_type', '刑事辩护', '2', 2, 0, '', '', '', 'system'),\n('case_type', '行政诉讼', '3', 3, 0, '', '', '', 'system'),\n('case_type', '商事仲裁', '4', 4, 0, '', '', '', 'system'),\n('case_type', '法律顾问', '5', 5, 1, '', '', '', 'system'),\n('case_type', '合同纠纷', '6', 6, 0, '', '', '', 'system'),\n('case_type', '劳动争议', '7', 7, 0, '', '', '', 'system'),\n('case_type', '知识产权', '8', 8, 0, '', '', '', 'system'),\n('case_type', '房产纠纷', '9', 9, 0, '', '', '', 'system'),\n('case_type', '婚姻家庭', '10', 10, 0, '', '', '', 'system'),\n\n-- 案件优先级\n('case_priority', '低', '1', 1, 0, '', 'info', 'info', 'system'),\n('case_priority', '中', '2', 2, 1, '', 'warning', 'warning', 'system'),\n('case_priority', '高', '3', 3, 0, '', 'danger', 'danger', 'system'),\n('case_priority', '紧急', '4', 4, 0, '', 'danger', 'danger', 'system'),\n\n-- 文档类型\n('document_type', '合同文件', '1', 1, 0, '', '', '', 'system'),\n('document_type', '法律文书', '2', 2, 0, '', '', '', 'system'),\n('document_type', '证据材料', '3', 3, 0, '', '', '', 'system'),\n('document_type', '委托书', '4', 4, 0, '', '', '', 'system'),\n('document_type', '判决书', '5', 5, 0, '', '', '', 'system'),\n('document_type', '调解书', '6', 6, 0, '', '', '', 'system'),\n('document_type', '其他文档', '99', 99, 1, '', '', '', 'system'),\n\n-- 通知类型\n('notice_type', '系统通知', '1', 1, 1, '', 'primary', 'primary', 'system'),\n('notice_type', '案件提醒', '2', 2, 0, '', 'warning', 'warning', 'system'),\n('notice_type', '任务提醒', '3', 3, 0, '', 'info', 'info', 'system'),\n('notice_type', '审批通知', '4', 4, 0, '', 'success', 'success', 'system'),\n\n-- 操作类型\n('operation_type', '创建', 'CREATE', 1, 0, '', 'success', 'success', 'system'),\n('operation_type', '更新', 'UPDATE', 2, 0, '', 'primary', 'primary', 'system'),\n('operation_type', '删除', 'DELETE', 3, 0, '', 'danger', 'danger', 'system'),\n('operation_type', '查询', 'QUERY', 4, 1, '', 'info', 'info', 'system'),\n('operation_type', '导入', 'IMPORT', 5, 0, '', 'warning', 'warning', 'system'),\n('operation_type', '导出', 'EXPORT', 6, 0, '', 'secondary', 'secondary', 'system'),\n\n-- 存储类型\n('storage_type', '本地存储', '1', 1, 1, '', '', '', 'system'),\n('storage_type', 'MinIO', '2', 2, 0, '', '', '', 'system'),\n('storage_type', '阿里云OSS', '3', 3, 0, '', '', '', 'system'),\n('storage_type', '腾讯云COS', '4', 4, 0, '', '', '', 'system'),\n('storage_type', 'AWS S3', '5', 5, 0, '', '', '', 'system'),\n\n-- 登录类型\n('login_type', '账号密码', '1', 1, 1, '', '', '', 'system'),\n('login_type', '手机验证码', '2', 2, 0, '', '', '', 'system'),\n('login_type', '第三方登录', '3', 3, 0, '', '', '', 'system'),\n\n-- 设备类型\n('device_type', '桌面端', 'desktop', 1, 1, '', '', '', 'system'),\n('device_type', '移动端', 'mobile', 2, 0, '', '', '', 'system'),\n('device_type', '平板端', 'tablet', 3, 0, '', '', '', 'system'),\n\n-- 数据状态\n('data_status', '正常', '1', 1, 1, '', 'success', 'success', 'system'),\n('data_status', '禁用', '0', 2, 0, '', 'danger', 'danger', 'system'),\n\n-- 审核状态\n('audit_status', '待审核', '1', 1, 1, '', 'warning', 'warning', 'system'),\n('audit_status', '审核通过', '2', 2, 0, '', 'success', 'success', 'system'),\n('audit_status', '审核拒绝', '3', 3, 0, '', 'danger', 'danger', 'system');\n\n-- ======================= 存储桶配置 =======================\n\n-- 默认本地存储桶\nINSERT INTO storage_bucket (bucket_name, storage_type, endpoint, is_default, is_public, max_file_size, allowed_extensions, sort, create_by, remark) VALUES\n('default-local', 1, '/upload', 1, 0, 104857600, '[\"jpg\",\"jpeg\",\"png\",\"gif\",\"pdf\",\"doc\",\"docx\",\"xls\",\"xlsx\",\"ppt\",\"pptx\",\"txt\",\"zip\",\"rar\"]', 1, 'system', '默认本地存储桶'),\n('images', 1, '/upload/images', 0, 1, 10485760, '[\"jpg\",\"jpeg\",\"png\",\"gif\",\"webp\",\"svg\"]', 2, 'system', '图片存储桶'),\n('documents', 1, '/upload/documents', 0, 0, 52428800, '[\"pdf\",\"doc\",\"docx\",\"xls\",\"xlsx\",\"ppt\",\"pptx\",\"txt\"]', 3, 'system', '文档存储桶'),\n('temp', 1, '/upload/temp', 0, 0, 104857600, '[\"jpg\",\"jpeg\",\"png\",\"gif\",\"pdf\",\"doc\",\"docx\",\"xls\",\"xlsx\",\"ppt\",\"pptx\",\"txt\",\"zip\",\"rar\"]', 4, 'system', '临时文件存储桶'); ",
      "size": 8531
    },
    {
      "path": "law-firm-api\\src\\main\\resources\\META-INF\\db\\migration\\V0003__module_description.sql",
      "filename": "V0003__module_description.sql",
      "version": 3,
      "module": "law-firm-api",
      "content": "-- 系统模块架构说明\n-- 版本: V0003\n-- 模块: API (系统基础层)\n-- 创建时间: 2023-06-01\n-- 说明: 系统整体架构和模块划分说明文档\n\n/*\n=============================================================================\n                        律师事务所管理系统 - 数据库架构说明\n=============================================================================\n\n一、系统架构层次\n├── API层 (V0001-V0999)     - 系统基础层，提供核心基础服务\n├── 系统模块 (V1000-V1999)   - 系统管理功能\n├── 认证模块 (V2000-V2999)   - 用户认证与权限管理\n├── 人员模块 (V3000-V3999)   - 人员信息管理\n├── 案件模块 (V4000-V4999)   - 案件业务管理\n└── 扩展模块 (V5000+)       - 未来功能扩展\n\n二、版本号规划\n- V0001-V0999:  API基础层 (系统配置、字典、日志、存储等)\n- V1000-V1999:  系统管理 (菜单、角色、组织、定时任务等)\n- V2000-V2999:  认证授权 (用户、权限、数据权限等)\n- V3000-V3999:  人员管理 (律师、员工、客户、联系人等)\n- V4000-V4999:  案件管理 (案件、文档、任务、费用等)\n- V5000+:       扩展功能 (财务、报表、工作流等)\n\n三、标准脚本结构\n每个模块包含3个标准脚本：\n- V[模块]000: 模块说明文档\n- V[模块]001: 表结构定义\n- V[模块]002: 基础数据初始化\n\n四、API层基础表 (V0001)\n=============================================================================\n1. 系统配置表\n   - sys_config: 系统配置参数\n\n2. 数据字典表\n   - sys_dict_type: 字典类型定义\n   - sys_dict_data: 字典数据项\n\n3. 系统日志表\n   - sys_login_log: 登录日志\n   - sys_operation_log: 操作日志\n\n4. 文件存储表\n   - storage_bucket: 存储桶配置\n   - storage_file: 文件信息\n\n5. 系统监控表\n   - sys_monitor_server: 服务器监控\n\n五、数据库设计规范\n=============================================================================\n1. 命名规范\n   - 表名: 小写字母+下划线，模块前缀\n   - 字段名: 小写字母+下划线\n   - 索引名: idx_字段名 或 uk_字段名(唯一)\n   - 外键名: fk_表名_字段名\n\n2. 字段规范\n   - 主键: id BIGINT PRIMARY KEY AUTO_INCREMENT\n   - 租户: tenant_id BIGINT DEFAULT 0\n   - 状态: status TINYINT DEFAULT 1 (0-禁用,1-正常)\n   - 删除: deleted TINYINT DEFAULT 0 (0-正常,1-删除)\n   - 版本: version INT DEFAULT 0 (乐观锁)\n   - 排序: sort INT DEFAULT 0\n   - 时间: create_time, update_time DATETIME\n   - 操作人: create_by, update_by VARCHAR(50)\n   - 备注: remark VARCHAR(255)\n\n3. 字符集规范\n   - 统一使用: utf8mb4\n   - 排序规则: utf8mb4_unicode_ci\n   - 存储引擎: InnoDB\n\n4. 索引规范\n   - 主键索引: 自动创建\n   - 唯一索引: 业务唯一字段\n   - 普通索引: 查询频繁字段\n   - 复合索引: 多字段组合查询\n\n5. 外键规范\n   - 明确定义外键约束\n   - 级联删除: ON DELETE CASCADE (谨慎使用)\n   - 级联更新: ON UPDATE CASCADE\n\n六、业务模块说明\n=============================================================================\n1. 系统管理模块 (V1000+)\n   - 菜单管理: 系统菜单结构\n   - 角色管理: 角色权限分配\n   - 组织管理: 组织架构管理\n   - 定时任务: 系统定时任务\n\n2. 认证授权模块 (V2000+)\n   - 用户管理: 用户账号信息\n   - 权限管理: 功能权限控制\n   - 数据权限: 数据访问控制\n   - 登录认证: 登录验证机制\n\n3. 人员管理模块 (V3000+)\n   - 人员基础: 个人基本信息\n   - 律师管理: 律师专业信息\n   - 员工管理: 员工工作信息\n   - 客户管理: 客户关系管理\n\n4. 案件管理模块 (V4000+)\n   - 案件信息: 案件基本信息\n   - 案件文档: 案件相关文档\n   - 案件任务: 案件处理任务\n   - 费用管理: 案件费用核算\n\n七、数据安全与性能\n=============================================================================\n1. 数据安全\n   - 软删除: 使用deleted字段标记\n   - 数据加密: 敏感信息加密存储\n   - 访问控制: 基于角色的权限控制\n   - 审计日志: 完整的操作日志记录\n\n2. 性能优化\n   - 索引优化: 合理创建索引\n   - 分页查询: 避免全表扫描\n   - 缓存策略: 热点数据缓存\n   - 读写分离: 主从数据库分离\n\n3. 数据一致性\n   - 事务控制: 保证数据一致性\n   - 乐观锁: 防止并发更新冲突\n   - 外键约束: 保证引用完整性\n   - 数据校验: 业务规则校验\n\n八、部署与维护\n=============================================================================\n1. 环境要求\n   - MySQL 8.0+\n   - 字符集: utf8mb4\n   - 时区: Asia/Shanghai\n   - 存储引擎: InnoDB\n\n2. 初始化步骤\n   1. 创建数据库\n   2. 执行API层脚本 (V0001-V0003)\n   3. 执行业务模块脚本 (V1000+)\n   4. 验证数据完整性\n\n3. 维护建议\n   - 定期备份数据库\n   - 监控数据库性能\n   - 定期清理日志数据\n   - 更新统计信息\n\n=============================================================================\n                              文档版本: 1.0.0\n                              最后更新: 2023-06-01\n                              维护人员: 系统管理员\n=============================================================================\n*/\n\n-- 此脚本仅包含说明文档，不执行任何SQL操作\nSELECT '系统模块架构说明文档已加载' AS message; ",
      "size": 3462
    }
  ],
  "execution_order": [
    "V0001__init_base_tables.sql",
    "V0002__init_base_data.sql",
    "V0003__module_description.sql",
    "V0050__init_audit_tables.sql",
    "V0055__init_storage_tables.sql",
    "V0060__init_search_tables.sql",
    "V0065__init_ai_tables.sql",
    "V0070__init_message_tables.sql",
    "V0075__init_workflow_tables.sql",
    "V1000__system_module_description.sql",
    "V1001__system_tables.sql",
    "V1002__system_data.sql",
    "V2000__auth_module_description.sql",
    "V2001__init_auth_tables.sql",
    "V2002__init_auth_data.sql",
    "V3000__personnel_module_description.sql",
    "V3001__init_personnel_tables.sql",
    "V3002__init_personnel_data.sql",
    "V4000__case_module_description.sql",
    "V4001__init_case_tables.sql",
    "V4002__init_case_data.sql",
    "V5000__client_module_description.sql",
    "V5001__init_client_tables.sql",
    "V5002__init_client_data.sql",
    "V6000__contract_module_description.sql",
    "V6001__init_contract_tables.sql",
    "V6002__init_contract_data.sql",
    "V7000__document_module_description.sql",
    "V7001__init_document_tables.sql",
    "V7002__init_document_data.sql",
    "V8000__archive_module_description.sql",
    "V8001__init_archive_tables.sql",
    "V8002__init_archive_data.sql",
    "V9000__evidence_module_description.sql",
    "V9001__init_evidence_tables.sql",
    "V9002__init_evidence_data.sql",
    "V10000__finance_module_description.sql",
    "V10001__init_finance_tables.sql",
    "V10002__init_finance_data.sql",
    "V11000__knowledge_module_description.sql",
    "V11001__init_knowledge_tables.sql",
    "V11002__init_knowledge_data.sql",
    "V12000__schedule_module_description.sql",
    "V12001__init_schedule_tables.sql",
    "V12002__init_schedule_data.sql",
    "V13000__task_module_description.sql",
    "V13001__init_task_tables.sql",
    "V13002__init_task_data.sql",
    "V14000__analysis_module_description.sql",
    "V14001__init_analysis_tables.sql",
    "V14002__init_analysis_data.sql"
  ],
  "version_conflicts": [],
  "errors": [],
  "warnings": [],
  "modules": {
    "law-firm-modules": {
      "count": 42,
      "versions": [
        1000,
        1001,
        1002,
        2000,
        2001,
        2002,
        3000,
        3001,
        3002,
        4000,
        4001,
        4002,
        5000,
        5001,
        5002,
        6000,
        6001,
        6002,
        7000,
        7001,
        7002,
        8000,
        8001,
        8002,
        9000,
        9001,
        9002,
        10000,
        10001,
        10002,
        11000,
        11001,
        11002,
        12000,
        12001,
        12002,
        13000,
        13001,
        13002,
        14000,
        14001,
        14002
      ]
    },
    "law-firm-core": {
      "count": 6,
      "versions": [
        50,
        55,
        60,
        65,
        70,
        75
      ]
    },
    "law-firm-api": {
      "count": 3,
      "versions": [
        1,
        2,
        3
      ]
    }
  }
}